{"version":3,"file":"5174.3dbc9502.iframe.bundle.js","mappings":"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","sources":["webpack://root/./packages/core/src/data-editor/stories/utils.tsx","webpack://root/./packages/core/src/data-editor/stories/utils.tsx?3e48","webpack://root/./packages/core/src/data-editor/stories/utils.tsx?b1f3"],"sourcesContent":["/* eslint-disable sonarjs/no-identical-functions */\nimport * as React from \"react\";\n\nimport {\n    type EditableGridCell,\n    type GridCell,\n    GridCellKind,\n    type GridColumn,\n    GridColumnIcon,\n    isEditableGridCell,\n    isTextEditableGridCell,\n    type Item,\n} from \"../../internal/data-grid/data-grid-types.js\";\nimport { faker } from \"@faker-js/faker\";\nimport { styled } from \"@linaria/react\";\nimport isArray from \"lodash/isArray.js\";\nimport { assertNever } from \"../../common/support.js\";\nimport { browserIsFirefox } from \"../../common/browser-detect.js\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport type { DataEditorProps } from \"../data-editor.js\";\nimport noop from \"lodash/noop.js\";\n\nfaker.seed(1337);\n\nfunction isTruthy(x: any): boolean {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    return x ? true : false;\n}\n\n/**\n * Attempts to copy data between grid cells of any kind.\n */\nexport function lossyCopyData<T extends EditableGridCell>(source: EditableGridCell, target: T): EditableGridCell {\n    const sourceData = source.data;\n    if (typeof sourceData === typeof target.data) {\n        return {\n            ...target,\n            data: sourceData as any,\n        };\n    } else\n        switch (target.kind) {\n            case GridCellKind.Uri: {\n                if (isArray(sourceData)) {\n                    return {\n                        ...target,\n                        data: sourceData[0],\n                    };\n                }\n                return {\n                    ...target,\n                    data: sourceData?.toString() ?? \"\",\n                };\n            }\n            case GridCellKind.Boolean: {\n                if (isArray(sourceData)) {\n                    return {\n                        ...target,\n                        data: sourceData[0] !== undefined,\n                    };\n                } else if (source.kind === GridCellKind.Boolean) {\n                    return {\n                        ...target,\n                        data: source.data,\n                    };\n                }\n                return {\n                    ...target,\n                    data: isTruthy(sourceData) ? true : false,\n                };\n            }\n            case GridCellKind.Image: {\n                if (isArray(sourceData)) {\n                    return {\n                        ...target,\n                        data: [sourceData[0]],\n                    };\n                }\n                return {\n                    ...target,\n                    data: [sourceData?.toString() ?? \"\"],\n                };\n            }\n            case GridCellKind.Number: {\n                return {\n                    ...target,\n                    data: 0,\n                };\n            }\n            case GridCellKind.Text:\n            case GridCellKind.Markdown: {\n                if (isArray(sourceData)) {\n                    return {\n                        ...target,\n                        data: sourceData[0].toString() ?? \"\",\n                    };\n                }\n\n                return {\n                    ...target,\n                    data: source.data?.toString() ?? \"\",\n                };\n            }\n            case GridCellKind.Custom: {\n                return target;\n            }\n            // No default\n        }\n    assertNever(target);\n}\n\nexport type GridColumnWithMockingInfo = GridColumn & {\n    getContent(): GridCell;\n};\n\nexport function getGridColumn(columnWithMock: GridColumnWithMockingInfo): GridColumn {\n    const { getContent, ...rest } = columnWithMock;\n\n    return rest;\n}\n\nexport const ColumnAddButton = styled.div`\n    width: 120px;\n    display: flex;\n    flex-direction: column;\n    background-color: #f1f1f1;\n    height: 100%;\n    button {\n        border: none;\n        outline: none;\n        height: 37px;\n        width: 120px;\n        font-size: 20px;\n        background-color: #f7f7f8;\n        color: #000000dd;\n        border-bottom: 1px solid #e1e2e5;\n\n        transition: background-color 200ms;\n\n        cursor: pointer;\n        :hover {\n            background-color: #efeff1;\n        }\n    }\n`;\n\nexport const BeautifulStyle = styled.div`\n    background-color: #2790b9;\n    background: linear-gradient(90deg, #2790b9, #2070a9);\n    color: white;\n\n    padding: 32px 48px;\n\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n\n    font-family: sans-serif;\n\n    &.double {\n        height: 200vh;\n    }\n\n    & > h1 {\n        font-size: 50px;\n        font-weight: 600;\n        flex-shrink: 0;\n        margin: 0 0 12px 0;\n    }\n\n    .sizer {\n        flex-grow: 1;\n\n        background-color: white;\n\n        border-radius: 12px;\n        box-shadow:\n            rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\n            rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\n\n        .sizer-clip {\n            border-radius: 12px;\n            overflow: hidden;\n            transform: translateZ(0);\n\n            height: 100%;\n        }\n    }\n\n    &.firefox .sizer {\n        border-radius: 0;\n        box-shadow: unset;\n\n        .sizer-clip {\n            border-radius: 0;\n        }\n    }\n\n    .white {\n        background-color: white;\n    }\n`;\n\nexport const PropName = styled.span`\n    font-family: monospace;\n    font-weight: 500;\n    color: #ffe394;\n`;\n\nexport const Description = styled.p`\n    font-size: 18px;\n    flex-shrink: 0;\n    margin: 0 0 20px 0;\n`;\n\nexport const MoreInfo = styled.p`\n    font-size: 14px;\n    flex-shrink: 0;\n    margin: 0 0 20px 0;\n\n    button {\n        background-color: #f4f4f4;\n        color: #2b2b2b;\n        padding: 2px 6px;\n        font-family: monospace;\n        font-size: 14px;\n        border-radius: 4px;\n        box-shadow: 0px 1px 2px #00000040;\n        margin: 0 0.1em;\n        border: none;\n        cursor: pointer;\n    }\n`;\n\ninterface BeautifulProps {\n    title: string;\n    description?: React.ReactNode;\n    className?: string;\n    scale?: string;\n}\n\nexport const BeautifulWrapper: React.FC<BeautifulProps> = p => {\n    const { title, children, description, className, scale } = p;\n\n    const { ref, width, height } = useResizeDetector();\n\n    return (\n        <BeautifulStyle className={className + (browserIsFirefox.value ? \" firefox\" : \"\")}>\n            <h1>{title}</h1>\n            {description}\n            <div style={{ scale }} className=\"sizer\">\n                <div className=\"sizer-clip\" ref={ref}>\n                    <div\n                        style={{\n                            position: \"relative\",\n                            width: width ?? 100,\n                            height: height ?? 100,\n                        }}>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        </BeautifulStyle>\n    );\n};\n\nfunction createTextColumnInfo(index: number, group: boolean): GridColumnWithMockingInfo {\n    return {\n        title: `Column ${index}`,\n        id: `Column ${index}`,\n        group: group ? `Group ${Math.round(index / 3)}` : undefined,\n        icon: GridColumnIcon.HeaderString,\n        hasMenu: false,\n        getContent: () => {\n            const text = faker.lorem.word();\n\n            return {\n                kind: GridCellKind.Text,\n                data: text,\n                displayData: text,\n                allowOverlay: true,\n                readonly: true,\n            };\n        },\n    };\n}\n\nfunction getResizableColumns(amount: number, group: boolean): GridColumnWithMockingInfo[] {\n    const defaultColumns: GridColumnWithMockingInfo[] = [\n        {\n            title: \"First name\",\n            id: \"First name\",\n            group: group ? \"Name\" : undefined,\n            icon: GridColumnIcon.HeaderString,\n            hasMenu: false,\n            getContent: () => {\n                const firstName = faker.name.firstName();\n                return {\n                    kind: GridCellKind.Text,\n                    displayData: firstName,\n                    data: firstName,\n                    allowOverlay: true,\n                    readonly: true,\n                };\n            },\n        },\n        {\n            title: \"Last name\",\n            id: \"Last name\",\n            group: group ? \"Name\" : undefined,\n            icon: GridColumnIcon.HeaderString,\n            hasMenu: false,\n            getContent: () => {\n                const lastName = faker.name.lastName();\n                return {\n                    kind: GridCellKind.Text,\n                    displayData: lastName,\n                    data: lastName,\n                    allowOverlay: true,\n                    readonly: true,\n                };\n            },\n        },\n        {\n            title: \"Avatar\",\n            id: \"Avatar\",\n            group: group ? \"Info\" : undefined,\n            icon: GridColumnIcon.HeaderImage,\n            hasMenu: false,\n            getContent: () => {\n                const n = Math.round(Math.random() * 100);\n                return {\n                    kind: GridCellKind.Image,\n                    data: [`https://picsum.photos/id/${n}/900/900`],\n                    displayData: [`https://picsum.photos/id/${n}/40/40`],\n                    allowOverlay: true,\n                    readonly: true,\n                };\n            },\n        },\n        {\n            title: \"Email\",\n            id: \"Email\",\n            group: group ? \"Info\" : undefined,\n            icon: GridColumnIcon.HeaderString,\n            hasMenu: false,\n            getContent: () => {\n                const email = faker.internet.email();\n                return {\n                    kind: GridCellKind.Text,\n                    displayData: email,\n                    data: email,\n                    allowOverlay: true,\n                    readonly: true,\n                };\n            },\n        },\n        {\n            title: \"Title\",\n            id: \"Title\",\n            group: group ? \"Info\" : undefined,\n            icon: GridColumnIcon.HeaderString,\n            hasMenu: false,\n            getContent: () => {\n                const company = faker.name.jobTitle();\n                return {\n                    kind: GridCellKind.Text,\n                    displayData: company,\n                    data: company,\n                    allowOverlay: true,\n                    readonly: true,\n                };\n            },\n        },\n        {\n            title: \"More Info\",\n            id: \"More Info\",\n            group: group ? \"Info\" : undefined,\n            icon: GridColumnIcon.HeaderUri,\n            hasMenu: false,\n            getContent: () => {\n                const url = faker.internet.url();\n                return {\n                    kind: GridCellKind.Uri,\n                    displayData: url,\n                    data: url,\n                    hoverEffect: true,\n                    allowOverlay: true,\n                    readonly: true,\n                    onClickUri: a => {\n                        window.open(url, \"_blank\");\n                        a.preventDefault();\n                    },\n                };\n            },\n        },\n    ];\n\n    if (amount < defaultColumns.length) {\n        return defaultColumns.slice(0, amount);\n    }\n\n    const extraColumnsAmount = amount - defaultColumns.length;\n\n    // eslint-disable-next-line unicorn/no-new-array\n    const extraColumns = [...new Array(extraColumnsAmount)].map((_, index) =>\n        createTextColumnInfo(index + defaultColumns.length, group)\n    );\n\n    return [...defaultColumns, ...extraColumns];\n}\n\nexport class ContentCache {\n    // column -> row -> value\n    private cachedContent: Map<number, GridCell[]> = new Map();\n\n    get(col: number, row: number) {\n        const colCache = this.cachedContent.get(col);\n\n        if (colCache === undefined) {\n            return undefined;\n        }\n\n        return colCache[row];\n    }\n\n    set(col: number, row: number, value: GridCell) {\n        let rowCache = this.cachedContent.get(col);\n        if (rowCache === undefined) {\n            this.cachedContent.set(col, (rowCache = []));\n        }\n        rowCache[row] = value;\n    }\n}\n\nexport function useMockDataGenerator(numCols: number, readonly: boolean = true, group: boolean = false) {\n    const cache = React.useRef<ContentCache>(new ContentCache());\n\n    const [colsMap, setColsMap] = React.useState(() => getResizableColumns(numCols, group));\n\n    React.useEffect(() => {\n        setColsMap(getResizableColumns(numCols, group));\n    }, [group, numCols]);\n\n    const onColumnResize = React.useCallback((column: GridColumn, newSize: number) => {\n        setColsMap(prevColsMap => {\n            const index = prevColsMap.findIndex(ci => ci.title === column.title);\n            const newArray = [...prevColsMap];\n            newArray.splice(index, 1, {\n                ...prevColsMap[index],\n                width: newSize,\n            });\n            return newArray;\n        });\n    }, []);\n\n    const cols = React.useMemo(() => {\n        return colsMap.map(getGridColumn);\n    }, [colsMap]);\n\n    const colsMapRef = React.useRef(colsMap);\n    colsMapRef.current = colsMap;\n    const getCellContent = React.useCallback(\n        ([col, row]: Item): GridCell => {\n            let val = cache.current.get(col, row);\n            if (val === undefined) {\n                val = colsMapRef.current[col].getContent();\n                if (!readonly && isTextEditableGridCell(val)) {\n                    val = { ...val, readonly };\n                }\n                cache.current.set(col, row, val);\n            }\n            return val;\n        },\n        [readonly]\n    );\n\n    const setCellValueRaw = React.useCallback(([col, row]: Item, val: GridCell): void => {\n        cache.current.set(col, row, val);\n    }, []);\n\n    const setCellValue = React.useCallback(\n        ([col, row]: Item, val: GridCell): void => {\n            let current = cache.current.get(col, row);\n            if (current === undefined) {\n                current = colsMap[col].getContent();\n            }\n            if (isEditableGridCell(val) && isEditableGridCell(current)) {\n                const copied = lossyCopyData(val, current);\n                cache.current.set(col, row, {\n                    ...copied,\n                    displayData: typeof copied.data === \"string\" ? copied.data : (copied as any).displayData,\n                    lastUpdated: performance.now(),\n                } as any);\n            }\n        },\n        [colsMap]\n    );\n\n    return { cols, getCellContent, onColumnResize, setCellValue, setCellValueRaw };\n}\n\nexport const KeyName = styled.kbd`\n    background-color: #f4f4f4;\n    color: #2b2b2b;\n    padding: 2px 6px;\n    font-family: monospace;\n    font-size: 14px;\n    border-radius: 4px;\n    box-shadow: 0px 1px 2px #00000040;\n    margin: 0 0.1em;\n`;\n\nexport const defaultProps: Partial<DataEditorProps> = {\n    smoothScrollX: true,\n    smoothScrollY: true,\n    getCellsForSelection: true,\n    width: \"100%\",\n};\n\nexport function clearCell(cell: GridCell): GridCell {\n    switch (cell.kind) {\n        case GridCellKind.Boolean: {\n            return {\n                ...cell,\n                data: false,\n            };\n        }\n        case GridCellKind.Image: {\n            return {\n                ...cell,\n                data: [],\n                displayData: [],\n            };\n        }\n        case GridCellKind.Drilldown:\n        case GridCellKind.Bubble: {\n            return {\n                ...cell,\n                data: [],\n            };\n        }\n        case GridCellKind.Uri:\n        case GridCellKind.Markdown: {\n            return {\n                ...cell,\n                data: \"\",\n            };\n        }\n        case GridCellKind.Text: {\n            return {\n                ...cell,\n                data: \"\",\n                displayData: \"\",\n            };\n        }\n        case GridCellKind.Number: {\n            return {\n                ...cell,\n                data: 0,\n                displayData: \"\",\n            };\n        }\n    }\n    return cell;\n}\n\nfunction getColumnsForCellTypes(): GridColumnWithMockingInfo[] {\n    return [\n        {\n            title: \"Row ID\",\n            width: 120,\n            icon: GridColumnIcon.HeaderRowID,\n            hasMenu: false,\n            getContent: () => {\n                return {\n                    kind: GridCellKind.RowID,\n                    data: faker.datatype.uuid(),\n                    allowOverlay: true,\n                };\n            },\n        },\n        {\n            title: \"Protected\",\n            width: 120,\n            icon: GridColumnIcon.HeaderCode,\n            hasMenu: false,\n            getContent: () => {\n                return {\n                    kind: GridCellKind.Protected,\n                    data: faker.finance.bitcoinAddress(),\n                    allowOverlay: false,\n                };\n            },\n        },\n        {\n            title: \"Loading\",\n            width: 120,\n            icon: GridColumnIcon.HeaderString,\n            hasMenu: false,\n            getContent: () => {\n                return {\n                    kind: GridCellKind.Loading,\n                    allowOverlay: false,\n                    skeletonWidth: 70,\n                    skeletonWidthVariability: 25,\n                };\n            },\n        },\n        {\n            title: \"Text\",\n            width: 120,\n            icon: GridColumnIcon.HeaderCode,\n            hasMenu: false,\n            getContent: () => {\n                const name = faker.name.firstName();\n                return {\n                    kind: GridCellKind.Text,\n                    data: name,\n                    displayData: name,\n                    allowOverlay: true,\n                };\n            },\n        },\n        {\n            title: \"Number\",\n            width: 120,\n            icon: GridColumnIcon.HeaderNumber,\n            hasMenu: false,\n            getContent: () => {\n                const age = faker.datatype.number(100);\n                return {\n                    kind: GridCellKind.Number,\n                    data: age,\n                    displayData: `${age}`,\n                    allowOverlay: true,\n                };\n            },\n        },\n        {\n            title: \"Boolean\",\n            width: 120,\n            icon: GridColumnIcon.HeaderBoolean,\n            hasMenu: false,\n            getContent: () => {\n                const roll = Math.random();\n                const checked = roll < 0.1 ? undefined : roll < 0.2 ? null : roll < 0.6;\n                // TODO: Make editable. UX looks bad by default.\n                return {\n                    kind: GridCellKind.Boolean,\n                    data: checked,\n                    allowOverlay: false,\n                    readonly: false,\n                };\n            },\n        },\n        {\n            title: \"Image\",\n            width: 120,\n            icon: GridColumnIcon.HeaderImage,\n            hasMenu: false,\n            getContent: () => {\n                return {\n                    kind: GridCellKind.Image,\n                    data: [`${faker.image.animals(40, 40)}?random=${faker.datatype.number(100_000)}`],\n                    allowOverlay: true,\n                    readonly: true,\n                };\n            },\n        },\n        {\n            title: \"Uri\",\n            width: 120,\n            icon: GridColumnIcon.HeaderUri,\n            hasMenu: false,\n            getContent: () => {\n                const url = faker.internet.url();\n                return {\n                    kind: GridCellKind.Uri,\n                    data: url,\n                    allowOverlay: true,\n                };\n            },\n        },\n        {\n            title: \"Markdown\",\n            width: 120,\n            icon: GridColumnIcon.HeaderMarkdown,\n            hasMenu: false,\n            getContent: () => {\n                const markdown = `# Title\nHello my name is *${faker.name.firstName()}*\n\n## TODO:\nTry out [Glide](https://www.glideapps.com/)\n`;\n                return {\n                    kind: GridCellKind.Markdown,\n                    data: markdown,\n                    allowOverlay: true,\n                };\n            },\n        },\n        {\n            title: \"Bubble\",\n            width: 120,\n            icon: GridColumnIcon.HeaderArray,\n            hasMenu: false,\n            getContent: () => {\n                return {\n                    kind: GridCellKind.Bubble,\n                    data: [faker.lorem.word(), faker.lorem.word(), faker.lorem.word()],\n                    allowOverlay: true,\n                };\n            },\n        },\n        {\n            title: \"Drilldown\",\n            width: 120,\n            icon: GridColumnIcon.HeaderArray,\n            hasMenu: false,\n            getContent: () => {\n                return {\n                    kind: GridCellKind.Drilldown,\n                    data: [\n                        {\n                            text: faker.address.cityName(),\n                            img: `${faker.image.nature(40, 40)}?random=${faker.datatype.number(100_000)}`,\n                        },\n                        {\n                            text: faker.address.cityName(),\n                            img: `${faker.image.nature(40, 40)}?random=${faker.datatype.number(100_000)}`,\n                        },\n                    ],\n                    allowOverlay: true,\n                };\n            },\n        },\n    ];\n}\n\nexport function useAllMockedKinds() {\n    const cache = React.useRef<ContentCache>(new ContentCache());\n\n    const [colsMap, setColsMap] = React.useState(getColumnsForCellTypes);\n\n    const onColumnResize = React.useCallback((column: GridColumn, newSize: number) => {\n        setColsMap(prevColsMap => {\n            const index = prevColsMap.findIndex(ci => ci.title === column.title);\n            const newArray = [...prevColsMap];\n            newArray.splice(index, 1, {\n                ...prevColsMap[index],\n                width: newSize,\n            });\n            return newArray;\n        });\n    }, []);\n\n    const cols = React.useMemo(() => {\n        return colsMap.map(getGridColumn);\n    }, [colsMap]);\n\n    const [updateVersion, setUpdateVersion] = React.useState(0);\n    const getCellContent = React.useCallback(\n        ([col, row]: Item): GridCell => {\n            // Terrible hack to force update when setCellValue requests it\n            noop(updateVersion);\n            let val = cache.current.get(col, row);\n            if (val === undefined) {\n                val = colsMap[col].getContent();\n                cache.current.set(col, row, val);\n            }\n\n            return val;\n        },\n        [colsMap, updateVersion]\n    );\n\n    const setCellValue = React.useCallback(\n        ([col, row]: Item, val: GridCell, noDisplay?: boolean, forceUpdate?: boolean): void => {\n            let current = cache.current.get(col, row);\n            if (current === undefined) {\n                current = colsMap[col].getContent();\n            }\n            if (isEditableGridCell(val) && isEditableGridCell(current)) {\n                const copied = lossyCopyData(val, current);\n                cache.current.set(col, row, {\n                    ...copied,\n                    displayData: noDisplay === true ? undefined : copied.data?.toString() ?? \"\",\n                } as any);\n\n                if (forceUpdate === true) {\n                    setUpdateVersion(v => v + 1);\n                }\n            }\n        },\n        [colsMap]\n    );\n\n    return { cols, getCellContent, onColumnResize, setCellValue };\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".c4uqbye{width:120px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#f1f1f1;height:100%;}.c4uqbye button{border:none;outline:none;height:37px;width:120px;font-size:20px;background-color:#f7f7f8;color:#000000dd;border-bottom:1px solid #e1e2e5;-webkit-transition:background-color 200ms;transition:background-color 200ms;cursor:pointer;}.c4uqbye button:hover{background-color:#efeff1;}\\n.b1bsqg7n{background-color:#2790b9;background:linear-gradient(90deg,#2790b9,#2070a9);color:white;padding:32px 48px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:100vh;font-family:sans-serif;}.b1bsqg7n.double{height:200vh;}.b1bsqg7n > h1{font-size:50px;font-weight:600;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;margin:0 0 12px 0;}.b1bsqg7n .sizer{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;background-color:white;border-radius:12px;box-shadow: rgba(9,30,66,0.25) 0px 4px 8px -2px, rgba(9,30,66,0.08) 0px 0px 0px 1px;}.b1bsqg7n .sizer .sizer-clip{border-radius:12px;overflow:hidden;-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);height:100%;}.b1bsqg7n.firefox .sizer{border-radius:0;box-shadow:unset;}.b1bsqg7n.firefox .sizer .sizer-clip{border-radius:0;}.b1bsqg7n .white{background-color:white;}\\n.piiq54i{font-family:monospace;font-weight:500;color:#ffe394;}\\n.d1k3yj19{font-size:18px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;margin:0 0 20px 0;}\\n.m1j0dy02{font-size:14px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;margin:0 0 20px 0;}.m1j0dy02 button{background-color:#f4f4f4;color:#2b2b2b;padding:2px 6px;font-family:monospace;font-size:14px;border-radius:4px;box-shadow:0px 1px 2px #00000040;margin:0 0.1em;border:none;cursor:pointer;}\\n.kcvwzr4{background-color:#f4f4f4;color:#2b2b2b;padding:2px 6px;font-family:monospace;font-size:14px;border-radius:4px;box-shadow:0px 1px 2px #00000040;margin:0 0.1em;}\\n/*# sourceMappingURL=data:application/json;base64,*/\", \"\",{\"version\":3,\"sources\":[\"/home/runner/work/glide-data-grid/glide-data-grid/packages/core/src/data-editor/stories/utils.tsx\",\"webpack://./packages/core/src/data-editor/stories/utils.tsx\"],\"names\":[\".c4uqbye\",\".b1bsqg7n\",\".piiq54i\",\".d1k3yj19\",\".m1j0dy02\",\".kcvwzr4\"],\"mappings\":\"AA0G+BA,SAAAA,WAAAA,CAAAA,mBAAAA,CAAAA,oBAAAA,CAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,6BAAAA,CAAAA,yBAAAA,CAAAA,qBAAAA,CAAAA,wBAAAA,CAAAA,WAAAA,CAAAA,CAAAA,gBAAAA,WAAAA,CAAAA,YAAAA,CAAAA,WAAAA,CAAAA,WAAAA,CAAAA,cAAAA,CAAAA,wBAAAA,CAAAA,eAAAA,CAAAA,+BAAAA,CAAAA,yCAAAA,CAAAA,iCAAAA,CAAAA,cAAAA,CAAAA,CAAAA,sBAAAA,wBAAAA,CAAAA;AAwBDC,UAAAA,wBAAAA,CAAAA,iDAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,CAAAA,mBAAAA,CAAAA,oBAAAA,CAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,6BAAAA,CAAAA,yBAAAA,CAAAA,qBAAAA,CAAAA,YAAAA,CAAAA,sBAAAA,CAAAA,CAAAA,iBAAAA,YAAAA,CAAAA,CAAAA,eAAAA,cAAAA,CAAAA,eAAAA,CAAAA,qBAAAA,CAAAA,mBAAAA,CAAAA,aAAAA,CAAAA,iBAAAA,CAAAA,CAAAA,iBAAAA,kBAAAA,CAAAA,mBAAAA,CAAAA,mBAAAA,CAAAA,WAAAA,CAAAA,sBAAAA,CAAAA,kBAAAA,CAAAA,mFAAAA,CAAAA,CAAAA,6BAAAA,kBAAAA,CAAAA,eAAAA,CAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,uBAAAA,CAAAA,WAAAA,CAAAA,CAAAA,yBAAAA,eAAAA,CAAAA,gBAAAA,CAAAA,CAAAA,qCAAAA,eAAAA,CAAAA,CAAAA,iBAAAA,sBAAAA,CAAAA;AAwDNC,SAAAA,qBAAAA,CAAAA,eAAAA,CAAAA,aAAAA,CAAAA;AAKGC,UAAAA,cAAAA,CAAAA,qBAAAA,CAAAA,mBAAAA,CAAAA,aAAAA,CAAAA,iBAAAA,CAAAA;AAKHC,UAAAA,cAAAA,CAAAA,qBAAAA,CAAAA,mBAAAA,CAAAA,aAAAA,CAAAA,iBAAAA,CAAAA,CAAAA,iBAAAA,wBAAAA,CAAAA,aAAAA,CAAAA,eAAAA,CAAAA,qBAAAA,CAAAA,cAAAA,CAAAA,iBAAAA,CAAAA,gCAAAA,CAAAA,cAAAA,CAAAA,WAAAA,CAAAA,cAAAA,CAAAA;AA8QDC,SAAAA,wBAAAA,CAAAA,aAAAA,CAAAA,eAAAA,CAAAA,qBAAAA,CAAAA,cAAAA,CAAAA,iBAAAA,CAAAA,gCAAAA,CAAAA,cAAAA,CAAAA;AC5cvB,2m1BAA2m1B\",\"sourcesContent\":[\"import * as React from \\\"react\\\";\\nimport { GridCellKind, GridColumnIcon, isEditableGridCell, isTextEditableGridCell } from \\\"../../internal/data-grid/data-grid-types.js\\\";\\nimport { faker } from \\\"@faker-js/faker\\\";\\nimport { styled } from \\\"@linaria/react\\\";\\nimport isArray from \\\"lodash/isArray.js\\\";\\nimport { assertNever } from \\\"../../common/support.js\\\";\\nimport { browserIsFirefox } from \\\"../../common/browser-detect.js\\\";\\nimport { useResizeDetector } from \\\"react-resize-detector\\\";\\nimport noop from \\\"lodash/noop.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nimport { jsxs as _jsxs } from \\\"react/jsx-runtime\\\";\\nfaker.seed(1337);\\nfunction isTruthy(x) {\\n  return x ? true : false;\\n}\\nexport function lossyCopyData(source, target) {\\n  const sourceData = source.data;\\n  if (typeof sourceData === typeof target.data) {\\n    return {\\n      ...target,\\n      data: sourceData\\n    };\\n  } else switch (target.kind) {\\n    case GridCellKind.Uri:\\n      {\\n        var _sourceData$toString;\\n        if (isArray(sourceData)) {\\n          return {\\n            ...target,\\n            data: sourceData[0]\\n          };\\n        }\\n        return {\\n          ...target,\\n          data: (_sourceData$toString = sourceData === null || sourceData === void 0 ? void 0 : sourceData.toString()) !== null && _sourceData$toString !== void 0 ? _sourceData$toString : \\\"\\\"\\n        };\\n      }\\n    case GridCellKind.Boolean:\\n      {\\n        if (isArray(sourceData)) {\\n          return {\\n            ...target,\\n            data: sourceData[0] !== undefined\\n          };\\n        } else if (source.kind === GridCellKind.Boolean) {\\n          return {\\n            ...target,\\n            data: source.data\\n          };\\n        }\\n        return {\\n          ...target,\\n          data: isTruthy(sourceData) ? true : false\\n        };\\n      }\\n    case GridCellKind.Image:\\n      {\\n        var _sourceData$toString2;\\n        if (isArray(sourceData)) {\\n          return {\\n            ...target,\\n            data: [sourceData[0]]\\n          };\\n        }\\n        return {\\n          ...target,\\n          data: [(_sourceData$toString2 = sourceData === null || sourceData === void 0 ? void 0 : sourceData.toString()) !== null && _sourceData$toString2 !== void 0 ? _sourceData$toString2 : \\\"\\\"]\\n        };\\n      }\\n    case GridCellKind.Number:\\n      {\\n        return {\\n          ...target,\\n          data: 0\\n        };\\n      }\\n    case GridCellKind.Text:\\n    case GridCellKind.Markdown:\\n      {\\n        var _source$data$toString, _source$data;\\n        if (isArray(sourceData)) {\\n          var _sourceData$0$toStrin;\\n          return {\\n            ...target,\\n            data: (_sourceData$0$toStrin = sourceData[0].toString()) !== null && _sourceData$0$toStrin !== void 0 ? _sourceData$0$toStrin : \\\"\\\"\\n          };\\n        }\\n        return {\\n          ...target,\\n          data: (_source$data$toString = (_source$data = source.data) === null || _source$data === void 0 ? void 0 : _source$data.toString()) !== null && _source$data$toString !== void 0 ? _source$data$toString : \\\"\\\"\\n        };\\n      }\\n    case GridCellKind.Custom:\\n      {\\n        return target;\\n      }\\n  }\\n  assertNever(target);\\n}\\nexport function getGridColumn(columnWithMock) {\\n  const {\\n    getContent,\\n    ...rest\\n  } = columnWithMock;\\n  return rest;\\n}\\nexport const ColumnAddButton = styled.div`\\n    width: 120px;\\n    display: flex;\\n    flex-direction: column;\\n    background-color: #f1f1f1;\\n    height: 100%;\\n    button {\\n        border: none;\\n        outline: none;\\n        height: 37px;\\n        width: 120px;\\n        font-size: 20px;\\n        background-color: #f7f7f8;\\n        color: #000000dd;\\n        border-bottom: 1px solid #e1e2e5;\\n\\n        transition: background-color 200ms;\\n\\n        cursor: pointer;\\n        :hover {\\n            background-color: #efeff1;\\n        }\\n    }\\n`;\\nexport const BeautifulStyle = styled.div`\\n    background-color: #2790b9;\\n    background: linear-gradient(90deg, #2790b9, #2070a9);\\n    color: white;\\n\\n    padding: 32px 48px;\\n\\n    display: flex;\\n    flex-direction: column;\\n    height: 100vh;\\n\\n    font-family: sans-serif;\\n\\n    &.double {\\n        height: 200vh;\\n    }\\n\\n    & > h1 {\\n        font-size: 50px;\\n        font-weight: 600;\\n        flex-shrink: 0;\\n        margin: 0 0 12px 0;\\n    }\\n\\n    .sizer {\\n        flex-grow: 1;\\n\\n        background-color: white;\\n\\n        border-radius: 12px;\\n        box-shadow:\\n            rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\\n            rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\\n\\n        .sizer-clip {\\n            border-radius: 12px;\\n            overflow: hidden;\\n            transform: translateZ(0);\\n\\n            height: 100%;\\n        }\\n    }\\n\\n    &.firefox .sizer {\\n        border-radius: 0;\\n        box-shadow: unset;\\n\\n        .sizer-clip {\\n            border-radius: 0;\\n        }\\n    }\\n\\n    .white {\\n        background-color: white;\\n    }\\n`;\\nexport const PropName = styled.span`\\n    font-family: monospace;\\n    font-weight: 500;\\n    color: #ffe394;\\n`;\\nexport const Description = styled.p`\\n    font-size: 18px;\\n    flex-shrink: 0;\\n    margin: 0 0 20px 0;\\n`;\\nexport const MoreInfo = styled.p`\\n    font-size: 14px;\\n    flex-shrink: 0;\\n    margin: 0 0 20px 0;\\n\\n    button {\\n        background-color: #f4f4f4;\\n        color: #2b2b2b;\\n        padding: 2px 6px;\\n        font-family: monospace;\\n        font-size: 14px;\\n        border-radius: 4px;\\n        box-shadow: 0px 1px 2px #00000040;\\n        margin: 0 0.1em;\\n        border: none;\\n        cursor: pointer;\\n    }\\n`;\\nexport const BeautifulWrapper = p => {\\n  const {\\n    title,\\n    children,\\n    description,\\n    className,\\n    scale\\n  } = p;\\n  const {\\n    ref,\\n    width,\\n    height\\n  } = useResizeDetector();\\n  return _jsxs(BeautifulStyle, {\\n    className: className + (browserIsFirefox.value ? \\\" firefox\\\" : \\\"\\\"),\\n    children: [_jsx(\\\"h1\\\", {\\n      children: title\\n    }), description, _jsx(\\\"div\\\", {\\n      style: {\\n        scale\\n      },\\n      className: \\\"sizer\\\",\\n      children: _jsx(\\\"div\\\", {\\n        className: \\\"sizer-clip\\\",\\n        ref: ref,\\n        children: _jsx(\\\"div\\\", {\\n          style: {\\n            position: \\\"relative\\\",\\n            width: width !== null && width !== void 0 ? width : 100,\\n            height: height !== null && height !== void 0 ? height : 100\\n          },\\n          children: children\\n        })\\n      })\\n    })]\\n  });\\n};\\nBeautifulWrapper.displayName = \\\"BeautifulWrapper\\\";\\nfunction createTextColumnInfo(index, group) {\\n  return {\\n    title: `Column ${index}`,\\n    id: `Column ${index}`,\\n    group: group ? `Group ${Math.round(index / 3)}` : undefined,\\n    icon: GridColumnIcon.HeaderString,\\n    hasMenu: false,\\n    getContent: () => {\\n      const text = faker.lorem.word();\\n      return {\\n        kind: GridCellKind.Text,\\n        data: text,\\n        displayData: text,\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  };\\n}\\nfunction getResizableColumns(amount, group) {\\n  const defaultColumns = [{\\n    title: \\\"First name\\\",\\n    id: \\\"First name\\\",\\n    group: group ? \\\"Name\\\" : undefined,\\n    icon: GridColumnIcon.HeaderString,\\n    hasMenu: false,\\n    getContent: () => {\\n      const firstName = faker.name.firstName();\\n      return {\\n        kind: GridCellKind.Text,\\n        displayData: firstName,\\n        data: firstName,\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Last name\\\",\\n    id: \\\"Last name\\\",\\n    group: group ? \\\"Name\\\" : undefined,\\n    icon: GridColumnIcon.HeaderString,\\n    hasMenu: false,\\n    getContent: () => {\\n      const lastName = faker.name.lastName();\\n      return {\\n        kind: GridCellKind.Text,\\n        displayData: lastName,\\n        data: lastName,\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Avatar\\\",\\n    id: \\\"Avatar\\\",\\n    group: group ? \\\"Info\\\" : undefined,\\n    icon: GridColumnIcon.HeaderImage,\\n    hasMenu: false,\\n    getContent: () => {\\n      const n = Math.round(Math.random() * 100);\\n      return {\\n        kind: GridCellKind.Image,\\n        data: [`https://picsum.photos/id/${n}/900/900`],\\n        displayData: [`https://picsum.photos/id/${n}/40/40`],\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Email\\\",\\n    id: \\\"Email\\\",\\n    group: group ? \\\"Info\\\" : undefined,\\n    icon: GridColumnIcon.HeaderString,\\n    hasMenu: false,\\n    getContent: () => {\\n      const email = faker.internet.email();\\n      return {\\n        kind: GridCellKind.Text,\\n        displayData: email,\\n        data: email,\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Title\\\",\\n    id: \\\"Title\\\",\\n    group: group ? \\\"Info\\\" : undefined,\\n    icon: GridColumnIcon.HeaderString,\\n    hasMenu: false,\\n    getContent: () => {\\n      const company = faker.name.jobTitle();\\n      return {\\n        kind: GridCellKind.Text,\\n        displayData: company,\\n        data: company,\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  }, {\\n    title: \\\"More Info\\\",\\n    id: \\\"More Info\\\",\\n    group: group ? \\\"Info\\\" : undefined,\\n    icon: GridColumnIcon.HeaderUri,\\n    hasMenu: false,\\n    getContent: () => {\\n      const url = faker.internet.url();\\n      return {\\n        kind: GridCellKind.Uri,\\n        displayData: url,\\n        data: url,\\n        hoverEffect: true,\\n        allowOverlay: true,\\n        readonly: true,\\n        onClickUri: a => {\\n          window.open(url, \\\"_blank\\\");\\n          a.preventDefault();\\n        }\\n      };\\n    }\\n  }];\\n  if (amount < defaultColumns.length) {\\n    return defaultColumns.slice(0, amount);\\n  }\\n  const extraColumnsAmount = amount - defaultColumns.length;\\n  const extraColumns = [...new Array(extraColumnsAmount)].map((_, index) => createTextColumnInfo(index + defaultColumns.length, group));\\n  return [...defaultColumns, ...extraColumns];\\n}\\nexport class ContentCache {\\n  constructor() {\\n    this.cachedContent = new Map();\\n  }\\n  get(col, row) {\\n    const colCache = this.cachedContent.get(col);\\n    if (colCache === undefined) {\\n      return undefined;\\n    }\\n    return colCache[row];\\n  }\\n  set(col, row, value) {\\n    let rowCache = this.cachedContent.get(col);\\n    if (rowCache === undefined) {\\n      this.cachedContent.set(col, rowCache = []);\\n    }\\n    rowCache[row] = value;\\n  }\\n}\\nexport function useMockDataGenerator(numCols) {\\n  let readonly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\\n  let group = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\n  const cache = React.useRef(new ContentCache());\\n  const [colsMap, setColsMap] = React.useState(() => getResizableColumns(numCols, group));\\n  React.useEffect(() => {\\n    setColsMap(getResizableColumns(numCols, group));\\n  }, [group, numCols]);\\n  const onColumnResize = React.useCallback((column, newSize) => {\\n    setColsMap(prevColsMap => {\\n      const index = prevColsMap.findIndex(ci => ci.title === column.title);\\n      const newArray = [...prevColsMap];\\n      newArray.splice(index, 1, {\\n        ...prevColsMap[index],\\n        width: newSize\\n      });\\n      return newArray;\\n    });\\n  }, []);\\n  const cols = React.useMemo(() => {\\n    return colsMap.map(getGridColumn);\\n  }, [colsMap]);\\n  const colsMapRef = React.useRef(colsMap);\\n  colsMapRef.current = colsMap;\\n  const getCellContent = React.useCallback(_ref => {\\n    let [col, row] = _ref;\\n    let val = cache.current.get(col, row);\\n    if (val === undefined) {\\n      val = colsMapRef.current[col].getContent();\\n      if (!readonly && isTextEditableGridCell(val)) {\\n        val = {\\n          ...val,\\n          readonly\\n        };\\n      }\\n      cache.current.set(col, row, val);\\n    }\\n    return val;\\n  }, [readonly]);\\n  const setCellValueRaw = React.useCallback((_ref2, val) => {\\n    let [col, row] = _ref2;\\n    cache.current.set(col, row, val);\\n  }, []);\\n  const setCellValue = React.useCallback((_ref3, val) => {\\n    let [col, row] = _ref3;\\n    let current = cache.current.get(col, row);\\n    if (current === undefined) {\\n      current = colsMap[col].getContent();\\n    }\\n    if (isEditableGridCell(val) && isEditableGridCell(current)) {\\n      const copied = lossyCopyData(val, current);\\n      cache.current.set(col, row, {\\n        ...copied,\\n        displayData: typeof copied.data === \\\"string\\\" ? copied.data : copied.displayData,\\n        lastUpdated: performance.now()\\n      });\\n    }\\n  }, [colsMap]);\\n  return {\\n    cols,\\n    getCellContent,\\n    onColumnResize,\\n    setCellValue,\\n    setCellValueRaw\\n  };\\n}\\nexport const KeyName = styled.kbd`\\n    background-color: #f4f4f4;\\n    color: #2b2b2b;\\n    padding: 2px 6px;\\n    font-family: monospace;\\n    font-size: 14px;\\n    border-radius: 4px;\\n    box-shadow: 0px 1px 2px #00000040;\\n    margin: 0 0.1em;\\n`;\\nexport const defaultProps = {\\n  smoothScrollX: true,\\n  smoothScrollY: true,\\n  getCellsForSelection: true,\\n  width: \\\"100%\\\"\\n};\\nexport function clearCell(cell) {\\n  switch (cell.kind) {\\n    case GridCellKind.Boolean:\\n      {\\n        return {\\n          ...cell,\\n          data: false\\n        };\\n      }\\n    case GridCellKind.Image:\\n      {\\n        return {\\n          ...cell,\\n          data: [],\\n          displayData: []\\n        };\\n      }\\n    case GridCellKind.Drilldown:\\n    case GridCellKind.Bubble:\\n      {\\n        return {\\n          ...cell,\\n          data: []\\n        };\\n      }\\n    case GridCellKind.Uri:\\n    case GridCellKind.Markdown:\\n      {\\n        return {\\n          ...cell,\\n          data: \\\"\\\"\\n        };\\n      }\\n    case GridCellKind.Text:\\n      {\\n        return {\\n          ...cell,\\n          data: \\\"\\\",\\n          displayData: \\\"\\\"\\n        };\\n      }\\n    case GridCellKind.Number:\\n      {\\n        return {\\n          ...cell,\\n          data: 0,\\n          displayData: \\\"\\\"\\n        };\\n      }\\n  }\\n  return cell;\\n}\\nfunction getColumnsForCellTypes() {\\n  return [{\\n    title: \\\"Row ID\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderRowID,\\n    hasMenu: false,\\n    getContent: () => {\\n      return {\\n        kind: GridCellKind.RowID,\\n        data: faker.datatype.uuid(),\\n        allowOverlay: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Protected\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderCode,\\n    hasMenu: false,\\n    getContent: () => {\\n      return {\\n        kind: GridCellKind.Protected,\\n        data: faker.finance.bitcoinAddress(),\\n        allowOverlay: false\\n      };\\n    }\\n  }, {\\n    title: \\\"Loading\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderString,\\n    hasMenu: false,\\n    getContent: () => {\\n      return {\\n        kind: GridCellKind.Loading,\\n        allowOverlay: false,\\n        skeletonWidth: 70,\\n        skeletonWidthVariability: 25\\n      };\\n    }\\n  }, {\\n    title: \\\"Text\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderCode,\\n    hasMenu: false,\\n    getContent: () => {\\n      const name = faker.name.firstName();\\n      return {\\n        kind: GridCellKind.Text,\\n        data: name,\\n        displayData: name,\\n        allowOverlay: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Number\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderNumber,\\n    hasMenu: false,\\n    getContent: () => {\\n      const age = faker.datatype.number(100);\\n      return {\\n        kind: GridCellKind.Number,\\n        data: age,\\n        displayData: `${age}`,\\n        allowOverlay: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Boolean\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderBoolean,\\n    hasMenu: false,\\n    getContent: () => {\\n      const roll = Math.random();\\n      const checked = roll < 0.1 ? undefined : roll < 0.2 ? null : roll < 0.6;\\n      return {\\n        kind: GridCellKind.Boolean,\\n        data: checked,\\n        allowOverlay: false,\\n        readonly: false\\n      };\\n    }\\n  }, {\\n    title: \\\"Image\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderImage,\\n    hasMenu: false,\\n    getContent: () => {\\n      return {\\n        kind: GridCellKind.Image,\\n        data: [`${faker.image.animals(40, 40)}?random=${faker.datatype.number(100000)}`],\\n        allowOverlay: true,\\n        readonly: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Uri\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderUri,\\n    hasMenu: false,\\n    getContent: () => {\\n      const url = faker.internet.url();\\n      return {\\n        kind: GridCellKind.Uri,\\n        data: url,\\n        allowOverlay: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Markdown\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderMarkdown,\\n    hasMenu: false,\\n    getContent: () => {\\n      const markdown = `# Title\\nHello my name is *${faker.name.firstName()}*\\n\\n## TODO:\\nTry out [Glide](https://www.glideapps.com/)\\n`;\\n      return {\\n        kind: GridCellKind.Markdown,\\n        data: markdown,\\n        allowOverlay: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Bubble\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderArray,\\n    hasMenu: false,\\n    getContent: () => {\\n      return {\\n        kind: GridCellKind.Bubble,\\n        data: [faker.lorem.word(), faker.lorem.word(), faker.lorem.word()],\\n        allowOverlay: true\\n      };\\n    }\\n  }, {\\n    title: \\\"Drilldown\\\",\\n    width: 120,\\n    icon: GridColumnIcon.HeaderArray,\\n    hasMenu: false,\\n    getContent: () => {\\n      return {\\n        kind: GridCellKind.Drilldown,\\n        data: [{\\n          text: faker.address.cityName(),\\n          img: `${faker.image.nature(40, 40)}?random=${faker.datatype.number(100000)}`\\n        }, {\\n          text: faker.address.cityName(),\\n          img: `${faker.image.nature(40, 40)}?random=${faker.datatype.number(100000)}`\\n        }],\\n        allowOverlay: true\\n      };\\n    }\\n  }];\\n}\\nexport function useAllMockedKinds() {\\n  const cache = React.useRef(new ContentCache());\\n  const [colsMap, setColsMap] = React.useState(getColumnsForCellTypes);\\n  const onColumnResize = React.useCallback((column, newSize) => {\\n    setColsMap(prevColsMap => {\\n      const index = prevColsMap.findIndex(ci => ci.title === column.title);\\n      const newArray = [...prevColsMap];\\n      newArray.splice(index, 1, {\\n        ...prevColsMap[index],\\n        width: newSize\\n      });\\n      return newArray;\\n    });\\n  }, []);\\n  const cols = React.useMemo(() => {\\n    return colsMap.map(getGridColumn);\\n  }, [colsMap]);\\n  const [updateVersion, setUpdateVersion] = React.useState(0);\\n  const getCellContent = React.useCallback(_ref4 => {\\n    let [col, row] = _ref4;\\n    noop(updateVersion);\\n    let val = cache.current.get(col, row);\\n    if (val === undefined) {\\n      val = colsMap[col].getContent();\\n      cache.current.set(col, row, val);\\n    }\\n    return val;\\n  }, [colsMap, updateVersion]);\\n  const setCellValue = React.useCallback((_ref5, val, noDisplay, forceUpdate) => {\\n    let [col, row] = _ref5;\\n    let current = cache.current.get(col, row);\\n    if (current === undefined) {\\n      current = colsMap[col].getContent();\\n    }\\n    if (isEditableGridCell(val) && isEditableGridCell(current)) {\\n      var _copied$data$toString, _copied$data;\\n      const copied = lossyCopyData(val, current);\\n      cache.current.set(col, row, {\\n        ...copied,\\n        displayData: noDisplay === true ? undefined : (_copied$data$toString = (_copied$data = copied.data) === null || _copied$data === void 0 ? void 0 : _copied$data.toString()) !== null && _copied$data$toString !== void 0 ? _copied$data$toString : \\\"\\\"\\n      });\\n      if (forceUpdate === true) {\\n        setUpdateVersion(v => v + 1);\\n      }\\n    }\\n  }, [colsMap]);\\n  return {\\n    cols,\\n    getCellContent,\\n    onColumnResize,\\n    setCellValue\\n  };\\n}\",\".c4uqbye{width:120px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#f1f1f1;height:100%;}.c4uqbye button{border:none;outline:none;height:37px;width:120px;font-size:20px;background-color:#f7f7f8;color:#000000dd;border-bottom:1px solid #e1e2e5;-webkit-transition:background-color 200ms;transition:background-color 200ms;cursor:pointer;}.c4uqbye button:hover{background-color:#efeff1;}\\n.b1bsqg7n{background-color:#2790b9;background:linear-gradient(90deg,#2790b9,#2070a9);color:white;padding:32px 48px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:100vh;font-family:sans-serif;}.b1bsqg7n.double{height:200vh;}.b1bsqg7n > h1{font-size:50px;font-weight:600;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;margin:0 0 12px 0;}.b1bsqg7n .sizer{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;background-color:white;border-radius:12px;box-shadow: rgba(9,30,66,0.25) 0px 4px 8px -2px, rgba(9,30,66,0.08) 0px 0px 0px 1px;}.b1bsqg7n .sizer .sizer-clip{border-radius:12px;overflow:hidden;-webkit-transform:translateZ(0);-ms-transform:translateZ(0);transform:translateZ(0);height:100%;}.b1bsqg7n.firefox .sizer{border-radius:0;box-shadow:unset;}.b1bsqg7n.firefox .sizer .sizer-clip{border-radius:0;}.b1bsqg7n .white{background-color:white;}\\n.piiq54i{font-family:monospace;font-weight:500;color:#ffe394;}\\n.d1k3yj19{font-size:18px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;margin:0 0 20px 0;}\\n.m1j0dy02{font-size:14px;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;margin:0 0 20px 0;}.m1j0dy02 button{background-color:#f4f4f4;color:#2b2b2b;padding:2px 6px;font-family:monospace;font-size:14px;border-radius:4px;box-shadow:0px 1px 2px #00000040;margin:0 0.1em;border:none;cursor:pointer;}\\n.kcvwzr4{background-color:#f4f4f4;color:#2b2b2b;padding:2px 6px;font-family:monospace;font-size:14px;border-radius:4px;box-shadow:0px 1px 2px #00000040;margin:0 0.1em;}\\n/*# sourceMappingURL=data:application/json;base64,*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./utils.tsx\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./utils.tsx\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["React","GridCellKind","GridColumnIcon","isEditableGridCell","isTextEditableGridCell","faker","styled","isArray","assertNever","browserIsFirefox","useResizeDetector","noop","jsx","_jsx","jsxs","_jsxs","seed","isTruthy","x","lossyCopyData","source","target","sourceData","data","kind","Uri","_sourceData$toString","toString","Boolean","undefined","Image","_sourceData$toString2","Number","Text","Markdown","_source$data$toString","_source$data","_sourceData$0$toStrin","Custom","getGridColumn","columnWithMock","getContent","rest","ColumnAddButton","name","class","propsAsIs","BeautifulStyle","PropName","Description","MoreInfo","BeautifulWrapper","p","title","children","description","className","scale","ref","width","height","value","style","position","displayName","createTextColumnInfo","index","group","id","Math","round","icon","HeaderString","hasMenu","text","lorem","word","displayData","allowOverlay","readonly","getResizableColumns","amount","defaultColumns","firstName","lastName","HeaderImage","n","random","email","internet","company","jobTitle","HeaderUri","url","hoverEffect","onClickUri","a","window","open","preventDefault","length","slice","extraColumnsAmount","extraColumns","Array","map","_","ContentCache","constructor","cachedContent","Map","get","col","row","colCache","set","rowCache","useMockDataGenerator","numCols","arguments","cache","useRef","colsMap","setColsMap","useState","useEffect","onColumnResize","useCallback","column","newSize","prevColsMap","findIndex","ci","newArray","splice","cols","useMemo","colsMapRef","current","getCellContent","_ref","val","setCellValueRaw","_ref2","setCellValue","_ref3","copied","lastUpdated","performance","now","KeyName","defaultProps","smoothScrollX","smoothScrollY","getCellsForSelection","clearCell","cell","Drilldown","Bubble","getColumnsForCellTypes","HeaderRowID","RowID","datatype","uuid","HeaderCode","Protected","finance","bitcoinAddress","Loading","skeletonWidth","skeletonWidthVariability","HeaderNumber","age","number","HeaderBoolean","roll","checked","image","animals","HeaderMarkdown","markdown","HeaderArray","address","cityName","img","nature","useAllMockedKinds","updateVersion","setUpdateVersion","_ref4","_ref5","noDisplay","forceUpdate","_copied$data$toString","_copied$data","v"],"sourceRoot":""}