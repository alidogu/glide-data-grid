{"version":3,"file":"7413.bd0e8212.iframe.bundle.js","mappings":"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","sources":["webpack://root/./packages/core/src/internal/data-grid-search/data-grid-search-style.tsx","webpack://root/./packages/core/src/internal/data-grid-search/data-grid-search.tsx","webpack://root/./packages/core/src/data-editor/group-rename.tsx","webpack://root/./packages/core/src/data-editor/use-column-sizer.ts","webpack://root/./packages/core/src/common/is-hotkey.ts","webpack://root/./packages/core/src/internal/data-grid/use-selection-behavior.ts","webpack://root/./packages/core/src/data-editor/use-cells-for-selection.ts","webpack://root/./packages/core/src/internal/data-editor-container/data-grid-container.tsx","webpack://root/./packages/core/src/data-editor/use-autoscroll.ts","webpack://root/./packages/core/src/data-editor/use-rem-adjuster.ts","webpack://root/./packages/core/src/data-editor/data-editor.tsx","webpack://root/./packages/core/src/internal/data-grid/sprites.ts","webpack://root/./packages/core/src/data-editor-all.tsx","webpack://root/./packages/core/src/data-editor/data-editor-keybindings.ts","webpack://root/./packages/core/src/internal/click-outside-container/click-outside-container.tsx","webpack://root/./packages/core/src/data-editor/group-rename.tsx?6c24","webpack://root/./packages/core/src/internal/data-editor-container/data-grid-container.tsx?a6bd","webpack://root/./packages/core/src/internal/data-grid-search/data-grid-search-style.tsx?33fb","webpack://root/./packages/core/src/data-editor/group-rename.tsx?b8fe","webpack://root/./packages/core/src/internal/data-editor-container/data-grid-container.tsx?0e90","webpack://root/./packages/core/src/internal/data-grid-search/data-grid-search-style.tsx?183f"],"sourcesContent":["import { styled } from \"@linaria/react\";\n\nexport const SearchWrapper = styled.div`\n    position: absolute;\n    top: 4px;\n    right: 20px;\n\n    background-color: var(--gdg-bg-cell);\n    color: var(--gdg-text-dark);\n\n    padding: 8px;\n    border: 1px solid var(--gdg-border-color);\n    border-radius: 6px;\n\n    font-size: var(--gdg-editor-font-size);\n\n    &.out {\n        animation: gdg-search-fadeout 0.15s forwards;\n    }\n    animation: gdg-search-fadein 0.15s forwards;\n\n    .gdg-search-bar-inner {\n        display: flex;\n    }\n\n    .gdg-search-status {\n        padding-top: 4px;\n        font-size: 11px;\n    }\n\n    .gdg-search-progress {\n        position: absolute;\n        height: 4px;\n        left: 0;\n        bottom: 0;\n\n        background-color: var(--gdg-text-light);\n    }\n\n    input {\n        width: 220px;\n        color: var(--gdg-textDark);\n        background-color: var(--gdg-bg-cell);\n        border: none;\n        border-width: 0;\n        outline: none;\n    }\n\n    button {\n        width: 24px;\n        height: 24px;\n        padding: 0;\n\n        border: none;\n        outline: none;\n        background: none;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        color: var(--gdg-text-medium);\n\n        :hover {\n            color: var(--gdg-text-dark);\n        }\n\n        .button-icon {\n            width: 16px;\n            height: 16px;\n        }\n\n        :disabled {\n            opacity: 0.4;\n            pointer-events: none;\n        }\n    }\n\n    @keyframes gdg-search-fadeout {\n        from {\n            transform: translateX(0);\n        }\n        to {\n            transform: translateX(400px);\n        }\n    }\n\n    @keyframes gdg-search-fadein {\n        from {\n            transform: translateX(400px);\n        }\n        to {\n            transform: translateX(0);\n        }\n    }\n`;\n","/* eslint-disable unicorn/consistent-destructuring */\nimport * as React from \"react\";\nimport {\n    type CellArray,\n    type GetCellsThunk,\n    GridCellKind,\n    type Item,\n    type Rectangle,\n} from \"../data-grid/data-grid-types.js\";\nimport ScrollingDataGrid, { type ScrollingDataGridProps } from \"../scrolling-data-grid/scrolling-data-grid.js\";\nimport { SearchWrapper } from \"./data-grid-search-style.js\";\nimport { assert } from \"../../common/support.js\";\n\n// icons\nconst upArrow = (\n    <svg className=\"button-icon\" viewBox=\"0 0 512 512\">\n        <path\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"48\"\n            d=\"M112 244l144-144 144 144M256 120v292\"\n        />\n    </svg>\n);\nconst downArrow = (\n    <svg className=\"button-icon\" viewBox=\"0 0 512 512\">\n        <path\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"48\"\n            d=\"M112 268l144 144 144-144M256 392V100\"\n        />\n    </svg>\n);\n\nconst closeX = (\n    <svg className=\"button-icon\" viewBox=\"0 0 512 512\">\n        <path\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"32\"\n            d=\"M368 368L144 144M368 144L144 368\"\n        />\n    </svg>\n);\n\nexport interface DataGridSearchProps extends Omit<ScrollingDataGridProps, \"prelightCells\"> {\n    readonly getCellsForSelection?: (selection: Rectangle, abortSignal: AbortSignal) => GetCellsThunk | CellArray;\n\n    /**\n     * The search results to display. If not provided glide will use its own internal search provider.\n     */\n    readonly searchResults?: readonly Item[];\n\n    /**\n     * Emitted whenever the search results for the current search field changes.\n     * @param results The new search results\n     * @param navIndex  The currents selected search result\n     */\n    readonly onSearchResultsChanged?: (results: readonly Item[], navIndex: number) => void;\n    /**\n     * Controls the visibility of the search overlay.\n     * @group Search\n     */\n    readonly showSearch?: boolean;\n    /**\n     * Emitted when the search window close event is triggered.\n     * @group Search\n     */\n    readonly onSearchClose?: () => void;\n    /**\n     * The current search value.\n     * @group Search\n     */\n    readonly searchValue?: string;\n    /**\n     * Emitted when the search value changes.\n     * @group Search\n     * @param newVal The new search value\n     */\n    readonly onSearchValueChange?: (newVal: string) => void;\n    readonly searchInputRef: React.MutableRefObject<HTMLInputElement | null>;\n}\n\nconst targetSearchTimeMS = 10;\n\nconst DataGridSearch: React.FunctionComponent<DataGridSearchProps> = p => {\n    const {\n        canvasRef,\n        cellYOffset,\n        rows,\n        columns,\n        searchInputRef,\n        searchValue,\n        searchResults: searchResultsIn,\n        onSearchValueChange,\n        getCellsForSelection,\n        onSearchResultsChanged,\n        showSearch = false,\n        onSearchClose,\n    } = p;\n\n    const [searchID] = React.useState(() => \"search-box-\" + Math.round(Math.random() * 1000));\n\n    const [searchStringInner, setSearchStringInner] = React.useState(\"\");\n    const searchString = searchValue ?? searchStringInner;\n\n    // always emit both, this allows the user to spy on the search value without controlling it.\n    const setSearchString = React.useCallback(\n        (newVal: string) => {\n            setSearchStringInner(newVal);\n            onSearchValueChange?.(newVal);\n        },\n        [onSearchValueChange]\n    );\n\n    const [searchStatus, setSearchStatus] = React.useState<{\n        rowsSearched: number;\n        results: number;\n        selectedIndex: number;\n    }>();\n\n    const searchStatusRef = React.useRef(searchStatus);\n    searchStatusRef.current = searchStatus;\n    React.useEffect(() => {\n        if (searchResultsIn === undefined) return;\n        if (searchResultsIn.length > 0) {\n            setSearchStatus(cv => ({\n                rowsSearched: rows,\n                results: searchResultsIn.length,\n                selectedIndex: cv?.selectedIndex ?? -1,\n            }));\n        } else {\n            setSearchStatus(undefined);\n        }\n    }, [rows, searchResultsIn]);\n\n    const abortControllerRef = React.useRef() as React.MutableRefObject<AbortController>;\n    if (abortControllerRef.current === undefined) abortControllerRef.current = new AbortController();\n\n    const searchHandle = React.useRef<number>();\n    const [searchResultsInner, setSearchResultsInner] = React.useState<readonly Item[]>([]);\n    const searchResults = searchResultsIn ?? searchResultsInner;\n\n    const cancelSearch = React.useCallback(() => {\n        if (searchHandle.current !== undefined) {\n            window.cancelAnimationFrame(searchHandle.current);\n            searchHandle.current = undefined;\n            abortControllerRef.current.abort();\n        }\n    }, []);\n\n    const cellYOffsetRef = React.useRef(cellYOffset);\n    cellYOffsetRef.current = cellYOffset;\n    const beginSearch = React.useCallback(\n        (str: string) => {\n            const regex = new RegExp(str.replace(/([$()*+.?[\\\\\\]^{|}-])/g, \"\\\\$1\"), \"i\");\n\n            let startY = cellYOffsetRef.current;\n\n            // Lets assume we can do 10 rows at a time\n            // This is usually very safe and limits the damage for bad\n            // performing sheets.\n            let searchStride = Math.min(10, rows);\n\n            let rowsSearched = 0;\n\n            setSearchStatus(undefined);\n            setSearchResultsInner([]);\n\n            const runningResult: [number, number][] = [];\n\n            const tick = async () => {\n                if (getCellsForSelection === undefined) return;\n                const tStart = performance.now();\n                const rowsLeft = rows - rowsSearched;\n                let data = getCellsForSelection(\n                    {\n                        x: 0,\n                        y: startY,\n                        width: columns.length,\n                        height: Math.min(searchStride, rowsLeft, rows - startY),\n                    },\n                    abortControllerRef.current.signal\n                );\n\n                if (typeof data === \"function\") {\n                    data = await data();\n                }\n\n                let added = false;\n                for (const [row, d] of data.entries()) {\n                    for (const [col, cell] of d.entries()) {\n                        let testString: string | undefined;\n                        switch (cell.kind) {\n                            case GridCellKind.Text:\n                            case GridCellKind.Number:\n                                testString = cell.displayData;\n                                break;\n                            case GridCellKind.Uri:\n                            case GridCellKind.Markdown:\n                                testString = cell.data;\n                                break;\n                            case GridCellKind.Boolean:\n                                testString = typeof cell.data === \"boolean\" ? cell.data.toString() : undefined;\n                                break;\n                            case GridCellKind.Image:\n                            case GridCellKind.Bubble:\n                                // I know its lazy, but unless someone is actually\n                                // searching for the whale emoji, this is pretty side effect\n                                // free. And ya know... it's nice and easy to do...\n                                testString = cell.data.join(\"🐳\");\n                                break;\n                            case GridCellKind.Custom:\n                                testString = cell.copyData;\n                                break;\n                        }\n\n                        if (testString !== undefined && regex.test(testString)) {\n                            runningResult.push([col, row + startY]);\n                            added = true;\n                        }\n                    }\n                }\n\n                const tEnd = performance.now();\n\n                if (added) {\n                    setSearchResultsInner([...runningResult]);\n                }\n\n                rowsSearched += data.length;\n                assert(rowsSearched <= rows);\n\n                const selectedIndex = searchStatusRef.current?.selectedIndex ?? -1;\n                setSearchStatus({\n                    results: runningResult.length,\n                    rowsSearched,\n                    selectedIndex,\n                });\n                onSearchResultsChanged?.(runningResult, selectedIndex);\n\n                if (startY + searchStride >= rows) {\n                    startY = 0;\n                } else {\n                    startY += searchStride;\n                }\n\n                const tElapsed = tEnd - tStart;\n                const rounded = Math.max(tElapsed, 1);\n\n                const scalar = targetSearchTimeMS / rounded;\n                searchStride = Math.ceil(searchStride * scalar);\n\n                if (rowsSearched < rows && runningResult.length < 1000) {\n                    searchHandle.current = window.requestAnimationFrame(tick);\n                }\n            };\n\n            cancelSearch();\n            searchHandle.current = window.requestAnimationFrame(tick);\n        },\n        [cancelSearch, columns.length, getCellsForSelection, onSearchResultsChanged, rows]\n    );\n\n    const onClose = React.useCallback(() => {\n        onSearchClose?.();\n        setSearchStatus(undefined);\n        setSearchResultsInner([]);\n        onSearchResultsChanged?.([], -1);\n        cancelSearch();\n        canvasRef?.current?.focus();\n    }, [cancelSearch, canvasRef, onSearchClose, onSearchResultsChanged]);\n\n    const onSearchChange = React.useCallback(\n        (event: React.ChangeEvent<HTMLInputElement>) => {\n            setSearchString(event.target.value);\n            if (searchResultsIn !== undefined) return;\n            if (event.target.value === \"\") {\n                setSearchStatus(undefined);\n                setSearchResultsInner([]);\n                cancelSearch();\n            } else {\n                beginSearch(event.target.value);\n            }\n        },\n        [beginSearch, cancelSearch, setSearchString, searchResultsIn]\n    );\n\n    React.useEffect(() => {\n        if (showSearch && searchInputRef.current !== null) {\n            setSearchString(\"\");\n            searchInputRef.current.focus({ preventScroll: true });\n        }\n    }, [showSearch, searchInputRef, setSearchString]);\n\n    const onNext = React.useCallback(\n        (ev?: React.MouseEvent) => {\n            ev?.stopPropagation?.();\n            if (searchStatus === undefined) return;\n            const newIndex = (searchStatus.selectedIndex + 1) % searchStatus.results;\n            setSearchStatus({\n                ...searchStatus,\n                selectedIndex: newIndex,\n            });\n            onSearchResultsChanged?.(searchResults, newIndex);\n        },\n        [searchStatus, onSearchResultsChanged, searchResults]\n    );\n\n    const onPrev = React.useCallback(\n        (ev?: React.MouseEvent) => {\n            ev?.stopPropagation?.();\n            if (searchStatus === undefined) return;\n            let newIndex = (searchStatus.selectedIndex - 1) % searchStatus.results;\n            if (newIndex < 0) newIndex += searchStatus.results;\n            setSearchStatus({\n                ...searchStatus,\n                selectedIndex: newIndex,\n            });\n            onSearchResultsChanged?.(searchResults, newIndex);\n        },\n        [onSearchResultsChanged, searchResults, searchStatus]\n    );\n\n    const onSearchKeyDown = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (((event.ctrlKey || event.metaKey) && event.nativeEvent.code === \"KeyF\") || event.key === \"Escape\") {\n                onClose();\n                event.stopPropagation();\n                event.preventDefault();\n            } else if (event.key === \"Enter\") {\n                if (event.shiftKey) {\n                    onPrev();\n                } else {\n                    onNext();\n                }\n            }\n        },\n        [onClose, onNext, onPrev]\n    );\n\n    // cancel search if the component is unmounted\n    React.useEffect(() => {\n        return () => {\n            cancelSearch();\n        };\n    }, [cancelSearch]);\n\n    const [isAnimatingOut, setIsAnimatingOut] = React.useState(false);\n\n    React.useEffect(() => {\n        if (showSearch) {\n            setIsAnimatingOut(true);\n        } else {\n            const timeoutId = setTimeout(() => setIsAnimatingOut(false), 150);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [showSearch]);\n\n    const searchbox = React.useMemo(() => {\n        if (!showSearch && !isAnimatingOut) {\n            return null;\n        }\n\n        let resultString: string | undefined;\n        if (searchStatus !== undefined) {\n            resultString =\n                searchStatus.results >= 1000\n                    ? `over 1000`\n                    : `${searchStatus.results} result${searchStatus.results !== 1 ? \"s\" : \"\"}`;\n            if (searchStatus.selectedIndex >= 0) {\n                resultString = `${searchStatus.selectedIndex + 1} of ${resultString}`;\n            }\n        }\n\n        const cancelEvent = (ev: React.MouseEvent) => {\n            ev.stopPropagation();\n        };\n\n        const rowsSearchedProgress = Math.floor(((searchStatus?.rowsSearched ?? 0) / rows) * 100);\n        const progressStyle: React.CSSProperties = {\n            width: `${rowsSearchedProgress}%`,\n        };\n\n        return (\n            <SearchWrapper\n                className={showSearch ? \"\" : \"out\"}\n                onMouseDown={cancelEvent}\n                onMouseMove={cancelEvent}\n                onMouseUp={cancelEvent}\n                onClick={cancelEvent}>\n                <div className=\"gdg-search-bar-inner\">\n                    <input\n                        id={searchID}\n                        aria-hidden={!showSearch}\n                        data-testid=\"search-input\"\n                        ref={searchInputRef}\n                        onChange={onSearchChange}\n                        value={searchString}\n                        tabIndex={showSearch ? undefined : -1}\n                        onKeyDownCapture={onSearchKeyDown}\n                    />\n                    <button\n                        aria-label=\"Previous Result\"\n                        aria-hidden={!showSearch}\n                        tabIndex={showSearch ? undefined : -1}\n                        onClick={onPrev}\n                        disabled={(searchStatus?.results ?? 0) === 0}>\n                        {upArrow}\n                    </button>\n                    <button\n                        aria-label=\"Next Result\"\n                        aria-hidden={!showSearch}\n                        tabIndex={showSearch ? undefined : -1}\n                        onClick={onNext}\n                        disabled={(searchStatus?.results ?? 0) === 0}>\n                        {downArrow}\n                    </button>\n                    {onSearchClose !== undefined && (\n                        <button\n                            aria-label=\"Close Search\"\n                            aria-hidden={!showSearch}\n                            data-testid=\"search-close-button\"\n                            tabIndex={showSearch ? undefined : -1}\n                            onClick={onClose}>\n                            {closeX}\n                        </button>\n                    )}\n                </div>\n                {searchStatus !== undefined ? (\n                    <>\n                        <div className=\"gdg-search-status\">\n                            <div data-testid=\"search-result-area\">{resultString}</div>\n                        </div>\n                        <div className=\"gdg-search-progress\" style={progressStyle} />\n                    </>\n                ) : (\n                    <div className=\"gdg-search-status\">\n                        <label htmlFor={searchID}>Type to search</label>\n                    </div>\n                )}\n            </SearchWrapper>\n        );\n    }, [\n        showSearch,\n        isAnimatingOut,\n        searchStatus,\n        rows,\n        searchID,\n        searchInputRef,\n        onSearchChange,\n        searchString,\n        onSearchKeyDown,\n        onPrev,\n        onNext,\n        onSearchClose,\n        onClose,\n    ]);\n\n    return (\n        <>\n            <ScrollingDataGrid\n                prelightCells={searchResults}\n                accessibilityHeight={p.accessibilityHeight}\n                canvasRef={p.canvasRef}\n                cellXOffset={p.cellXOffset}\n                cellYOffset={p.cellYOffset}\n                className={p.className}\n                clientSize={p.clientSize}\n                columns={p.columns}\n                disabledRows={p.disabledRows}\n                enableGroups={p.enableGroups}\n                fillHandle={p.fillHandle}\n                firstColAccessible={p.firstColAccessible}\n                nonGrowWidth={p.nonGrowWidth}\n                fixedShadowX={p.fixedShadowX}\n                fixedShadowY={p.fixedShadowY}\n                freezeColumns={p.freezeColumns}\n                getCellContent={p.getCellContent}\n                getCellRenderer={p.getCellRenderer}\n                getGroupDetails={p.getGroupDetails}\n                getRowThemeOverride={p.getRowThemeOverride}\n                groupHeaderHeight={p.groupHeaderHeight}\n                headerHeight={p.headerHeight}\n                highlightRegions={p.highlightRegions}\n                imageWindowLoader={p.imageWindowLoader}\n                initialSize={p.initialSize}\n                isFilling={p.isFilling}\n                isFocused={p.isFocused}\n                lockColumns={p.lockColumns}\n                maxColumnWidth={p.maxColumnWidth}\n                minColumnWidth={p.minColumnWidth}\n                onHeaderMenuClick={p.onHeaderMenuClick}\n                onMouseMove={p.onMouseMove}\n                onVisibleRegionChanged={p.onVisibleRegionChanged}\n                overscrollX={p.overscrollX}\n                overscrollY={p.overscrollY}\n                preventDiagonalScrolling={p.preventDiagonalScrolling}\n                rightElement={p.rightElement}\n                rightElementProps={p.rightElementProps}\n                rowHeight={p.rowHeight}\n                rows={p.rows}\n                scrollRef={p.scrollRef}\n                selection={p.selection}\n                theme={p.theme}\n                freezeTrailingRows={p.freezeTrailingRows}\n                hasAppendRow={p.hasAppendRow}\n                translateX={p.translateX}\n                translateY={p.translateY}\n                verticalBorder={p.verticalBorder}\n                onColumnProposeMove={p.onColumnProposeMove}\n                drawFocusRing={p.drawFocusRing}\n                drawCell={p.drawCell}\n                drawHeader={p.drawHeader}\n                experimental={p.experimental}\n                gridRef={p.gridRef}\n                headerIcons={p.headerIcons}\n                isDraggable={p.isDraggable}\n                onCanvasBlur={p.onCanvasBlur}\n                onCanvasFocused={p.onCanvasFocused}\n                onCellFocused={p.onCellFocused}\n                onColumnMoved={p.onColumnMoved}\n                onColumnResize={p.onColumnResize}\n                onColumnResizeEnd={p.onColumnResizeEnd}\n                onColumnResizeStart={p.onColumnResizeStart}\n                onContextMenu={p.onContextMenu}\n                onDragEnd={p.onDragEnd}\n                onDragLeave={p.onDragLeave}\n                onDragOverCell={p.onDragOverCell}\n                onDragStart={p.onDragStart}\n                onDrop={p.onDrop}\n                onItemHovered={p.onItemHovered}\n                onKeyDown={p.onKeyDown}\n                onKeyUp={p.onKeyUp}\n                onMouseDown={p.onMouseDown}\n                onMouseUp={p.onMouseUp}\n                onRowMoved={p.onRowMoved}\n                smoothScrollX={p.smoothScrollX}\n                smoothScrollY={p.smoothScrollY}\n            />\n            {searchbox}\n        </>\n    );\n};\n\nexport default DataGridSearch;\n","import React from \"react\";\nimport { styled } from \"@linaria/react\";\nimport { css } from \"@linaria/core\";\nimport ClickOutsideContainer from \"../internal/click-outside-container/click-outside-container.js\";\nimport type { Rectangle } from \"../internal/data-grid/data-grid-types.js\";\n\ninterface Props {\n    readonly bounds: Rectangle;\n    readonly group: string;\n    readonly onClose: () => void;\n    readonly onFinish: (newVal: string) => void;\n    readonly canvasBounds: DOMRect;\n}\n\nconst RenameInput = styled.input<{ targetHeight: number }>`\n    flex-grow: 1;\n    border: none;\n    outline: none;\n    background-color: var(--gdg-bg-header-has-focus);\n    border-radius: 9px;\n    padding: 0 8px;\n    box-shadow: 0 0 0 1px var(--gdg-border-color);\n    color: var(--gdg-text-group-header);\n    min-height: ${p => Math.max(16, p.targetHeight - 10)}px;\n    font: var(--gdg-header-font-style) var(--gdg-font-family);\n`;\n\nexport const GroupRename: React.VFC<Props> = p => {\n    const { bounds, group, onClose, canvasBounds, onFinish } = p;\n\n    const [value, setValue] = React.useState(group);\n\n    return (\n        <ClickOutsideContainer\n            style={{\n                position: \"absolute\",\n                left: bounds.x - canvasBounds.left + 1,\n                top: bounds.y - canvasBounds.top,\n                width: bounds.width - 2,\n                height: bounds.height,\n            }}\n            className={css`\n                padding: 0 8px;\n                display: flex;\n                align-items: center;\n                background-color: var(--gdg-bg-header);\n            `}\n            onClickOutside={onClose}>\n            <RenameInput\n                targetHeight={bounds.height}\n                data-testid=\"group-rename-input\"\n                value={value}\n                onBlur={onClose}\n                onFocus={e => e.target.setSelectionRange(0, value.length)}\n                onChange={e => setValue(e.target.value)}\n                onKeyDown={e => {\n                    if (e.key === \"Enter\") {\n                        onFinish(value);\n                    } else if (e.key === \"Escape\") {\n                        onClose();\n                    }\n                }}\n                autoFocus={true}\n            />\n        </ClickOutsideContainer>\n    );\n};\n","import * as React from \"react\";\nimport type { FullTheme } from \"../common/styles.js\";\nimport type { DataGridSearchProps } from \"../internal/data-grid-search/data-grid-search.js\";\nimport type { GetCellRendererCallback } from \"../cells/cell-types.js\";\n\nimport {\n    type CellArray,\n    type GridCell,\n    type GridColumn,\n    type InnerGridColumn,\n    isSizedGridColumn,\n    resolveCellsThunk,\n    type SizedGridColumn,\n} from \"../internal/data-grid/data-grid-types.js\";\nconst defaultSize = 150;\n\nfunction measureCell(\n    ctx: CanvasRenderingContext2D,\n    cell: GridCell,\n    theme: FullTheme,\n    getCellRenderer: GetCellRendererCallback\n): number {\n    const r = getCellRenderer(cell);\n    return r?.measure?.(ctx, cell, theme) ?? defaultSize;\n}\n\nexport function measureColumn(\n    ctx: CanvasRenderingContext2D,\n    theme: FullTheme,\n    c: GridColumn,\n    colIndex: number,\n    selectedData: CellArray,\n    minColumnWidth: number,\n    maxColumnWidth: number,\n    removeOutliers: boolean,\n    getCellRenderer: GetCellRendererCallback\n): SizedGridColumn {\n    let max = 0;\n    const sizes: number[] =\n        selectedData === undefined\n            ? []\n            : selectedData.map(row => {\n                  const r = measureCell(ctx, row[colIndex], theme, getCellRenderer);\n                  max = Math.max(max, r);\n                  return r;\n              });\n\n    if (sizes.length > 5 && removeOutliers) {\n        max = 0;\n        // Filter out outliers\n        let sum = 0;\n        for (const size of sizes) {\n            sum += size;\n        }\n        const average = sum / sizes.length;\n        // Set sizes that are considered outliers to zero\n        for (let i = 0; i < sizes.length; i++) {\n            if (sizes[i] >= average * 2) {\n                sizes[i] = 0;\n            } else {\n                max = Math.max(max, sizes[i]);\n            }\n        }\n    }\n    max = Math.max(max, ctx.measureText(c.title).width + 16 + (c.icon === undefined ? 0 : 28));\n    const final = Math.max(Math.ceil(minColumnWidth), Math.min(Math.floor(maxColumnWidth), Math.ceil(max)));\n\n    return {\n        ...c,\n        width: final,\n    };\n}\n\n/** @category Hooks */\nexport function useColumnSizer(\n    columns: readonly GridColumn[],\n    rows: number,\n    getCellsForSelection: DataGridSearchProps[\"getCellsForSelection\"],\n    clientWidth: number,\n    minColumnWidth: number,\n    maxColumnWidth: number,\n    theme: FullTheme,\n    getCellRenderer: GetCellRendererCallback,\n    abortController: AbortController\n): {\n    readonly sizedColumns: readonly InnerGridColumn[];\n    readonly nonGrowWidth: number;\n} {\n    const rowsRef = React.useRef(rows);\n    const getCellsForSelectionRef = React.useRef(getCellsForSelection);\n    const themeRef = React.useRef(theme);\n    rowsRef.current = rows;\n    getCellsForSelectionRef.current = getCellsForSelection;\n    themeRef.current = theme;\n\n    const [canvas, ctx] = React.useMemo(() => {\n        if (typeof window === \"undefined\") return [null, null];\n        const offscreen = document.createElement(\"canvas\");\n        offscreen.style[\"display\"] = \"none\";\n        offscreen.style[\"opacity\"] = \"0\";\n        offscreen.style[\"position\"] = \"fixed\";\n        return [offscreen, offscreen.getContext(\"2d\", { alpha: false })];\n    }, []);\n\n    React.useLayoutEffect(() => {\n        if (canvas) document.documentElement.append(canvas);\n        return () => {\n            canvas?.remove();\n        };\n    }, [canvas]);\n\n    const memoMap = React.useRef<Record<string, number>>({});\n\n    const lastColumns = React.useRef<typeof columns>();\n    const [selectedData, setSelectionData] = React.useState<CellArray | undefined>();\n\n    React.useLayoutEffect(() => {\n        const getCells = getCellsForSelectionRef.current;\n        if (getCells === undefined || columns.every(isSizedGridColumn)) return;\n        let computeRows = Math.max(1, 10 - Math.floor(columns.length / 10_000));\n        let tailRows = 0;\n        if (computeRows < rowsRef.current && computeRows > 1) {\n            computeRows--;\n            tailRows = 1;\n        }\n\n        const computeArea = {\n            x: 0,\n            y: 0,\n            width: columns.length,\n            height: Math.min(rowsRef.current, computeRows),\n        };\n\n        const tailComputeArea = {\n            x: 0,\n            y: rowsRef.current - 1,\n            width: columns.length,\n            height: 1,\n        };\n        const fn = async () => {\n            const getResult = getCells(computeArea, abortController.signal);\n            const tailGetResult = tailRows > 0 ? getCells(tailComputeArea, abortController.signal) : undefined;\n            let toSet: CellArray;\n            // eslint-disable-next-line unicorn/prefer-ternary\n            if (typeof getResult === \"object\") {\n                toSet = getResult;\n            } else {\n                toSet = await resolveCellsThunk(getResult);\n            }\n            if (tailGetResult !== undefined) {\n                // eslint-disable-next-line unicorn/prefer-ternary\n                if (typeof tailGetResult === \"object\") {\n                    toSet = [...toSet, ...tailGetResult];\n                } else {\n                    toSet = [...toSet, ...(await resolveCellsThunk(tailGetResult))];\n                }\n            }\n            lastColumns.current = columns;\n            setSelectionData(toSet);\n        };\n        void fn();\n    }, [abortController.signal, columns]);\n\n    return React.useMemo(() => {\n        const getRaw = () => {\n            if (columns.every(isSizedGridColumn)) {\n                return columns;\n            }\n\n            if (ctx === null) {\n                return columns.map(c => {\n                    if (isSizedGridColumn(c)) return c;\n\n                    return {\n                        ...c,\n                        width: defaultSize,\n                    };\n                });\n            }\n\n            ctx.font = themeRef.current.baseFontFull;\n\n            return columns.map((c, colIndex) => {\n                if (isSizedGridColumn(c)) return c;\n\n                if (memoMap.current[c.id] !== undefined) {\n                    return {\n                        ...c,\n                        width: memoMap.current[c.id],\n                    };\n                }\n\n                if (selectedData === undefined || lastColumns.current !== columns || c.id === undefined) {\n                    return {\n                        ...c,\n                        width: defaultSize,\n                    };\n                }\n\n                const r = measureColumn(\n                    ctx,\n                    theme,\n                    c,\n                    colIndex,\n                    selectedData,\n                    minColumnWidth,\n                    maxColumnWidth,\n                    true,\n                    getCellRenderer\n                );\n                memoMap.current[c.id] = r.width;\n                return r;\n            });\n        };\n\n        let result: readonly InnerGridColumn[] = getRaw();\n        let totalWidth = 0;\n        let totalGrow = 0;\n        const distribute: number[] = [];\n        for (const [i, c] of result.entries()) {\n            totalWidth += c.width;\n            if (c.grow !== undefined && c.grow > 0) {\n                totalGrow += c.grow;\n                distribute.push(i);\n            }\n        }\n        if (totalWidth < clientWidth && distribute.length > 0) {\n            const writeable = [...result];\n            const extra = clientWidth - totalWidth;\n            let remaining = extra;\n            for (let di = 0; di < distribute.length; di++) {\n                const i = distribute[di];\n                const weighted = (result[i].grow ?? 0) / totalGrow;\n                const toAdd =\n                    di === distribute.length - 1 ? remaining : Math.min(remaining, Math.floor(extra * weighted));\n                writeable[i] = {\n                    ...result[i],\n                    growOffset: toAdd,\n                    width: result[i].width + toAdd,\n                };\n                remaining -= toAdd;\n            }\n            result = writeable;\n        }\n        return {\n            sizedColumns: result,\n            nonGrowWidth: totalWidth,\n        };\n    }, [clientWidth, columns, ctx, selectedData, theme, minColumnWidth, maxColumnWidth, getCellRenderer]);\n}\n","import type { GridKeyEventArgs } from \"../internal/data-grid/event-args.js\";\nimport { browserIsOSX } from \"./browser-detect.js\";\n\n// brain dead syntax, find your deps, and make buggy replacements with 5 times the effort\n// all lower case\n// ctrl+shift+alt+d or ctrl+x or shift+c or shift+Backspace or alt+_53\n// you get it, last one is always event.key, nothing fancy\n// special: primary === ctrl on windows, meta on mac\n// no to lower, its a waste, we're the only consumer, don't use caps\n\n// and before you ask, yes space is \" \", e.g. \"ctrl+alt+ \", whatacountry.gif\n// load bearing whitespace, it's basically python\n// if the char starts with a _ it is the event.keycode instead\nfunction checkKey(key: string | undefined, args: GridKeyEventArgs): boolean {\n    if (key === undefined) return false;\n    if (key.length > 1 && key.startsWith(\"_\")) {\n        const keycode = Number.parseInt(key.slice(1));\n        return keycode === args.keyCode;\n    }\n    if (key.length === 1 && key >= \"a\" && key <= \"z\") {\n        return key.toUpperCase().codePointAt(0) === args.keyCode;\n    }\n\n    return key === args.key;\n}\n\ninterface HotkeyResultDetails {\n    didMatch: boolean;\n}\n\nexport function isHotkey(hotkey: string, args: GridKeyEventArgs, details: HotkeyResultDetails): boolean {\n    const result = isHotkeyInner(hotkey, args);\n    if (result) details.didMatch = true;\n    return result;\n}\n\nfunction isHotkeyInner(hotkey: string, args: GridKeyEventArgs): boolean {\n    if (hotkey.length === 0) return false;\n\n    if (hotkey.includes(\"|\")) {\n        const parts = hotkey.split(\"|\");\n        for (const part of parts) {\n            if (isHotkeyInner(part, args)) return true;\n        }\n        return false;\n    }\n\n    let wantCtrl = false;\n    let wantShift = false;\n    let wantAlt = false;\n    let wantMeta = false;\n\n    const split = hotkey.split(\"+\");\n    const key = split.pop();\n\n    if (!checkKey(key, args)) return false;\n    if (split[0] === \"any\") return true;\n\n    for (const accel of split) {\n        switch (accel) {\n            case \"ctrl\":\n                wantCtrl = true;\n                break;\n            case \"shift\":\n                wantShift = true;\n                break;\n            case \"alt\":\n                wantAlt = true;\n                break;\n            case \"meta\":\n                wantMeta = true;\n                break;\n            case \"primary\":\n                if (browserIsOSX.value) {\n                    wantMeta = true;\n                } else {\n                    wantCtrl = true;\n                }\n                break;\n        }\n    }\n\n    return (\n        args.altKey === wantAlt && args.ctrlKey === wantCtrl && args.shiftKey === wantShift && args.metaKey === wantMeta\n    );\n}\n","import React from \"react\";\nimport { CompactSelection, type GridSelection, type Slice } from \"./data-grid-types.js\";\n\ntype SetCallback = (newVal: GridSelection, expand: boolean) => void;\n\nexport type SelectionBlending = \"exclusive\" | \"mixed\";\n\ntype SelectionTrigger = \"click\" | \"drag\" | \"keyboard-nav\" | \"keyboard-select\" | \"edit\";\n\nexport function useSelectionBehavior(\n    gridSelection: GridSelection,\n    setGridSelection: SetCallback,\n    rangeBehavior: SelectionBlending,\n    columnBehavior: SelectionBlending,\n    rowBehavior: SelectionBlending,\n    rangeSelect: \"none\" | \"cell\" | \"rect\" | \"multi-cell\" | \"multi-rect\"\n) {\n    // if append is true, the current range will be added to the rangeStack\n    const setCurrent = React.useCallback(\n        (\n            value: Pick<NonNullable<GridSelection[\"current\"]>, \"cell\" | \"range\"> | undefined,\n            expand: boolean,\n            append: boolean,\n            trigger: SelectionTrigger\n        ) => {\n            if ((rangeSelect === \"cell\" || rangeSelect === \"multi-cell\") && value !== undefined) {\n                value = {\n                    ...value,\n                    range: {\n                        x: value.cell[0],\n                        y: value.cell[1],\n                        width: 1,\n                        height: 1,\n                    },\n                };\n            }\n            const rangeMixable = rangeBehavior === \"mixed\" && (append || trigger === \"drag\");\n            const allowColumnCoSelect = columnBehavior === \"mixed\" && rangeMixable;\n            const allowRowCoSelect = rowBehavior === \"mixed\" && rangeMixable;\n            let newVal: GridSelection = {\n                current:\n                    value === undefined\n                        ? undefined\n                        : {\n                              ...value,\n                              rangeStack: trigger === \"drag\" ? gridSelection.current?.rangeStack ?? [] : [],\n                          },\n                columns: allowColumnCoSelect ? gridSelection.columns : CompactSelection.empty(),\n                rows: allowRowCoSelect ? gridSelection.rows : CompactSelection.empty(),\n            };\n\n            const addLastRange = append && (rangeSelect === \"multi-rect\" || rangeSelect === \"multi-cell\");\n            if (addLastRange && newVal.current !== undefined && gridSelection.current !== undefined) {\n                newVal = {\n                    ...newVal,\n                    current: {\n                        ...newVal.current,\n                        rangeStack: [...gridSelection.current.rangeStack, gridSelection.current.range],\n                    },\n                };\n            }\n            setGridSelection(newVal, expand);\n        },\n        [columnBehavior, gridSelection, rangeBehavior, rangeSelect, rowBehavior, setGridSelection]\n    );\n\n    const setSelectedRows = React.useCallback(\n        (newRows: CompactSelection | undefined, append: Slice | number | undefined, allowMixed: boolean): void => {\n            newRows = newRows ?? gridSelection.rows;\n            if (append !== undefined) {\n                newRows = newRows.add(append);\n            }\n            let newVal: GridSelection;\n            if (rowBehavior === \"exclusive\" && newRows.length > 0) {\n                newVal = {\n                    current: undefined,\n                    columns: CompactSelection.empty(),\n                    rows: newRows,\n                };\n            } else {\n                const rangeMixed = allowMixed && rangeBehavior === \"mixed\";\n                const columnMixed = allowMixed && columnBehavior === \"mixed\";\n                const current = !rangeMixed ? undefined : gridSelection.current;\n                newVal = {\n                    current,\n                    columns: columnMixed ? gridSelection.columns : CompactSelection.empty(),\n                    rows: newRows,\n                };\n            }\n            setGridSelection(newVal, false);\n        },\n        [columnBehavior, gridSelection, rangeBehavior, rowBehavior, setGridSelection]\n    );\n\n    const setSelectedColumns = React.useCallback(\n        (newCols: CompactSelection | undefined, append: number | Slice | undefined, allowMixed: boolean): void => {\n            newCols = newCols ?? gridSelection.columns;\n            if (append !== undefined) {\n                newCols = newCols.add(append);\n            }\n            let newVal: GridSelection;\n            if (columnBehavior === \"exclusive\" && newCols.length > 0) {\n                newVal = {\n                    current: undefined,\n                    rows: CompactSelection.empty(),\n                    columns: newCols,\n                };\n            } else {\n                const rangeMixed = allowMixed && rangeBehavior === \"mixed\";\n                const rowMixed = allowMixed && rowBehavior === \"mixed\";\n                const current = !rangeMixed ? undefined : gridSelection.current;\n                newVal = {\n                    current,\n                    rows: rowMixed ? gridSelection.rows : CompactSelection.empty(),\n                    columns: newCols,\n                };\n            }\n            setGridSelection(newVal, false);\n        },\n        [columnBehavior, gridSelection, rangeBehavior, rowBehavior, setGridSelection]\n    );\n\n    return [setCurrent, setSelectedRows, setSelectedColumns] as const;\n}\n","import * as React from \"react\";\nimport type { DataGridSearchProps } from \"../internal/data-grid-search/data-grid-search.js\";\nimport { type CellArray, type GridCell, GridCellKind } from \"../internal/data-grid/data-grid-types.js\";\nimport type { DataEditorProps } from \"./data-editor.js\";\n\ntype CellsForSelectionCallback = NonNullable<DataGridSearchProps[\"getCellsForSelection\"]>;\nexport function useCellsForSelection(\n    getCellsForSelectionIn: CellsForSelectionCallback | true | undefined,\n    getCellContent: DataEditorProps[\"getCellContent\"],\n    rowMarkerOffset: number,\n    abortController: AbortController,\n    rows: number\n) {\n    const getCellsForSelectionDirectWhenValid = React.useCallback<CellsForSelectionCallback>(\n        rect => {\n            if (getCellsForSelectionIn === true) {\n                const result: GridCell[][] = [];\n\n                for (let y = rect.y; y < rect.y + rect.height; y++) {\n                    const row: GridCell[] = [];\n                    for (let x = rect.x; x < rect.x + rect.width; x++) {\n                        if (x < 0 || y >= rows) {\n                            row.push({\n                                kind: GridCellKind.Loading,\n                                allowOverlay: false,\n                            });\n                        } else {\n                            row.push(getCellContent([x, y]));\n                        }\n                    }\n                    result.push(row);\n                }\n\n                return result;\n            }\n            return getCellsForSelectionIn?.(rect, abortController.signal) ?? [];\n        },\n        [abortController.signal, getCellContent, getCellsForSelectionIn, rows]\n    );\n    const getCellsForSelectionDirect =\n        getCellsForSelectionIn !== undefined ? getCellsForSelectionDirectWhenValid : undefined;\n    const getCellsForSelectionMangled = React.useCallback<CellsForSelectionCallback>(\n        rect => {\n            if (getCellsForSelectionDirect === undefined) return [];\n            const newRect = {\n                ...rect,\n                x: rect.x - rowMarkerOffset,\n            };\n            if (newRect.x < 0) {\n                newRect.x = 0;\n                newRect.width--;\n                const r = getCellsForSelectionDirect(newRect, abortController.signal);\n\n                if (typeof r === \"function\") {\n                    return async () =>\n                        // eslint-disable-next-line unicorn/no-await-expression-member\n                        (await r()).map<CellArray[0]>(row => [\n                            { kind: GridCellKind.Loading, allowOverlay: false },\n                            ...row,\n                        ]);\n                }\n                return r.map(row => [{ kind: GridCellKind.Loading, allowOverlay: false }, ...row]);\n            }\n            return getCellsForSelectionDirect(newRect, abortController.signal);\n        },\n        [abortController.signal, getCellsForSelectionDirect, rowMarkerOffset]\n    );\n\n    const getCellsForSelection = getCellsForSelectionIn !== undefined ? getCellsForSelectionMangled : undefined;\n\n    return [getCellsForSelection, getCellsForSelectionDirect] as const;\n}\n","import { styled } from \"@linaria/react\";\nimport * as React from \"react\";\n\ninterface WrapperProps {\n    inWidth: number | string;\n    inHeight: number | string;\n}\n\nfunction toCss(x: number | string) {\n    if (typeof x === \"string\") return x;\n    return `${x}px`;\n}\n\nconst Wrapper = styled.div<{ innerWidth: string; innerHeight: string }>`\n    position: relative;\n\n    min-width: 10px;\n    min-height: 10px;\n    max-width: 100%;\n    max-height: 100%;\n\n    width: ${p => p.innerWidth};\n    height: ${p => p.innerHeight};\n\n    overflow: hidden;\n    overflow: clip;\n\n    direction: ltr;\n\n    > :first-child {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\ninterface Props extends WrapperProps, React.HTMLAttributes<HTMLDivElement> {}\n\nexport const DataEditorContainer: React.FunctionComponent<React.PropsWithChildren<Props>> = p => {\n    const { inWidth, inHeight, children, ...rest } = p;\n    return (\n        <Wrapper innerHeight={toCss(inHeight)} innerWidth={toCss(inWidth)} {...rest}>\n            {children}\n        </Wrapper>\n    );\n};\n","import React from \"react\";\nimport type { GridMouseCellEventArgs } from \"../internal/data-grid/event-args.js\";\n\nconst maxPxPerMs = 2;\nconst msToFullSpeed = 1300;\n\nexport function useAutoscroll(\n    scrollDirection: GridMouseCellEventArgs[\"scrollEdge\"] | undefined,\n    scrollRef: React.MutableRefObject<HTMLDivElement | null>,\n    onScroll?: () => void\n) {\n    const speedScalar = React.useRef(0);\n    const [xDir, yDir] = scrollDirection ?? [0, 0];\n    React.useEffect(() => {\n        if (xDir === 0 && yDir === 0) {\n            speedScalar.current = 0;\n            return;\n        }\n        let cancelled = false;\n\n        let lastTime = 0;\n        const scrollFn = (curTime: number) => {\n            if (cancelled) return;\n            if (lastTime === 0) {\n                lastTime = curTime;\n            } else {\n                const step = curTime - lastTime;\n                speedScalar.current = Math.min(1, speedScalar.current + step / msToFullSpeed);\n                const motion = speedScalar.current ** 1.618 * step * maxPxPerMs;\n                scrollRef.current?.scrollBy(xDir * motion, yDir * motion);\n                lastTime = curTime;\n                onScroll?.();\n            }\n            window.requestAnimationFrame(scrollFn);\n        };\n        window.requestAnimationFrame(scrollFn);\n        return () => {\n            cancelled = true;\n        };\n    }, [scrollRef, xDir, yDir, onScroll]);\n}\n","import React from \"react\";\nimport { getDataEditorTheme, type Theme } from \"../common/styles.js\";\n\ninterface DataEditorDimensions {\n    rowHeight: number | ((n: number) => number);\n    headerHeight: number;\n    groupHeaderHeight: number;\n    theme: Partial<Theme> | undefined;\n    overscrollX: number | undefined;\n    overscrollY: number | undefined;\n}\n\ninterface DataEditorProps {\n    rowHeight: number | ((n: number) => number);\n    headerHeight: number;\n    groupHeaderHeight: number;\n    theme?: Partial<Theme>;\n    overscrollX?: number;\n    overscrollY?: number;\n    scaleToRem: boolean;\n    remSize: number;\n}\n\nexport function useRemAdjuster({\n    rowHeight: rowHeightIn,\n    headerHeight: headerHeightIn,\n    groupHeaderHeight: groupHeaderHeightIn,\n    theme: themeIn,\n    overscrollX: overscrollXIn,\n    overscrollY: overscrollYIn,\n    scaleToRem,\n    remSize,\n}: DataEditorProps): DataEditorDimensions {\n    const [rowHeight, headerHeight, groupHeaderHeight, theme, overscrollX, overscrollY] = React.useMemo(() => {\n        if (!scaleToRem || remSize === 16)\n            return [rowHeightIn, headerHeightIn, groupHeaderHeightIn, themeIn, overscrollXIn, overscrollYIn];\n        const scaler = remSize / 16;\n        const rh = rowHeightIn;\n        const bt = getDataEditorTheme();\n        return [\n            typeof rh === \"number\" ? rh * scaler : (n: number) => Math.ceil(rh(n) * scaler),\n            Math.ceil(headerHeightIn * scaler),\n            Math.ceil(groupHeaderHeightIn * scaler),\n            {\n                ...themeIn,\n                headerIconSize: (themeIn?.headerIconSize ?? bt.headerIconSize) * scaler,\n                cellHorizontalPadding: (themeIn?.cellHorizontalPadding ?? bt.cellHorizontalPadding) * scaler,\n                cellVerticalPadding: (themeIn?.cellVerticalPadding ?? bt.cellVerticalPadding) * scaler,\n            },\n            Math.ceil((overscrollXIn ?? 0) * scaler),\n            Math.ceil((overscrollYIn ?? 0) * scaler),\n        ];\n    }, [groupHeaderHeightIn, headerHeightIn, overscrollXIn, overscrollYIn, remSize, rowHeightIn, scaleToRem, themeIn]);\n\n    return { rowHeight, headerHeight, groupHeaderHeight, theme, overscrollX, overscrollY };\n}\n","/* eslint-disable sonarjs/no-duplicate-string */\nimport * as React from \"react\";\nimport { assert, assertNever, maybe } from \"../common/support.js\";\nimport clamp from \"lodash/clamp.js\";\nimport uniq from \"lodash/uniq.js\";\nimport flatten from \"lodash/flatten.js\";\nimport range from \"lodash/range.js\";\nimport debounce from \"lodash/debounce.js\";\nimport {\n    type EditableGridCell,\n    type GridCell,\n    GridCellKind,\n    type GridSelection,\n    isEditableGridCell,\n    type Rectangle,\n    isReadWriteCell,\n    type InnerGridCell,\n    InnerGridCellKind,\n    CompactSelection,\n    type Slice,\n    isInnerOnlyCell,\n    type ProvideEditorCallback,\n    type GridColumn,\n    isObjectEditorCallbackResult,\n    type Item,\n    type MarkerCell,\n    headerCellUnheckedMarker,\n    headerCellCheckedMarker,\n    headerCellIndeterminateMarker,\n    type ValidatedGridCell,\n    type ImageEditorType,\n    type CustomCell,\n    BooleanEmpty,\n    BooleanIndeterminate,\n    type FillHandleDirection,\n    type EditListItem,\n} from \"../internal/data-grid/data-grid-types.js\";\nimport DataGridSearch, { type DataGridSearchProps } from \"../internal/data-grid-search/data-grid-search.js\";\nimport { browserIsOSX } from \"../common/browser-detect.js\";\nimport {\n    getDataEditorTheme,\n    makeCSSStyle,\n    type FullTheme,\n    type Theme,\n    ThemeContext,\n    mergeAndRealizeTheme,\n} from \"../common/styles.js\";\nimport type { DataGridRef } from \"../internal/data-grid/data-grid.js\";\nimport { getScrollBarWidth, useEventListener, useStateWithReactiveInput, whenDefined } from \"../common/utils.js\";\nimport {\n    isGroupEqual,\n    itemsAreEqual,\n    itemIsInRect,\n    gridSelectionHasItem,\n    getFreezeTrailingHeight,\n} from \"../internal/data-grid/data-grid-lib.js\";\nimport { GroupRename } from \"./group-rename.js\";\nimport { measureColumn, useColumnSizer } from \"./use-column-sizer.js\";\nimport { isHotkey } from \"../common/is-hotkey.js\";\nimport { type SelectionBlending, useSelectionBehavior } from \"../internal/data-grid/use-selection-behavior.js\";\nimport { useCellsForSelection } from \"./use-cells-for-selection.js\";\nimport { unquote, expandSelection, copyToClipboard, toggleBoolean } from \"./data-editor-fns.js\";\nimport { DataEditorContainer } from \"../internal/data-editor-container/data-grid-container.js\";\nimport { useAutoscroll } from \"./use-autoscroll.js\";\nimport type { CustomRenderer, CellRenderer, InternalCellRenderer } from \"../cells/cell-types.js\";\nimport { decodeHTML, type CopyBuffer } from \"./copy-paste.js\";\nimport { useRemAdjuster } from \"./use-rem-adjuster.js\";\nimport { pointInRect, type Highlight } from \"../internal/data-grid/data-grid-render.js\";\nimport { withAlpha } from \"../internal/data-grid/color-parser.js\";\nimport { combineRects, getClosestRect } from \"../common/math.js\";\nimport {\n    type HeaderClickedEventArgs,\n    type GroupHeaderClickedEventArgs,\n    type CellClickedEventArgs,\n    type FillPatternEventArgs,\n    type GridMouseEventArgs,\n    groupHeaderKind,\n    outOfBoundsKind,\n    type GridMouseCellEventArgs,\n    headerKind,\n    type GridDragEventArgs,\n    mouseEventArgsAreEqual,\n    type GridKeyEventArgs,\n} from \"../internal/data-grid/event-args.js\";\nimport { type Keybinds, useKeybindingsWithDefaults } from \"./data-editor-keybindings.js\";\n\nconst DataGridOverlayEditor = React.lazy(\n    async () => await import(\"../internal/data-grid-overlay-editor/data-grid-overlay-editor.js\")\n);\n\nlet idCounter = 0;\n\ninterface MouseState {\n    readonly previousSelection?: GridSelection;\n    readonly fillHandle?: boolean;\n}\n\ntype Props = Partial<\n    Omit<\n        DataGridSearchProps,\n        | \"accessibilityHeight\"\n        | \"canvasRef\"\n        | \"cellXOffset\"\n        | \"cellYOffset\"\n        | \"className\"\n        | \"clientSize\"\n        | \"columns\"\n        | \"disabledRows\"\n        | \"enableGroups\"\n        | \"firstColAccessible\"\n        | \"firstColSticky\"\n        | \"freezeColumns\"\n        | \"hasAppendRow\"\n        | \"getCellContent\"\n        | \"getCellRenderer\"\n        | \"getCellsForSelection\"\n        | \"gridRef\"\n        | \"groupHeaderHeight\"\n        | \"headerHeight\"\n        | \"isFilling\"\n        | \"isFocused\"\n        | \"imageWindowLoader\"\n        | \"lockColumns\"\n        | \"maxColumnWidth\"\n        | \"minColumnWidth\"\n        | \"nonGrowWidth\"\n        | \"onCanvasBlur\"\n        | \"onCanvasFocused\"\n        | \"onCellFocused\"\n        | \"onContextMenu\"\n        | \"onDragEnd\"\n        | \"onMouseDown\"\n        | \"onMouseMove\"\n        | \"onMouseUp\"\n        | \"onVisibleRegionChanged\"\n        | \"rowHeight\"\n        | \"rows\"\n        | \"scrollRef\"\n        | \"searchInputRef\"\n        | \"selectedColumns\"\n        | \"selection\"\n        | \"theme\"\n        | \"translateX\"\n        | \"translateY\"\n        | \"verticalBorder\"\n    >\n>;\n\ntype EmitEvents = \"copy\" | \"paste\" | \"delete\" | \"fill-right\" | \"fill-down\";\n\nfunction getSpanStops(cells: readonly (readonly GridCell[])[]): number[] {\n    return uniq(\n        flatten(\n            flatten(cells)\n                .filter(c => c.span !== undefined)\n                .map(c => range((c.span?.[0] ?? 0) + 1, (c.span?.[1] ?? 0) + 1))\n        )\n    );\n}\n\nfunction shiftSelection(input: GridSelection, offset: number): GridSelection {\n    if (input === undefined || offset === 0 || (input.columns.length === 0 && input.current === undefined))\n        return input;\n\n    return {\n        current:\n            input.current === undefined\n                ? undefined\n                : {\n                      cell: [input.current.cell[0] + offset, input.current.cell[1]],\n                      range: {\n                          ...input.current.range,\n                          x: input.current.range.x + offset,\n                      },\n                      rangeStack: input.current.rangeStack.map(r => ({\n                          ...r,\n                          x: r.x + offset,\n                      })),\n                  },\n        rows: input.rows,\n        columns: input.columns.offset(offset),\n    };\n}\n\n/**\n * @category DataEditor\n */\nexport interface DataEditorProps extends Props, Pick<DataGridSearchProps, \"imageWindowLoader\"> {\n    /** Emitted whenever the user has requested the deletion of the selection.\n     * @group Editing\n     */\n    readonly onDelete?: (selection: GridSelection) => boolean | GridSelection;\n    /** Emitted whenever a cell edit is completed.\n     * @group Editing\n     */\n    readonly onCellEdited?: (cell: Item, newValue: EditableGridCell) => void;\n    /** Emitted whenever a cell mutation is completed and provides all edits inbound as a single batch.\n     * @group Editing\n     */\n    readonly onCellsEdited?: (newValues: readonly EditListItem[]) => boolean | void;\n    /** Emitted whenever a row append operation is requested. Append location can be set in callback.\n     * @group Editing\n     */\n    readonly onRowAppended?: () => Promise<\"top\" | \"bottom\" | number | undefined> | void;\n    /** Emitted when a column header should show a context menu. Usually right click.\n     * @group Events\n     */\n    readonly onHeaderClicked?: (colIndex: number, event: HeaderClickedEventArgs) => void;\n    /** Emitted when a group header is clicked.\n     * @group Events\n     */\n    readonly onGroupHeaderClicked?: (colIndex: number, event: GroupHeaderClickedEventArgs) => void;\n    /** Emitted whe the user wishes to rename a group.\n     * @group Events\n     */\n    readonly onGroupHeaderRenamed?: (groupName: string, newVal: string) => void;\n    /** Emitted when a cell is clicked.\n     * @group Events\n     */\n    readonly onCellClicked?: (cell: Item, event: CellClickedEventArgs) => void;\n    /** Emitted when a cell is activated, by pressing Enter, Space or double clicking it.\n     * @group Events\n     */\n    readonly onCellActivated?: (cell: Item) => void;\n\n    /**\n     * Emitted whenever the user initiats a pattern fill using the fill handle. This event provides both\n     * a patternSource region and a fillDestination region, and can be prevented.\n     * @group Editing\n     */\n    readonly onFillPattern?: (event: FillPatternEventArgs) => void;\n    /** Emitted when editing has finished, regardless of data changing or not.\n     * @group Editing\n     */\n    readonly onFinishedEditing?: (newValue: GridCell | undefined, movement: Item) => void;\n    /** Emitted when a column header should show a context menu. Usually right click.\n     * @group Events\n     */\n    readonly onHeaderContextMenu?: (colIndex: number, event: HeaderClickedEventArgs) => void;\n    /** Emitted when a group header should show a context menu. Usually right click.\n     * @group Events\n     */\n    readonly onGroupHeaderContextMenu?: (colIndex: number, event: GroupHeaderClickedEventArgs) => void;\n    /** Emitted when a cell should show a context menu. Usually right click.\n     * @group Events\n     */\n    readonly onCellContextMenu?: (cell: Item, event: CellClickedEventArgs) => void;\n    /** Used for validating cell values during editing.\n     * @group Editing\n     * @param cell The cell which is being validated.\n     * @param newValue The new value being proposed.\n     * @param prevValue The previous value before the edit.\n     * @returns A return of false indicates the value will not be accepted. A value of\n     * true indicates the value will be accepted. Returning a new GridCell will immediately coerce the value to match.\n     */\n    readonly validateCell?: (\n        cell: Item,\n        newValue: EditableGridCell,\n        prevValue: GridCell\n    ) => boolean | ValidatedGridCell;\n\n    /** The columns to display in the data grid.\n     * @group Data\n     */\n    readonly columns: readonly GridColumn[];\n\n    /** Controls the trailing row used to insert new data into the grid.\n     * @group Editing\n     */\n    readonly trailingRowOptions?: {\n        /** If the trailing row should be tinted */\n        readonly tint?: boolean;\n        /** A hint string displayed on hover. Usually something like \"New row\" */\n        readonly hint?: string;\n        /** When set to true, the trailing row is always visible. */\n        readonly sticky?: boolean;\n        /** The icon to use for the cell. Either a GridColumnIcon or a member of the passed headerIcons */\n        readonly addIcon?: string;\n        /** Overrides the column to focus when a new row is created. */\n        readonly targetColumn?: number | GridColumn;\n    };\n    /** Controls the height of the header row\n     * @defaultValue 36\n     * @group Style\n     */\n    readonly headerHeight?: number;\n    /** Controls the header of the group header row\n     * @defaultValue `headerHeight`\n     * @group Style\n     */\n    readonly groupHeaderHeight?: number;\n\n    /**\n     * The number of rows in the grid.\n     * @group Data\n     */\n    readonly rows: number;\n\n    /** Determines if row markers should be automatically added to the grid.\n     * Interactive row markers allow the user to select a row.\n     *\n     * - \"clickable-number\" renders a number that can be clicked to\n     *   select the row\n     * - \"both\" causes the row marker to show up as a number but\n     *   reveal a checkbox when the marker is hovered.\n     *\n     * @defaultValue `none`\n     * @group Style\n     */\n    readonly rowMarkers?: \"checkbox\" | \"number\" | \"clickable-number\" | \"checkbox-visible\" | \"both\" | \"none\";\n    /**\n     * Sets the width of row markers in pixels, if unset row markers will automatically size.\n     * @group Style\n     */\n    readonly rowMarkerWidth?: number;\n    /** Changes the starting index for row markers.\n     * @defaultValue 1\n     * @group Style\n     */\n    readonly rowMarkerStartIndex?: number;\n\n    /** Changes the theme of the row marker column\n     * @group Style\n     */\n    readonly rowMarkerTheme?: Partial<Theme>;\n\n    /** Sets the width of the data grid.\n     * @group Style\n     */\n    readonly width?: number | string;\n    /** Sets the height of the data grid.\n     * @group Style\n     */\n    readonly height?: number | string;\n    /** Custom classname for data grid wrapper.\n     * @group Style\n     */\n    readonly className?: string;\n\n    /** If set to `default`, `gridSelection` will be coerced to always include full spans.\n     * @group Selection\n     * @defaultValue `default`\n     */\n    readonly spanRangeBehavior?: \"default\" | \"allowPartial\";\n\n    /** Controls which types of selections can exist at the same time in the grid. If selection blending is set to\n     * exclusive, the grid will clear other types of selections when the exclusive selection is made. By default row,\n     * column, and range selections are exclusive.\n     * @group Selection\n     * @defaultValue `exclusive`\n     * */\n    readonly rangeSelectionBlending?: SelectionBlending;\n    /** {@inheritDoc rangeSelectionBlending}\n     * @group Selection\n     */\n    readonly columnSelectionBlending?: SelectionBlending;\n    /** {@inheritDoc rangeSelectionBlending}\n     * @group Selection\n     */\n    readonly rowSelectionBlending?: SelectionBlending;\n    /** Controls if multi-selection is allowed. If disabled, shift/ctrl/command clicking will work as if no modifiers\n     * are pressed.\n     *\n     * When range select is set to cell, only one cell may be selected at a time. When set to rect one one rect at a\n     * time. The multi variants allow for multiples of the rect or cell to be selected.\n     * @group Selection\n     * @defaultValue `rect`\n     */\n    readonly rangeSelect?: \"none\" | \"cell\" | \"rect\" | \"multi-cell\" | \"multi-rect\";\n    /** {@inheritDoc rangeSelect}\n     * @group Selection\n     * @defaultValue `multi`\n     */\n    readonly columnSelect?: \"none\" | \"single\" | \"multi\";\n    /** {@inheritDoc rangeSelect}\n     * @group Selection\n     * @defaultValue `multi`\n     */\n    readonly rowSelect?: \"none\" | \"single\" | \"multi\";\n\n    /** Sets the initial scroll Y offset.\n     * @see {@link scrollOffsetX}\n     * @group Advanced\n     */\n    readonly scrollOffsetY?: number;\n    /** Sets the initial scroll X offset\n     * @see {@link scrollOffsetY}\n     * @group Advanced\n     */\n    readonly scrollOffsetX?: number;\n\n    /** Determins the height of each row.\n     * @group Style\n     * @defaultValue 34\n     */\n    readonly rowHeight?: DataGridSearchProps[\"rowHeight\"];\n    /** Fires whenever the mouse moves\n     * @group Events\n     * @param args\n     */\n    readonly onMouseMove?: DataGridSearchProps[\"onMouseMove\"];\n\n    /**\n     * The minimum width a column can be resized to.\n     * @defaultValue 50\n     * @group Style\n     */\n    readonly minColumnWidth?: DataGridSearchProps[\"minColumnWidth\"];\n    /**\n     * The maximum width a column can be resized to.\n     * @defaultValue 500\n     * @group Style\n     */\n    readonly maxColumnWidth?: DataGridSearchProps[\"maxColumnWidth\"];\n    /**\n     * The maximum width a column can be automatically sized to.\n     * @defaultValue `maxColumnWidth`\n     * @group Style\n     */\n    readonly maxColumnAutoWidth?: number;\n\n    /**\n     * Used to provide an override to the default image editor for the data grid. `provideEditor` may be a better\n     * choice for most people.\n     * @group Advanced\n     * */\n    readonly imageEditorOverride?: ImageEditorType;\n    /**\n     * If specified, it will be used to render Markdown, instead of the default Markdown renderer used by the Grid.\n     * You'll want to use this if you need to process your Markdown for security purposes, or if you want to use a\n     * renderer with different Markdown features.\n     * @group Advanced\n     */\n    readonly markdownDivCreateNode?: (content: string) => DocumentFragment;\n\n    /** Callback for providing a custom editor for a cell.\n     * @group Editing\n     */\n    readonly provideEditor?: ProvideEditorCallback<GridCell>;\n    /**\n     * Allows coercion of pasted values.\n     * @group Editing\n     * @param val The pasted value\n     * @param cell The cell being pasted into\n     * @returns `undefined` to accept default behavior or a `GridCell` which should be used to represent the pasted value.\n     */\n    readonly coercePasteValue?: (val: string, cell: GridCell) => GridCell | undefined;\n\n    /**\n     * Emitted when the grid selection is cleared.\n     * @group Selection\n     */\n    readonly onSelectionCleared?: () => void;\n\n    /**\n     * The current selection of the data grid. Contains all selected cells, ranges, rows, and columns.\n     * Used in conjunction with {@link onGridSelectionChange}\n     * method to implement a controlled selection.\n     * @group Selection\n     */\n    readonly gridSelection?: GridSelection;\n    /**\n     * Emitted whenever the grid selection changes. Specifying\n     * this function will make the grid’s selection controlled, so\n     * so you will need to specify {@link gridSelection} as well. See\n     * the \"Controlled Selection\" example for details.\n     *\n     * @param newSelection The new gridSelection as created by user input.\n     * @group Selection\n     */\n    readonly onGridSelectionChange?: (newSelection: GridSelection) => void;\n    /**\n     * Emitted whenever the visible cells change, usually due to scrolling.\n     * @group Events\n     * @param range An inclusive range of all visible cells. May include cells obscured by UI elements such\n     * as headers.\n     * @param tx The x transform of the cell region.\n     * @param ty The y transform of the cell region.\n     * @param extras Contains information about the selected cell and\n     * any visible freeze columns.\n     */\n    readonly onVisibleRegionChanged?: (\n        range: Rectangle,\n        tx: number,\n        ty: number,\n        extras: {\n            /** The selected item if visible */\n            selected?: Item;\n            /** A selection of visible freeze columns\n             * @deprecated\n             */\n            freezeRegion?: Rectangle;\n\n            /**\n             * All visible freeze regions\n             */\n            freezeRegions?: readonly Rectangle[];\n        }\n    ) => void;\n\n    /**\n     * The primary callback for getting cell data into the data grid.\n     * @group Data\n     * @param cell The location of the cell being requested.\n     * @returns A valid GridCell to be rendered by the Grid.\n     */\n    readonly getCellContent: (cell: Item) => GridCell;\n    /**\n     * Determines if row selection requires a modifier key to enable multi-selection or not. In auto mode it adapts to\n     * touch or mouse environments automatically, in multi-mode it always acts as if the multi key (Ctrl) is pressed.\n     * @group Editing\n     * @defaultValue `auto`\n     */\n    readonly rowSelectionMode?: \"auto\" | \"multi\";\n\n    /**\n     * Add table headers to copied data.\n     * @group Editing\n     * @defaultValue `false`\n     */\n    readonly copyHeaders?: boolean;\n\n    /**\n     * Determins which keybindings are enabled.\n     * @group Editing\n     */\n    readonly keybindings?: Partial<Keybinds>;\n\n    /**\n     * Used to fetch large amounts of cells at once. Used for copy/paste, if unset copy will not work.\n     *\n     * `getCellsForSelection` is called when the user copies a selection to the clipboard or the data editor needs to\n     * inspect data which may be outside the curently visible range. It must return a two-dimensional array (an array of\n     * rows, where each row is an array of cells) of the cells in the selection's rectangle. Note that the rectangle can\n     * include cells that are not currently visible.\n     *\n     * If `true` is passed instead of a callback, the data grid will internally use the `getCellContent` callback to\n     * provide a basic implementation of `getCellsForSelection`. This can make it easier to light up more data grid\n     * functionality, but may have negative side effects if your data source is not able to handle being queried for\n     * data outside the normal window.\n     *\n     * If `getCellsForSelection` returns a thunk, the data may be loaded asynchronously, however the data grid may be\n     * unable to properly react to column spans when performing range selections. Copying large amounts of data out of\n     * the grid will depend on the performance of the thunk as well.\n     * @group Data\n     * @param {Rectangle} selection The range of requested cells\n     * @param {AbortSignal} abortSignal A signal indicating the requested cells are no longer needed\n     * @returns A row-major collection of cells or an async thunk which returns a row-major collection.\n     */\n    readonly getCellsForSelection?: DataGridSearchProps[\"getCellsForSelection\"] | true;\n\n    /** The number of columns which should remain in place when scrolling horizontally. The row marker column, if\n     * enabled is always frozen and is not included in this count.\n     * @defaultValue 0\n     * @group Style\n     */\n    readonly freezeColumns?: DataGridSearchProps[\"freezeColumns\"];\n\n    /**\n     * Controls the drawing of the left hand vertical border of a column. If set to a boolean value it controls all\n     * borders.\n     * @defaultValue `true`\n     * @group Style\n     */\n    readonly verticalBorder?: DataGridSearchProps[\"verticalBorder\"] | boolean;\n\n    /**\n     * Called when data is pasted into the grid. If left undefined, the `DataEditor` will operate in a\n     * fallback mode and attempt to paste the text buffer into the current cell assuming the current cell is not\n     * readonly and can accept the data type. If `onPaste` is set to false or the function returns false, the grid will\n     * simply ignore paste. If `onPaste` evaluates to true the grid will attempt to split the data by tabs and newlines\n     * and paste into available cells.\n     *\n     * The grid will not attempt to add additional rows if more data is pasted then can fit. In that case it is\n     * advisable to simply return false from onPaste and handle the paste manually.\n     * @group Editing\n     */\n    readonly onPaste?: ((target: Item, values: readonly (readonly string[])[]) => boolean) | boolean;\n\n    /**\n     * The theme used by the data grid to get all color and font information\n     * @group Style\n     */\n    readonly theme?: Partial<Theme>;\n\n    readonly renderers?: readonly InternalCellRenderer<InnerGridCell>[];\n\n    /**\n     * An array of custom renderers which can be used to extend the data grid.\n     * @group Advanced\n     */\n    readonly customRenderers?: readonly CustomRenderer<any>[];\n\n    /**\n     * Scales most elements in the theme to match rem scaling automatically\n     * @defaultValue false\n     */\n    readonly scaleToRem?: boolean;\n\n    /**\n     * Custom predicate function to decide whether the click event occurred outside the grid\n     * Especially used when custom editor is opened with the portal and is outside the grid, but there is no possibility\n     * to add a class \"click-outside-ignore\"\n     * If this function is supplied and returns false, the click event is ignored\n     */\n    readonly isOutsideClick?: (e: MouseEvent | TouchEvent) => boolean;\n\n    /**\n     * Controls which directions fill is allowed in.\n     */\n    readonly allowedFillDirections?: FillHandleDirection;\n\n    /**\n     * Determines when a cell is considered activated and will emit the `onCellActivated` event. Generally an activated\n     * cell will open to edit mode.\n     */\n    readonly cellActivationBehavior?: \"double-click\" | \"single-click\" | \"second-click\";\n\n    /**\n     * Controls if focus will trap inside the data grid when doing tab and caret navigation.\n     */\n    readonly trapFocus?: boolean;\n}\n\ntype ScrollToFn = (\n    col: number | { amount: number; unit: \"cell\" | \"px\" },\n    row: number | { amount: number; unit: \"cell\" | \"px\" },\n    dir?: \"horizontal\" | \"vertical\" | \"both\",\n    paddingX?: number,\n    paddingY?: number,\n    options?: {\n        hAlign?: \"start\" | \"center\" | \"end\";\n        vAlign?: \"start\" | \"center\" | \"end\";\n    }\n) => void;\n\n/** @category DataEditor */\nexport interface DataEditorRef {\n    /**\n     * Programatically appends a row.\n     * @param col The column index to focus in the new row.\n     * @returns A promise which waits for the append to complete.\n     */\n    appendRow: (col: number, openOverlay?: boolean) => Promise<void>;\n    /**\n     * Triggers cells to redraw.\n     */\n    updateCells: DataGridRef[\"damage\"];\n    /**\n     * Gets the screen space bounds of the requested item.\n     */\n    getBounds: DataGridRef[\"getBounds\"];\n    /**\n     * Triggers the data grid to focus itself or the correct accessibility element.\n     */\n    focus: DataGridRef[\"focus\"];\n    /**\n     * Generic API for emitting events as if they had been triggered via user interaction.\n     */\n    emit: (eventName: EmitEvents) => Promise<void>;\n    /**\n     * Scrolls to the desired cell or location in the grid.\n     */\n    scrollTo: ScrollToFn;\n    /**\n     * Causes the columns in the selection to have their natural size recomputed and re-emitted as a resize event.\n     */\n    remeasureColumns: (cols: CompactSelection) => void;\n}\n\nconst loadingCell: GridCell = {\n    kind: GridCellKind.Loading,\n    allowOverlay: false,\n};\n\nconst emptyGridSelection: GridSelection = {\n    columns: CompactSelection.empty(),\n    rows: CompactSelection.empty(),\n    current: undefined,\n};\n\nconst DataEditorImpl: React.ForwardRefRenderFunction<DataEditorRef, DataEditorProps> = (p, forwardedRef) => {\n    const [gridSelectionInner, setGridSelectionInner] = React.useState<GridSelection>(emptyGridSelection);\n    const [overlay, setOverlay] = React.useState<{\n        target: Rectangle;\n        content: GridCell;\n        theme: FullTheme;\n        initialValue: string | undefined;\n        cell: Item;\n        highlight: boolean;\n        forceEditMode: boolean;\n    }>();\n    const searchInputRef = React.useRef<HTMLInputElement | null>(null);\n    const canvasRef = React.useRef<HTMLCanvasElement | null>(null);\n    const [mouseState, setMouseState] = React.useState<MouseState>();\n    const scrollRef = React.useRef<HTMLDivElement | null>(null);\n    const lastSent = React.useRef<[number, number]>();\n\n    const safeWindow = typeof window === \"undefined\" ? null : window;\n\n    const {\n        rowMarkers = \"none\",\n        rowMarkerWidth: rowMarkerWidthRaw,\n        imageEditorOverride,\n        getRowThemeOverride,\n        markdownDivCreateNode,\n        width,\n        height,\n        columns: columnsIn,\n        rows,\n        getCellContent,\n        onCellClicked,\n        onCellActivated,\n        onFillPattern,\n        onFinishedEditing,\n        coercePasteValue,\n        drawHeader: drawHeaderIn,\n        drawCell: drawCellIn,\n        onHeaderClicked,\n        onColumnProposeMove,\n        spanRangeBehavior = \"default\",\n        onGroupHeaderClicked,\n        onCellContextMenu,\n        className,\n        onHeaderContextMenu,\n        getCellsForSelection: getCellsForSelectionIn,\n        onGroupHeaderContextMenu,\n        onGroupHeaderRenamed,\n        onCellEdited,\n        onCellsEdited,\n        onSearchResultsChanged: onSearchResultsChangedIn,\n        searchResults,\n        onSearchValueChange,\n        searchValue,\n        onKeyDown: onKeyDownIn,\n        onKeyUp: onKeyUpIn,\n        keybindings: keybindingsIn,\n        onRowAppended,\n        onColumnMoved,\n        validateCell: validateCellIn,\n        highlightRegions: highlightRegionsIn,\n        rangeSelect = \"rect\",\n        columnSelect = \"multi\",\n        rowSelect = \"multi\",\n        rangeSelectionBlending = \"exclusive\",\n        columnSelectionBlending = \"exclusive\",\n        rowSelectionBlending = \"exclusive\",\n        onDelete: onDeleteIn,\n        onDragStart,\n        onMouseMove,\n        onPaste,\n        copyHeaders = false,\n        freezeColumns = 0,\n        cellActivationBehavior = \"second-click\",\n        rowSelectionMode = \"auto\",\n        rowMarkerStartIndex = 1,\n        rowMarkerTheme,\n        onHeaderMenuClick,\n        getGroupDetails,\n        onSearchClose: onSearchCloseIn,\n        onItemHovered,\n        onSelectionCleared,\n        showSearch: showSearchIn,\n        onVisibleRegionChanged,\n        gridSelection: gridSelectionOuter,\n        onGridSelectionChange,\n        minColumnWidth: minColumnWidthIn = 50,\n        maxColumnWidth: maxColumnWidthIn = 500,\n        maxColumnAutoWidth: maxColumnAutoWidthIn,\n        provideEditor,\n        trailingRowOptions,\n        freezeTrailingRows = 0,\n        allowedFillDirections = \"orthogonal\",\n        scrollOffsetX,\n        scrollOffsetY,\n        verticalBorder,\n        onDragOverCell,\n        onDrop,\n        onColumnResize: onColumnResizeIn,\n        onColumnResizeEnd: onColumnResizeEndIn,\n        onColumnResizeStart: onColumnResizeStartIn,\n        customRenderers: additionalRenderers,\n        fillHandle,\n        drawFocusRing,\n        experimental,\n        fixedShadowX,\n        fixedShadowY,\n        headerIcons,\n        imageWindowLoader,\n        initialSize,\n        isDraggable,\n        onDragLeave,\n        onRowMoved,\n        overscrollX: overscrollXIn,\n        overscrollY: overscrollYIn,\n        preventDiagonalScrolling,\n        rightElement,\n        rightElementProps,\n        trapFocus = false,\n        smoothScrollX,\n        smoothScrollY,\n        scaleToRem = false,\n        rowHeight: rowHeightIn = 34,\n        headerHeight: headerHeightIn = 36,\n        groupHeaderHeight: groupHeaderHeightIn = headerHeightIn,\n        theme: themeIn,\n        isOutsideClick,\n        renderers,\n    } = p;\n\n    const minColumnWidth = Math.max(minColumnWidthIn, 20);\n    const maxColumnWidth = Math.max(maxColumnWidthIn, minColumnWidth);\n    const maxColumnAutoWidth = Math.max(maxColumnAutoWidthIn ?? maxColumnWidth, minColumnWidth);\n\n    const docStyle = React.useMemo(() => {\n        if (typeof window === \"undefined\") return { fontSize: \"16px\" };\n        return window.getComputedStyle(document.documentElement);\n    }, []);\n\n    const remSize = React.useMemo(() => Number.parseFloat(docStyle.fontSize), [docStyle]);\n\n    const { rowHeight, headerHeight, groupHeaderHeight, theme, overscrollX, overscrollY } = useRemAdjuster({\n        groupHeaderHeight: groupHeaderHeightIn,\n        headerHeight: headerHeightIn,\n        overscrollX: overscrollXIn,\n        overscrollY: overscrollYIn,\n        remSize,\n        rowHeight: rowHeightIn,\n        scaleToRem,\n        theme: themeIn,\n    });\n\n    const keybindings = useKeybindingsWithDefaults(keybindingsIn);\n\n    const rowMarkerWidth = rowMarkerWidthRaw ?? (rows > 10_000 ? 48 : rows > 1000 ? 44 : rows > 100 ? 36 : 32);\n    const hasRowMarkers = rowMarkers !== \"none\";\n    const rowMarkerOffset = hasRowMarkers ? 1 : 0;\n    const showTrailingBlankRow = onRowAppended !== undefined;\n    const lastRowSticky = trailingRowOptions?.sticky === true;\n\n    const [showSearchInner, setShowSearchInner] = React.useState(false);\n    const showSearch = showSearchIn ?? showSearchInner;\n\n    const onSearchClose = React.useCallback(() => {\n        if (onSearchCloseIn !== undefined) {\n            onSearchCloseIn();\n        } else {\n            setShowSearchInner(false);\n        }\n    }, [onSearchCloseIn]);\n\n    const gridSelectionOuterMangled: GridSelection | undefined = React.useMemo((): GridSelection | undefined => {\n        return gridSelectionOuter === undefined ? undefined : shiftSelection(gridSelectionOuter, rowMarkerOffset);\n    }, [gridSelectionOuter, rowMarkerOffset]);\n    const gridSelection = gridSelectionOuterMangled ?? gridSelectionInner;\n\n    const abortControllerRef = React.useRef() as React.MutableRefObject<AbortController>;\n    if (abortControllerRef.current === undefined) abortControllerRef.current = new AbortController();\n\n    React.useEffect(() => () => abortControllerRef?.current.abort(), []);\n\n    const [getCellsForSelection, getCellsForSeletionDirect] = useCellsForSelection(\n        getCellsForSelectionIn,\n        getCellContent,\n        rowMarkerOffset,\n        abortControllerRef.current,\n        rows\n    );\n\n    const validateCell = React.useCallback<NonNullable<typeof validateCellIn>>(\n        (cell, newValue, prevValue) => {\n            if (validateCellIn === undefined) return true;\n            const item: Item = [cell[0] - rowMarkerOffset, cell[1]];\n            return validateCellIn?.(item, newValue, prevValue);\n        },\n        [rowMarkerOffset, validateCellIn]\n    );\n\n    const expectedExternalGridSelection = React.useRef<GridSelection | undefined>(gridSelectionOuter);\n    const setGridSelection = React.useCallback(\n        (newVal: GridSelection, expand: boolean): void => {\n            if (expand) {\n                newVal = expandSelection(\n                    newVal,\n                    getCellsForSelection,\n                    rowMarkerOffset,\n                    spanRangeBehavior,\n                    abortControllerRef.current\n                );\n            }\n            if (onGridSelectionChange !== undefined) {\n                expectedExternalGridSelection.current = shiftSelection(newVal, -rowMarkerOffset);\n                onGridSelectionChange(expectedExternalGridSelection.current);\n            } else {\n                setGridSelectionInner(newVal);\n            }\n        },\n        [onGridSelectionChange, getCellsForSelection, rowMarkerOffset, spanRangeBehavior]\n    );\n\n    const onColumnResize = whenDefined(\n        onColumnResizeIn,\n        React.useCallback<NonNullable<typeof onColumnResizeIn>>(\n            (_, w, ind, wg) => {\n                onColumnResizeIn?.(columnsIn[ind - rowMarkerOffset], w, ind - rowMarkerOffset, wg);\n            },\n            [onColumnResizeIn, rowMarkerOffset, columnsIn]\n        )\n    );\n\n    const onColumnResizeEnd = whenDefined(\n        onColumnResizeEndIn,\n        React.useCallback<NonNullable<typeof onColumnResizeEndIn>>(\n            (_, w, ind, wg) => {\n                onColumnResizeEndIn?.(columnsIn[ind - rowMarkerOffset], w, ind - rowMarkerOffset, wg);\n            },\n            [onColumnResizeEndIn, rowMarkerOffset, columnsIn]\n        )\n    );\n\n    const onColumnResizeStart = whenDefined(\n        onColumnResizeStartIn,\n        React.useCallback<NonNullable<typeof onColumnResizeStartIn>>(\n            (_, w, ind, wg) => {\n                onColumnResizeStartIn?.(columnsIn[ind - rowMarkerOffset], w, ind - rowMarkerOffset, wg);\n            },\n            [onColumnResizeStartIn, rowMarkerOffset, columnsIn]\n        )\n    );\n\n    const drawHeader = whenDefined(\n        drawHeaderIn,\n        React.useCallback<NonNullable<typeof drawHeaderIn>>(\n            (args, draw) => {\n                return drawHeaderIn?.({ ...args, columnIndex: args.columnIndex - rowMarkerOffset }, draw) ?? false;\n            },\n            [drawHeaderIn, rowMarkerOffset]\n        )\n    );\n\n    const drawCell = whenDefined(\n        drawCellIn,\n        React.useCallback<NonNullable<typeof drawCellIn>>(\n            (args, draw) => {\n                return drawCellIn?.({ ...args, col: args.col - rowMarkerOffset }, draw) ?? false;\n            },\n            [drawCellIn, rowMarkerOffset]\n        )\n    );\n\n    const onDelete = React.useCallback<NonNullable<DataEditorProps[\"onDelete\"]>>(\n        sel => {\n            if (onDeleteIn !== undefined) {\n                const result = onDeleteIn(shiftSelection(sel, -rowMarkerOffset));\n                if (typeof result === \"boolean\") {\n                    return result;\n                }\n                return shiftSelection(result, rowMarkerOffset);\n            }\n            return true;\n        },\n        [onDeleteIn, rowMarkerOffset]\n    );\n\n    const [setCurrent, setSelectedRows, setSelectedColumns] = useSelectionBehavior(\n        gridSelection,\n        setGridSelection,\n        rangeSelectionBlending,\n        columnSelectionBlending,\n        rowSelectionBlending,\n        rangeSelect\n    );\n\n    const mergedTheme = React.useMemo(() => {\n        return mergeAndRealizeTheme(getDataEditorTheme(), theme);\n    }, [theme]);\n\n    const [clientSize, setClientSize] = React.useState<readonly [number, number, number]>([0, 0, 0]);\n\n    const rendererMap = React.useMemo(() => {\n        if (renderers === undefined) return {};\n        const result: Partial<Record<InnerGridCellKind | GridCellKind, InternalCellRenderer<InnerGridCell>>> = {};\n        for (const r of renderers) {\n            result[r.kind] = r;\n        }\n        return result;\n    }, [renderers]);\n\n    const getCellRenderer: <T extends InnerGridCell>(cell: T) => CellRenderer<T> | undefined = React.useCallback(\n        <T extends InnerGridCell>(cell: T) => {\n            if (cell.kind !== GridCellKind.Custom) {\n                return rendererMap[cell.kind] as unknown as CellRenderer<T>;\n            }\n            return additionalRenderers?.find(x => x.isMatch(cell)) as CellRenderer<T>;\n        },\n        [additionalRenderers, rendererMap]\n    );\n\n    // eslint-disable-next-line prefer-const\n    let { sizedColumns: columns, nonGrowWidth } = useColumnSizer(\n        columnsIn,\n        rows,\n        getCellsForSeletionDirect,\n        clientSize[0] - (rowMarkerOffset === 0 ? 0 : rowMarkerWidth) - clientSize[2],\n        minColumnWidth,\n        maxColumnAutoWidth,\n        mergedTheme,\n        getCellRenderer,\n        abortControllerRef.current\n    );\n    if (rowMarkers !== \"none\") nonGrowWidth += rowMarkerWidth;\n\n    const enableGroups = React.useMemo(() => {\n        return columns.some(c => c.group !== undefined);\n    }, [columns]);\n\n    const totalHeaderHeight = enableGroups ? headerHeight + groupHeaderHeight : headerHeight;\n\n    const numSelectedRows = gridSelection.rows.length;\n    const rowMarkerHeader =\n        rowMarkers === \"none\"\n            ? \"\"\n            : numSelectedRows === 0\n            ? headerCellUnheckedMarker\n            : numSelectedRows === rows\n            ? headerCellCheckedMarker\n            : headerCellIndeterminateMarker;\n\n    const mangledCols = React.useMemo(() => {\n        if (rowMarkers === \"none\") return columns;\n        return [\n            {\n                title: rowMarkerHeader,\n                width: rowMarkerWidth,\n                icon: undefined,\n                hasMenu: false,\n                style: \"normal\" as const,\n                themeOverride: rowMarkerTheme,\n            },\n            ...columns,\n        ];\n    }, [columns, rowMarkerWidth, rowMarkers, rowMarkerHeader, rowMarkerTheme]);\n\n    const [visibleRegionY, visibleRegionTy] = React.useMemo(() => {\n        return [\n            scrollOffsetY !== undefined && typeof rowHeight === \"number\" ? Math.floor(scrollOffsetY / rowHeight) : 0,\n            scrollOffsetY !== undefined && typeof rowHeight === \"number\" ? -(scrollOffsetY % rowHeight) : 0,\n        ];\n    }, [scrollOffsetY, rowHeight]);\n\n    type VisibleRegion = Rectangle & {\n        /** value in px */\n        tx?: number;\n        /** value in px */\n        ty?: number;\n        extras?: {\n            selected?: Item;\n            /**\n             * @deprecated\n             */\n            freezeRegion?: Rectangle;\n\n            /**\n             * All visible freeze regions\n             */\n            freezeRegions?: readonly Rectangle[];\n        };\n    };\n\n    const visibleRegionRef = React.useRef<VisibleRegion>({\n        height: 1,\n        width: 1,\n        x: 0,\n        y: 0,\n    });\n    const visibleRegionInput = React.useMemo<VisibleRegion>(\n        () => ({\n            x: visibleRegionRef.current.x,\n            y: visibleRegionY,\n            width: visibleRegionRef.current.width ?? 1,\n            height: visibleRegionRef.current.height ?? 1,\n            // tx: 'TODO',\n            ty: visibleRegionTy,\n        }),\n        [visibleRegionTy, visibleRegionY]\n    );\n\n    const hasJustScrolled = React.useRef(false);\n\n    const [visibleRegion, setVisibleRegion, empty] = useStateWithReactiveInput<VisibleRegion>(visibleRegionInput);\n    visibleRegionRef.current = visibleRegion;\n\n    const vScrollReady = (visibleRegion.height ?? 1) > 1;\n    React.useLayoutEffect(() => {\n        if (scrollOffsetY !== undefined && scrollRef.current !== null && vScrollReady) {\n            if (scrollRef.current.scrollTop === scrollOffsetY) return;\n            scrollRef.current.scrollTop = scrollOffsetY;\n            if (scrollRef.current.scrollTop !== scrollOffsetY) {\n                empty();\n            }\n            hasJustScrolled.current = true;\n        }\n    }, [scrollOffsetY, vScrollReady, empty]);\n\n    const hScrollReady = (visibleRegion.width ?? 1) > 1;\n    React.useLayoutEffect(() => {\n        if (scrollOffsetX !== undefined && scrollRef.current !== null && hScrollReady) {\n            if (scrollRef.current.scrollLeft === scrollOffsetX) return;\n            scrollRef.current.scrollLeft = scrollOffsetX;\n            if (scrollRef.current.scrollLeft !== scrollOffsetX) {\n                empty();\n            }\n            hasJustScrolled.current = true;\n        }\n    }, [scrollOffsetX, hScrollReady, empty]);\n\n    const cellXOffset = visibleRegion.x + rowMarkerOffset;\n    const cellYOffset = visibleRegion.y;\n\n    const gridRef = React.useRef<DataGridRef | null>(null);\n\n    const focus = React.useCallback((immediate?: boolean) => {\n        if (immediate === true) {\n            gridRef.current?.focus();\n        } else {\n            window.requestAnimationFrame(() => {\n                gridRef.current?.focus();\n            });\n        }\n    }, []);\n\n    const mangledRows = showTrailingBlankRow ? rows + 1 : rows;\n\n    const mangledOnCellsEdited = React.useCallback<NonNullable<typeof onCellsEdited>>(\n        (items: readonly EditListItem[]) => {\n            const mangledItems =\n                rowMarkerOffset === 0\n                    ? items\n                    : items.map(x => ({\n                          ...x,\n                          location: [x.location[0] - rowMarkerOffset, x.location[1]] as const,\n                      }));\n            const r = onCellsEdited?.(mangledItems);\n\n            if (r !== true) {\n                for (const i of mangledItems) onCellEdited?.(i.location, i.value);\n            }\n\n            return r;\n        },\n        [onCellEdited, onCellsEdited, rowMarkerOffset]\n    );\n\n    const [fillHighlightRegion, setFillHighlightRegion] = React.useState<Rectangle | undefined>();\n\n    // this will generally be undefined triggering the memo less often\n    const highlightRange =\n        gridSelection.current !== undefined &&\n        gridSelection.current.range.width * gridSelection.current.range.height > 1\n            ? gridSelection.current.range\n            : undefined;\n\n    const highlightRegions = React.useMemo(() => {\n        if (\n            (highlightRegionsIn === undefined || highlightRegionsIn.length === 0) &&\n            highlightRange === undefined &&\n            fillHighlightRegion === undefined\n        )\n            return undefined;\n\n        const regions: Highlight[] = [];\n\n        if (highlightRegionsIn !== undefined) {\n            for (const r of highlightRegionsIn) {\n                const maxWidth = mangledCols.length - r.range.x - rowMarkerOffset;\n                if (maxWidth > 0) {\n                    regions.push({\n                        color: r.color,\n                        range: {\n                            ...r.range,\n                            x: r.range.x + rowMarkerOffset,\n                            width: Math.min(maxWidth, r.range.width),\n                        },\n                        style: r.style,\n                    });\n                }\n            }\n        }\n\n        if (fillHighlightRegion !== undefined) {\n            regions.push({\n                color: withAlpha(mergedTheme.accentColor, 0),\n                range: fillHighlightRegion,\n                style: \"dashed\",\n            });\n        }\n\n        if (highlightRange !== undefined) {\n            regions.push({\n                color: withAlpha(mergedTheme.accentColor, 0.5),\n                range: highlightRange,\n                style: \"solid-outline\",\n            });\n        }\n\n        return regions.length > 0 ? regions : undefined;\n    }, [\n        fillHighlightRegion,\n        highlightRange,\n        highlightRegionsIn,\n        mangledCols.length,\n        mergedTheme.accentColor,\n        rowMarkerOffset,\n    ]);\n\n    const mangledColsRef = React.useRef(mangledCols);\n    mangledColsRef.current = mangledCols;\n    const getMangledCellContent = React.useCallback(\n        ([col, row]: Item, forceStrict: boolean = false): InnerGridCell => {\n            const isTrailing = showTrailingBlankRow && row === mangledRows - 1;\n            const isRowMarkerCol = col === 0 && hasRowMarkers;\n            if (isRowMarkerCol) {\n                if (isTrailing) {\n                    return loadingCell;\n                }\n                return {\n                    kind: InnerGridCellKind.Marker,\n                    allowOverlay: false,\n                    checked: gridSelection?.rows.hasIndex(row) === true,\n                    markerKind: rowMarkers === \"clickable-number\" ? \"number\" : rowMarkers,\n                    row: rowMarkerStartIndex + row,\n                    drawHandle: onRowMoved !== undefined,\n                    cursor: rowMarkers === \"clickable-number\" ? \"pointer\" : undefined,\n                };\n            } else if (isTrailing) {\n                //If the grid is empty, we will return text\n                const isFirst = col === rowMarkerOffset;\n\n                const maybeFirstColumnHint = isFirst ? trailingRowOptions?.hint ?? \"\" : \"\";\n                const c = mangledColsRef.current[col];\n\n                if (c?.trailingRowOptions?.disabled === true) {\n                    return loadingCell;\n                } else {\n                    const hint = c?.trailingRowOptions?.hint ?? maybeFirstColumnHint;\n                    const icon = c?.trailingRowOptions?.addIcon ?? trailingRowOptions?.addIcon;\n                    return {\n                        kind: InnerGridCellKind.NewRow,\n                        hint,\n                        allowOverlay: false,\n                        icon,\n                    };\n                }\n            } else {\n                const outerCol = col - rowMarkerOffset;\n                if (forceStrict || experimental?.strict === true) {\n                    const vr = visibleRegionRef.current;\n                    const isOutsideMainArea =\n                        vr.x > outerCol ||\n                        outerCol > vr.x + vr.width ||\n                        vr.y > row ||\n                        row > vr.y + vr.height ||\n                        row >= rowsRef.current;\n                    const isSelected = outerCol === vr.extras?.selected?.[0] && row === vr.extras?.selected[1];\n                    let isInFreezeArea = false;\n                    if (vr.extras?.freezeRegions !== undefined) {\n                        for (const fr of vr.extras.freezeRegions) {\n                            if (pointInRect(fr, outerCol, row)) {\n                                isInFreezeArea = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    if (isOutsideMainArea && !isSelected && !isInFreezeArea) {\n                        return loadingCell;\n                    }\n                }\n                let result = getCellContent([outerCol, row]);\n                if (rowMarkerOffset !== 0 && result.span !== undefined) {\n                    result = {\n                        ...result, // FIXME: Mutate\n                        span: [result.span[0] + rowMarkerOffset, result.span[1] + rowMarkerOffset],\n                    };\n                }\n                return result;\n            }\n        },\n        [\n            showTrailingBlankRow,\n            mangledRows,\n            hasRowMarkers,\n            gridSelection?.rows,\n            onRowMoved,\n            rowMarkers,\n            rowMarkerOffset,\n            trailingRowOptions?.hint,\n            trailingRowOptions?.addIcon,\n            experimental?.strict,\n            getCellContent,\n            rowMarkerStartIndex,\n        ]\n    );\n\n    const mangledGetGroupDetails = React.useCallback<NonNullable<DataEditorProps[\"getGroupDetails\"]>>(\n        group => {\n            let result = getGroupDetails?.(group) ?? { name: group };\n            if (onGroupHeaderRenamed !== undefined && group !== \"\") {\n                result = {\n                    // FIXME: Mutate\n                    icon: result.icon,\n                    name: result.name,\n                    overrideTheme: result.overrideTheme,\n                    actions: [\n                        ...(result.actions ?? []),\n                        {\n                            title: \"Rename\",\n                            icon: \"renameIcon\",\n                            onClick: e =>\n                                setRenameGroup({\n                                    group: result.name,\n                                    bounds: e.bounds,\n                                }),\n                        },\n                    ],\n                };\n            }\n            return result;\n        },\n        [getGroupDetails, onGroupHeaderRenamed]\n    );\n\n    const setOverlaySimple = React.useCallback(\n        (val: Omit<NonNullable<typeof overlay>, \"theme\">) => {\n            const [col, row] = val.cell;\n            const column = mangledCols[col];\n            const groupTheme =\n                column?.group !== undefined ? mangledGetGroupDetails(column.group)?.overrideTheme : undefined;\n            const colTheme = column?.themeOverride;\n            const rowTheme = getRowThemeOverride?.(row);\n\n            setOverlay({\n                ...val,\n                theme: mergeAndRealizeTheme(mergedTheme, groupTheme, colTheme, rowTheme, val.content.themeOverride),\n            });\n        },\n        [getRowThemeOverride, mangledCols, mangledGetGroupDetails, mergedTheme]\n    );\n\n    const reselect = React.useCallback(\n        (bounds: Rectangle, fromKeyboard: boolean, initialValue?: string) => {\n            if (gridSelection.current === undefined) return;\n\n            const [col, row] = gridSelection.current.cell;\n            const c = getMangledCellContent([col, row]);\n            if (c.kind !== GridCellKind.Boolean && c.allowOverlay) {\n                let content = c;\n                if (initialValue !== undefined) {\n                    switch (content.kind) {\n                        case GridCellKind.Number: {\n                            const d = maybe(() => (initialValue === \"-\" ? -0 : Number.parseFloat(initialValue)), 0);\n                            content = {\n                                ...content,\n                                data: Number.isNaN(d) ? 0 : d,\n                            };\n                            break;\n                        }\n                        case GridCellKind.Text:\n                        case GridCellKind.Markdown:\n                        case GridCellKind.Uri:\n                            content = {\n                                ...content,\n                                data: initialValue,\n                            };\n                            break;\n                    }\n                }\n\n                setOverlaySimple({\n                    target: bounds,\n                    content,\n                    initialValue,\n                    cell: [col, row],\n                    highlight: initialValue === undefined,\n                    forceEditMode: initialValue !== undefined,\n                });\n            } else if (c.kind === GridCellKind.Boolean && fromKeyboard && c.readonly !== true) {\n                mangledOnCellsEdited([\n                    {\n                        location: gridSelection.current.cell,\n                        value: {\n                            ...c,\n                            data: toggleBoolean(c.data),\n                        },\n                    },\n                ]);\n                gridRef.current?.damage([{ cell: gridSelection.current.cell }]);\n            }\n        },\n        [getMangledCellContent, gridSelection, mangledOnCellsEdited, setOverlaySimple]\n    );\n\n    const focusOnRowFromTrailingBlankRow = React.useCallback(\n        (col: number, row: number) => {\n            const bounds = gridRef.current?.getBounds(col, row);\n            if (bounds === undefined || scrollRef.current === null) {\n                return;\n            }\n\n            const content = getMangledCellContent([col, row]);\n            if (!content.allowOverlay) {\n                return;\n            }\n\n            setOverlaySimple({\n                target: bounds,\n                content,\n                initialValue: undefined,\n                highlight: true,\n                cell: [col, row],\n                forceEditMode: true,\n            });\n        },\n        [getMangledCellContent, setOverlaySimple]\n    );\n\n    const scrollTo = React.useCallback<ScrollToFn>(\n        (col, row, dir = \"both\", paddingX = 0, paddingY = 0, options = undefined): void => {\n            if (scrollRef.current !== null) {\n                const grid = gridRef.current;\n                const canvas = canvasRef.current;\n\n                const trueCol = typeof col !== \"number\" ? (col.unit === \"cell\" ? col.amount : undefined) : col;\n                const trueRow = typeof row !== \"number\" ? (row.unit === \"cell\" ? row.amount : undefined) : row;\n                const desiredX = typeof col !== \"number\" && col.unit === \"px\" ? col.amount : undefined;\n                const desiredY = typeof row !== \"number\" && row.unit === \"px\" ? row.amount : undefined;\n                if (grid !== null && canvas !== null) {\n                    let targetRect: Rectangle = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n\n                    let scrollX = 0;\n                    let scrollY = 0;\n\n                    if (trueCol !== undefined || trueRow !== undefined) {\n                        targetRect = grid.getBounds((trueCol ?? 0) + rowMarkerOffset, trueRow ?? 0) ?? targetRect;\n                        if (targetRect.width === 0 || targetRect.height === 0) return;\n                    }\n\n                    const scrollBounds = canvas.getBoundingClientRect();\n                    const scale = scrollBounds.width / canvas.offsetWidth;\n\n                    if (desiredX !== undefined) {\n                        targetRect = {\n                            ...targetRect,\n                            x: desiredX - scrollBounds.left - scrollRef.current.scrollLeft,\n                            width: 1,\n                        };\n                    }\n                    if (desiredY !== undefined) {\n                        targetRect = {\n                            ...targetRect,\n                            y: desiredY + scrollBounds.top - scrollRef.current.scrollTop,\n                            height: 1,\n                        };\n                    }\n\n                    if (targetRect !== undefined) {\n                        const bounds = {\n                            x: targetRect.x - paddingX,\n                            y: targetRect.y - paddingY,\n                            width: targetRect.width + 2 * paddingX,\n                            height: targetRect.height + 2 * paddingY,\n                        };\n\n                        let frozenWidth = 0;\n                        for (let i = 0; i < freezeColumns; i++) {\n                            frozenWidth += columns[i].width;\n                        }\n                        let trailingRowHeight = 0;\n                        const freezeTrailingRowsEffective = freezeTrailingRows + (lastRowSticky ? 1 : 0);\n                        if (freezeTrailingRowsEffective > 0) {\n                            trailingRowHeight = getFreezeTrailingHeight(\n                                mangledRows,\n                                freezeTrailingRowsEffective,\n                                rowHeight\n                            );\n                        }\n\n                        // scrollBounds is already scaled\n                        let sLeft = frozenWidth * scale + scrollBounds.left + rowMarkerOffset * rowMarkerWidth * scale;\n                        let sRight = scrollBounds.right;\n                        let sTop = scrollBounds.top + totalHeaderHeight * scale;\n                        let sBottom = scrollBounds.bottom - trailingRowHeight * scale;\n\n                        const minx = targetRect.width + paddingX * 2;\n                        switch (options?.hAlign) {\n                            case \"start\":\n                                sRight = sLeft + minx;\n                                break;\n                            case \"end\":\n                                sLeft = sRight - minx;\n                                break;\n                            case \"center\":\n                                sLeft = Math.floor((sLeft + sRight) / 2) - minx / 2;\n                                sRight = sLeft + minx;\n                                break;\n                        }\n\n                        const miny = targetRect.height + paddingY * 2;\n                        switch (options?.vAlign) {\n                            case \"start\":\n                                sBottom = sTop + miny;\n                                break;\n                            case \"end\":\n                                sTop = sBottom - miny;\n                                break;\n                            case \"center\":\n                                sTop = Math.floor((sTop + sBottom) / 2) - miny / 2;\n                                sBottom = sTop + miny;\n                                break;\n                        }\n\n                        if (sLeft > bounds.x) {\n                            scrollX = bounds.x - sLeft;\n                        } else if (sRight < bounds.x + bounds.width) {\n                            scrollX = bounds.x + bounds.width - sRight;\n                        }\n\n                        if (sTop > bounds.y) {\n                            scrollY = bounds.y - sTop;\n                        } else if (sBottom < bounds.y + bounds.height) {\n                            scrollY = bounds.y + bounds.height - sBottom;\n                        }\n\n                        if (dir === \"vertical\" || (typeof col === \"number\" && col < freezeColumns)) {\n                            scrollX = 0;\n                        } else if (\n                            dir === \"horizontal\" ||\n                            (typeof row === \"number\" && row >= mangledRows - freezeTrailingRowsEffective)\n                        ) {\n                            scrollY = 0;\n                        }\n\n                        if (scrollX !== 0 || scrollY !== 0) {\n                            // Remove scaling as scrollTo method is unaffected by transform scale.\n                            if (scale !== 1) {\n                                scrollX /= scale;\n                                scrollY /= scale;\n                            }\n                            scrollRef.current.scrollTo(\n                                scrollX + scrollRef.current.scrollLeft,\n                                scrollY + scrollRef.current.scrollTop\n                            );\n                        }\n                    }\n                }\n            }\n        },\n        [\n            rowMarkerOffset,\n            freezeTrailingRows,\n            rowMarkerWidth,\n            totalHeaderHeight,\n            freezeColumns,\n            columns,\n            mangledRows,\n            lastRowSticky,\n            rowHeight,\n        ]\n    );\n\n    const focusCallback = React.useRef(focusOnRowFromTrailingBlankRow);\n    const getCellContentRef = React.useRef(getCellContent);\n    const rowsRef = React.useRef(rows);\n    focusCallback.current = focusOnRowFromTrailingBlankRow;\n    getCellContentRef.current = getCellContent;\n    rowsRef.current = rows;\n    const appendRow = React.useCallback(\n        async (col: number, openOverlay: boolean = true): Promise<void> => {\n            const c = mangledCols[col];\n            if (c?.trailingRowOptions?.disabled === true) {\n                return;\n            }\n            const appendResult = onRowAppended?.();\n\n            let r: \"top\" | \"bottom\" | number | undefined = undefined;\n            let bottom = true;\n            if (appendResult !== undefined) {\n                r = await appendResult;\n                if (r === \"top\") bottom = false;\n                if (typeof r === \"number\") bottom = false;\n            }\n\n            let backoff = 0;\n            const doFocus = () => {\n                if (rowsRef.current <= rows) {\n                    if (backoff < 500) {\n                        window.setTimeout(doFocus, backoff);\n                    }\n                    backoff = 50 + backoff * 2;\n                    return;\n                }\n\n                const row = typeof r === \"number\" ? r : bottom ? rows : 0;\n                scrollToRef.current(col - rowMarkerOffset, row);\n                setCurrent(\n                    {\n                        cell: [col, row],\n                        range: {\n                            x: col,\n                            y: row,\n                            width: 1,\n                            height: 1,\n                        },\n                    },\n                    false,\n                    false,\n                    \"edit\"\n                );\n\n                const cell = getCellContentRef.current([col - rowMarkerOffset, row]);\n                if (cell.allowOverlay && isReadWriteCell(cell) && cell.readonly !== true && openOverlay) {\n                    // wait for scroll to have a chance to process\n                    window.setTimeout(() => {\n                        focusCallback.current(col, row);\n                    }, 0);\n                }\n            };\n            // Queue up to allow the consumer to react to the event and let us check if they did\n            doFocus();\n        },\n        [mangledCols, onRowAppended, rowMarkerOffset, rows, setCurrent]\n    );\n\n    const getCustomNewRowTargetColumn = React.useCallback(\n        (col: number): number | undefined => {\n            const customTargetColumn =\n                columns[col]?.trailingRowOptions?.targetColumn ?? trailingRowOptions?.targetColumn;\n\n            if (typeof customTargetColumn === \"number\") {\n                const customTargetOffset = hasRowMarkers ? 1 : 0;\n                return customTargetColumn + customTargetOffset;\n            }\n\n            if (typeof customTargetColumn === \"object\") {\n                const maybeIndex = columnsIn.indexOf(customTargetColumn);\n                if (maybeIndex >= 0) {\n                    const customTargetOffset = hasRowMarkers ? 1 : 0;\n                    return maybeIndex + customTargetOffset;\n                }\n            }\n\n            return undefined;\n        },\n        [columns, columnsIn, hasRowMarkers, trailingRowOptions?.targetColumn]\n    );\n\n    const lastSelectedRowRef = React.useRef<number>();\n    const lastSelectedColRef = React.useRef<number>();\n\n    const themeForCell = React.useCallback(\n        (cell: InnerGridCell, pos: Item): FullTheme => {\n            const [col, row] = pos;\n            return mergeAndRealizeTheme(\n                mergedTheme,\n                mangledCols[col]?.themeOverride,\n                getRowThemeOverride?.(row),\n                cell.themeOverride\n            );\n        },\n        [getRowThemeOverride, mangledCols, mergedTheme]\n    );\n\n    const handleSelect = React.useCallback(\n        (args: GridMouseEventArgs) => {\n            const isMultiKey = browserIsOSX.value ? args.metaKey : args.ctrlKey;\n            const isMultiRow = isMultiKey && rowSelect === \"multi\";\n            const isMultiCol = isMultiKey && columnSelect === \"multi\";\n            const [col, row] = args.location;\n            const selectedColumns = gridSelection.columns;\n            const selectedRows = gridSelection.rows;\n            const [cellCol, cellRow] = gridSelection.current?.cell ?? [];\n            // eslint-disable-next-line unicorn/prefer-switch\n            if (args.kind === \"cell\") {\n                lastSelectedColRef.current = undefined;\n\n                lastMouseSelectLocation.current = [col, row];\n\n                if (col === 0 && hasRowMarkers) {\n                    if (\n                        (showTrailingBlankRow === true && row === rows) ||\n                        rowMarkers === \"number\" ||\n                        rowSelect === \"none\"\n                    )\n                        return;\n\n                    const markerCell = getMangledCellContent(args.location);\n                    if (markerCell.kind !== InnerGridCellKind.Marker) {\n                        return;\n                    }\n\n                    if (onRowMoved !== undefined) {\n                        const renderer = getCellRenderer(markerCell);\n                        assert(renderer?.kind === InnerGridCellKind.Marker);\n                        const postClick = renderer?.onClick?.({\n                            ...args,\n                            cell: markerCell,\n                            posX: args.localEventX,\n                            posY: args.localEventY,\n                            bounds: args.bounds,\n                            theme: themeForCell(markerCell, args.location),\n                            preventDefault: () => undefined,\n                        }) as MarkerCell | undefined;\n                        if (postClick === undefined || postClick.checked === markerCell.checked) return;\n                    }\n\n                    setOverlay(undefined);\n                    focus();\n                    const isSelected = selectedRows.hasIndex(row);\n\n                    const lastHighlighted = lastSelectedRowRef.current;\n                    if (\n                        rowSelect === \"multi\" &&\n                        (args.shiftKey || args.isLongTouch === true) &&\n                        lastHighlighted !== undefined &&\n                        selectedRows.hasIndex(lastHighlighted)\n                    ) {\n                        const newSlice: Slice = [Math.min(lastHighlighted, row), Math.max(lastHighlighted, row) + 1];\n\n                        if (isMultiRow || rowSelectionMode === \"multi\") {\n                            setSelectedRows(undefined, newSlice, true);\n                        } else {\n                            setSelectedRows(CompactSelection.fromSingleSelection(newSlice), undefined, isMultiRow);\n                        }\n                    } else if (isMultiRow || args.isTouch || rowSelectionMode === \"multi\") {\n                        if (isSelected) {\n                            setSelectedRows(selectedRows.remove(row), undefined, true);\n                        } else {\n                            setSelectedRows(undefined, row, true);\n                            lastSelectedRowRef.current = row;\n                        }\n                    } else if (isSelected && selectedRows.length === 1) {\n                        setSelectedRows(CompactSelection.empty(), undefined, isMultiKey);\n                    } else {\n                        setSelectedRows(CompactSelection.fromSingleSelection(row), undefined, isMultiKey);\n                        lastSelectedRowRef.current = row;\n                    }\n                } else if (col >= rowMarkerOffset && showTrailingBlankRow && row === rows) {\n                    const customTargetColumn = getCustomNewRowTargetColumn(col);\n                    void appendRow(customTargetColumn ?? col);\n                } else {\n                    if (cellCol !== col || cellRow !== row) {\n                        const cell = getMangledCellContent(args.location);\n                        const renderer = getCellRenderer(cell);\n\n                        if (renderer?.onSelect !== undefined) {\n                            let prevented = false;\n                            renderer.onSelect({\n                                ...args,\n                                cell,\n                                posX: args.localEventX,\n                                posY: args.localEventY,\n                                bounds: args.bounds,\n                                preventDefault: () => (prevented = true),\n                                theme: themeForCell(cell, args.location),\n                            });\n                            if (prevented) {\n                                return;\n                            }\n                        }\n                        const isLastStickyRow = lastRowSticky && row === rows;\n\n                        const startedFromLastSticky =\n                            lastRowSticky && gridSelection !== undefined && gridSelection.current?.cell[1] === rows;\n\n                        if (\n                            (args.shiftKey || args.isLongTouch === true) &&\n                            cellCol !== undefined &&\n                            cellRow !== undefined &&\n                            gridSelection.current !== undefined &&\n                            !startedFromLastSticky\n                        ) {\n                            if (isLastStickyRow) {\n                                // If we're making a selection and shift click in to the last sticky row,\n                                // just drop the event. Don't kill the selection.\n                                return;\n                            }\n\n                            const left = Math.min(col, cellCol);\n                            const right = Math.max(col, cellCol);\n                            const top = Math.min(row, cellRow);\n                            const bottom = Math.max(row, cellRow);\n                            setCurrent(\n                                {\n                                    ...gridSelection.current,\n                                    range: {\n                                        x: left,\n                                        y: top,\n                                        width: right - left + 1,\n                                        height: bottom - top + 1,\n                                    },\n                                },\n                                true,\n                                isMultiKey,\n                                \"click\"\n                            );\n                            lastSelectedRowRef.current = undefined;\n                            focus();\n                        } else {\n                            setCurrent(\n                                {\n                                    cell: [col, row],\n                                    range: { x: col, y: row, width: 1, height: 1 },\n                                },\n                                true,\n                                isMultiKey,\n                                \"click\"\n                            );\n                            lastSelectedRowRef.current = undefined;\n                            setOverlay(undefined);\n                            focus();\n                        }\n                    }\n                }\n            } else if (args.kind === \"header\") {\n                lastMouseSelectLocation.current = [col, row];\n                setOverlay(undefined);\n                if (hasRowMarkers && col === 0) {\n                    lastSelectedRowRef.current = undefined;\n                    lastSelectedColRef.current = undefined;\n                    if (rowSelect === \"multi\") {\n                        if (selectedRows.length !== rows) {\n                            setSelectedRows(CompactSelection.fromSingleSelection([0, rows]), undefined, isMultiKey);\n                        } else {\n                            setSelectedRows(CompactSelection.empty(), undefined, isMultiKey);\n                        }\n                        focus();\n                    }\n                } else {\n                    const lastCol = lastSelectedColRef.current;\n                    if (\n                        columnSelect === \"multi\" &&\n                        (args.shiftKey || args.isLongTouch === true) &&\n                        lastCol !== undefined &&\n                        selectedColumns.hasIndex(lastCol)\n                    ) {\n                        const newSlice: Slice = [Math.min(lastCol, col), Math.max(lastCol, col) + 1];\n\n                        if (isMultiCol) {\n                            setSelectedColumns(undefined, newSlice, isMultiKey);\n                        } else {\n                            setSelectedColumns(CompactSelection.fromSingleSelection(newSlice), undefined, isMultiKey);\n                        }\n                    } else if (isMultiCol) {\n                        if (selectedColumns.hasIndex(col)) {\n                            setSelectedColumns(selectedColumns.remove(col), undefined, isMultiKey);\n                        } else {\n                            setSelectedColumns(undefined, col, isMultiKey);\n                        }\n                        lastSelectedColRef.current = col;\n                    } else if (columnSelect !== \"none\") {\n                        setSelectedColumns(CompactSelection.fromSingleSelection(col), undefined, isMultiKey);\n                        lastSelectedColRef.current = col;\n                    }\n                    lastSelectedRowRef.current = undefined;\n                    focus();\n                }\n            } else if (args.kind === groupHeaderKind) {\n                lastMouseSelectLocation.current = [col, row];\n            } else if (args.kind === outOfBoundsKind && !args.isMaybeScrollbar) {\n                setGridSelection(emptyGridSelection, false);\n                setOverlay(undefined);\n                focus();\n                onSelectionCleared?.();\n                lastSelectedRowRef.current = undefined;\n                lastSelectedColRef.current = undefined;\n            }\n        },\n        [\n            appendRow,\n            columnSelect,\n            focus,\n            getCellRenderer,\n            getCustomNewRowTargetColumn,\n            getMangledCellContent,\n            gridSelection,\n            hasRowMarkers,\n            lastRowSticky,\n            onSelectionCleared,\n            onRowMoved,\n            rowMarkerOffset,\n            rowMarkers,\n            rowSelect,\n            rowSelectionMode,\n            rows,\n            setCurrent,\n            setGridSelection,\n            setSelectedColumns,\n            setSelectedRows,\n            showTrailingBlankRow,\n            themeForCell,\n        ]\n    );\n    const isActivelyDraggingHeader = React.useRef(false);\n    const lastMouseSelectLocation = React.useRef<readonly [number, number]>();\n    const touchDownArgs = React.useRef(visibleRegion);\n    const mouseDownData = React.useRef<{\n        time: number;\n        button: number;\n        location: Item;\n    }>();\n    const onMouseDown = React.useCallback(\n        (args: GridMouseEventArgs) => {\n            isPrevented.current = false;\n            touchDownArgs.current = visibleRegionRef.current;\n            if (args.button !== 0 && args.button !== 1) {\n                mouseDownData.current = undefined;\n                return;\n            }\n\n            const time = performance.now();\n            mouseDownData.current = {\n                button: args.button,\n                time,\n                location: args.location,\n            };\n\n            if (args?.kind === \"header\") {\n                isActivelyDraggingHeader.current = true;\n            }\n\n            const fh = args.kind === \"cell\" && args.isFillHandle;\n\n            if (!fh && args.kind !== \"cell\" && args.isEdge) return;\n\n            setMouseState({\n                previousSelection: gridSelection,\n                fillHandle: fh,\n            });\n            lastMouseSelectLocation.current = undefined;\n\n            if (!args.isTouch && args.button === 0 && !fh) {\n                handleSelect(args);\n            } else if (!args.isTouch && args.button === 1) {\n                lastMouseSelectLocation.current = args.location;\n            }\n        },\n        [gridSelection, handleSelect]\n    );\n\n    const [renameGroup, setRenameGroup] = React.useState<{\n        group: string;\n        bounds: Rectangle;\n    }>();\n\n    const handleGroupHeaderSelection = React.useCallback(\n        (args: GridMouseEventArgs) => {\n            if (args.kind !== groupHeaderKind || columnSelect !== \"multi\") {\n                return;\n            }\n            const isMultiKey = browserIsOSX.value ? args.metaKey : args.ctrlKey;\n            const [col] = args.location;\n            const selectedColumns = gridSelection.columns;\n\n            if (col < rowMarkerOffset) return;\n\n            const needle = mangledCols[col];\n            let start = col;\n            let end = col;\n            for (let i = col - 1; i >= rowMarkerOffset; i--) {\n                if (!isGroupEqual(needle.group, mangledCols[i].group)) break;\n                start--;\n            }\n\n            for (let i = col + 1; i < mangledCols.length; i++) {\n                if (!isGroupEqual(needle.group, mangledCols[i].group)) break;\n                end++;\n            }\n\n            focus();\n\n            if (isMultiKey) {\n                if (selectedColumns.hasAll([start, end + 1])) {\n                    let newVal = selectedColumns;\n                    for (let index = start; index <= end; index++) {\n                        newVal = newVal.remove(index);\n                    }\n                    setSelectedColumns(newVal, undefined, isMultiKey);\n                } else {\n                    setSelectedColumns(undefined, [start, end + 1], isMultiKey);\n                }\n            } else {\n                setSelectedColumns(CompactSelection.fromSingleSelection([start, end + 1]), undefined, isMultiKey);\n            }\n        },\n        [columnSelect, focus, gridSelection.columns, mangledCols, rowMarkerOffset, setSelectedColumns]\n    );\n\n    const isPrevented = React.useRef(false);\n\n    const normalSizeColumn = React.useCallback(\n        async (col: number): Promise<void> => {\n            if (getCellsForSelection !== undefined && onColumnResize !== undefined) {\n                const start = visibleRegionRef.current.y;\n                const end = visibleRegionRef.current.height;\n                let cells = getCellsForSelection(\n                    {\n                        x: col,\n                        y: start,\n                        width: 1,\n                        height: Math.min(end, rows - start),\n                    },\n                    abortControllerRef.current.signal\n                );\n                if (typeof cells !== \"object\") {\n                    cells = await cells();\n                }\n                const inputCol = columns[col - rowMarkerOffset];\n                const offscreen = document.createElement(\"canvas\");\n                const ctx = offscreen.getContext(\"2d\", { alpha: false });\n                if (ctx !== null) {\n                    ctx.font = mergedTheme.baseFontFull;\n                    const newCol = measureColumn(\n                        ctx,\n                        mergedTheme,\n                        inputCol,\n                        0,\n                        cells,\n                        minColumnWidth,\n                        maxColumnWidth,\n                        false,\n                        getCellRenderer\n                    );\n                    onColumnResize?.(inputCol, newCol.width, col, newCol.width);\n                }\n            }\n        },\n        [\n            columns,\n            getCellsForSelection,\n            maxColumnWidth,\n            mergedTheme,\n            minColumnWidth,\n            onColumnResize,\n            rowMarkerOffset,\n            rows,\n            getCellRenderer,\n        ]\n    );\n\n    const [scrollDir, setScrollDir] = React.useState<GridMouseEventArgs[\"scrollEdge\"]>();\n\n    const fillPattern = React.useCallback(\n        async (previousSelection: GridSelection, currentSelection: GridSelection) => {\n            const patternRange = previousSelection.current?.range;\n\n            if (\n                patternRange === undefined ||\n                getCellsForSelection === undefined ||\n                currentSelection.current === undefined\n            ) {\n                return;\n            }\n            const currentRange = currentSelection.current.range;\n\n            if (onFillPattern !== undefined) {\n                let canceled = false;\n                onFillPattern({\n                    fillDestination: { ...currentRange, x: currentRange.x - rowMarkerOffset },\n                    patternSource: { ...patternRange, x: patternRange.x - rowMarkerOffset },\n                    preventDefault: () => (canceled = true),\n                });\n                if (canceled) return;\n            }\n\n            let cells = getCellsForSelection(patternRange, abortControllerRef.current.signal);\n            if (typeof cells !== \"object\") cells = await cells();\n\n            const pattern = cells;\n\n            // loop through all cells in currentSelection.current.range\n            const editItemList: EditListItem[] = [];\n            for (let x = 0; x < currentRange.width; x++) {\n                for (let y = 0; y < currentRange.height; y++) {\n                    const cell: Item = [currentRange.x + x, currentRange.y + y];\n                    if (itemIsInRect(cell, patternRange)) continue;\n                    const patternCell = pattern[y % patternRange.height][x % patternRange.width];\n                    if (isInnerOnlyCell(patternCell) || !isReadWriteCell(patternCell)) continue;\n                    editItemList.push({\n                        location: cell,\n                        value: { ...patternCell },\n                    });\n                }\n            }\n            mangledOnCellsEdited(editItemList);\n\n            gridRef.current?.damage(\n                editItemList.map(c => ({\n                    cell: c.location,\n                }))\n            );\n        },\n        [getCellsForSelection, mangledOnCellsEdited, onFillPattern, rowMarkerOffset]\n    );\n\n    const fillRight = React.useCallback(() => {\n        if (gridSelection.current === undefined || gridSelection.current.range.width <= 1) return;\n\n        const firstColSelection = {\n            ...gridSelection,\n            current: {\n                ...gridSelection.current,\n                range: {\n                    ...gridSelection.current.range,\n                    width: 1,\n                },\n            },\n        };\n\n        void fillPattern(firstColSelection, gridSelection);\n    }, [fillPattern, gridSelection]);\n\n    const fillDown = React.useCallback(() => {\n        if (gridSelection.current === undefined || gridSelection.current.range.height <= 1) return;\n\n        const firstRowSelection = {\n            ...gridSelection,\n            current: {\n                ...gridSelection.current,\n                range: {\n                    ...gridSelection.current.range,\n                    height: 1,\n                },\n            },\n        };\n\n        void fillPattern(firstRowSelection, gridSelection);\n    }, [fillPattern, gridSelection]);\n\n    const onMouseUp = React.useCallback(\n        (args: GridMouseEventArgs, isOutside: boolean) => {\n            const mouse = mouseState;\n            setMouseState(undefined);\n            setFillHighlightRegion(undefined);\n            setScrollDir(undefined);\n            isActivelyDraggingHeader.current = false;\n\n            if (isOutside) return;\n\n            if (\n                mouse?.fillHandle === true &&\n                gridSelection.current !== undefined &&\n                mouse.previousSelection?.current !== undefined\n            ) {\n                if (fillHighlightRegion === undefined) return;\n                const newRange = {\n                    ...gridSelection,\n                    current: {\n                        ...gridSelection.current,\n                        range: combineRects(mouse.previousSelection.current.range, fillHighlightRegion),\n                    },\n                };\n                void fillPattern(mouse.previousSelection, newRange);\n                setGridSelection(newRange, true);\n                return;\n            }\n\n            const [col, row] = args.location;\n            const [lastMouseDownCol, lastMouseDownRow] = lastMouseSelectLocation.current ?? [];\n\n            const preventDefault = () => {\n                isPrevented.current = true;\n            };\n\n            const handleMaybeClick = (a: GridMouseCellEventArgs): boolean => {\n                const isValidClick = a.isTouch || (lastMouseDownCol === col && lastMouseDownRow === row);\n                if (isValidClick) {\n                    onCellClicked?.([col - rowMarkerOffset, row], {\n                        ...a,\n                        preventDefault,\n                    });\n                }\n                if (a.button === 1) return !isPrevented.current;\n                if (!isPrevented.current) {\n                    const c = getMangledCellContent(args.location);\n                    const r = getCellRenderer(c);\n                    if (r !== undefined && r.onClick !== undefined && isValidClick) {\n                        const newVal = r.onClick({\n                            ...a,\n                            cell: c,\n                            posX: a.localEventX,\n                            posY: a.localEventY,\n                            bounds: a.bounds,\n                            theme: themeForCell(c, args.location),\n                            preventDefault,\n                        });\n                        if (newVal !== undefined && !isInnerOnlyCell(newVal) && isEditableGridCell(newVal)) {\n                            mangledOnCellsEdited([{ location: a.location, value: newVal }]);\n                            gridRef.current?.damage([\n                                {\n                                    cell: a.location,\n                                },\n                            ]);\n                        }\n                    }\n                    if (isPrevented.current || gridSelection.current === undefined) return false;\n\n                    let shouldActivate = false;\n                    switch (cellActivationBehavior) {\n                        case \"double-click\":\n                        case \"second-click\": {\n                            if (mouse?.previousSelection?.current?.cell === undefined) break;\n                            const [selectedCol, selectedRow] = gridSelection.current.cell;\n                            const [prevCol, prevRow] = mouse.previousSelection.current.cell;\n                            const isClickOnSelected =\n                                col === selectedCol && col === prevCol && row === selectedRow && row === prevRow;\n                            shouldActivate =\n                                isClickOnSelected &&\n                                (a.isDoubleClick === true || cellActivationBehavior === \"second-click\");\n                            break;\n                        }\n                        case \"single-click\": {\n                            shouldActivate = true;\n                            break;\n                        }\n                    }\n                    if (shouldActivate) {\n                        onCellActivated?.([col - rowMarkerOffset, row]);\n                        reselect(a.bounds, false);\n                        return true;\n                    }\n                }\n                return false;\n            };\n\n            const clickLocation = args.location[0] - rowMarkerOffset;\n            if (args.isTouch) {\n                const vr = visibleRegionRef.current;\n                const touchVr = touchDownArgs.current;\n                if (vr.x !== touchVr.x || vr.y !== touchVr.y) {\n                    // we scrolled, abort\n                    return;\n                }\n                // take care of context menus first if long pressed item is already selected\n                if (args.isLongTouch === true) {\n                    if (args.kind === \"cell\" && itemsAreEqual(gridSelection.current?.cell, args.location)) {\n                        onCellContextMenu?.([clickLocation, args.location[1]], {\n                            ...args,\n                            preventDefault,\n                        });\n                        return;\n                    } else if (args.kind === \"header\" && gridSelection.columns.hasIndex(col)) {\n                        onHeaderContextMenu?.(clickLocation, { ...args, preventDefault });\n                        return;\n                    } else if (args.kind === groupHeaderKind) {\n                        if (clickLocation < 0) {\n                            return;\n                        }\n\n                        onGroupHeaderContextMenu?.(clickLocation, { ...args, preventDefault });\n                        return;\n                    }\n                }\n                if (args.kind === \"cell\") {\n                    // click that cell\n                    if (!handleMaybeClick(args)) {\n                        handleSelect(args);\n                    }\n                } else if (args.kind === groupHeaderKind) {\n                    onGroupHeaderClicked?.(clickLocation, { ...args, preventDefault });\n                } else {\n                    if (args.kind === headerKind) {\n                        onHeaderClicked?.(clickLocation, {\n                            ...args,\n                            preventDefault,\n                        });\n                    }\n                    handleSelect(args);\n                }\n                return;\n            }\n\n            if (args.kind === \"header\") {\n                if (clickLocation < 0) {\n                    return;\n                }\n\n                if (args.isEdge) {\n                    if (args.isDoubleClick === true) {\n                        void normalSizeColumn(col);\n                    }\n                } else if (args.button === 0 && col === lastMouseDownCol && row === lastMouseDownRow) {\n                    onHeaderClicked?.(clickLocation, { ...args, preventDefault });\n                }\n            }\n\n            if (args.kind === groupHeaderKind) {\n                if (clickLocation < 0) {\n                    return;\n                }\n\n                if (args.button === 0 && col === lastMouseDownCol && row === lastMouseDownRow) {\n                    onGroupHeaderClicked?.(clickLocation, { ...args, preventDefault });\n                    if (!isPrevented.current) {\n                        handleGroupHeaderSelection(args);\n                    }\n                }\n            }\n\n            if (args.kind === \"cell\" && (args.button === 0 || args.button === 1)) {\n                handleMaybeClick(args);\n            }\n\n            lastMouseSelectLocation.current = undefined;\n        },\n        [\n            mouseState,\n            gridSelection,\n            rowMarkerOffset,\n            fillHighlightRegion,\n            fillPattern,\n            setGridSelection,\n            onCellClicked,\n            getMangledCellContent,\n            getCellRenderer,\n            cellActivationBehavior,\n            themeForCell,\n            mangledOnCellsEdited,\n            onCellActivated,\n            reselect,\n            onCellContextMenu,\n            onHeaderContextMenu,\n            onGroupHeaderContextMenu,\n            handleSelect,\n            onGroupHeaderClicked,\n            onHeaderClicked,\n            normalSizeColumn,\n            handleGroupHeaderSelection,\n        ]\n    );\n\n    const onMouseMoveImpl = React.useCallback(\n        (args: GridMouseEventArgs) => {\n            const a: GridMouseEventArgs = {\n                ...args, // FIXME: Mutate\n                location: [args.location[0] - rowMarkerOffset, args.location[1]] as any,\n            };\n            onMouseMove?.(a);\n\n            if (mouseState !== undefined && args.buttons === 0) {\n                setMouseState(undefined);\n                setFillHighlightRegion(undefined);\n                setScrollDir(undefined);\n                isActivelyDraggingHeader.current = false;\n            }\n\n            setScrollDir(cv => {\n                if (isActivelyDraggingHeader.current) return [args.scrollEdge[0], 0];\n                if (args.scrollEdge[0] === cv?.[0] && args.scrollEdge[1] === cv[1]) return cv;\n                return mouseState === undefined || (mouseDownData.current?.location[0] ?? 0) < rowMarkerOffset\n                    ? undefined\n                    : args.scrollEdge;\n            });\n        },\n        [mouseState, onMouseMove, rowMarkerOffset]\n    );\n\n    const onHeaderMenuClickInner = React.useCallback(\n        (col: number, screenPosition: Rectangle) => {\n            onHeaderMenuClick?.(col - rowMarkerOffset, screenPosition);\n        },\n        [onHeaderMenuClick, rowMarkerOffset]\n    );\n\n    const currentCell = gridSelection?.current?.cell;\n    const onVisibleRegionChangedImpl = React.useCallback(\n        (\n            region: Rectangle,\n            clientWidth: number,\n            clientHeight: number,\n            rightElWidth: number,\n            tx: number,\n            ty: number\n        ) => {\n            hasJustScrolled.current = false;\n            let selected = currentCell;\n            if (selected !== undefined) {\n                selected = [selected[0] - rowMarkerOffset, selected[1]];\n            }\n\n            const freezeRegion =\n                freezeColumns === 0\n                    ? undefined\n                    : {\n                          x: 0,\n                          y: region.y,\n                          width: freezeColumns,\n                          height: region.height,\n                      };\n\n            const freezeRegions: Rectangle[] = [];\n            if (freezeRegion !== undefined) freezeRegions.push(freezeRegion);\n            if (freezeTrailingRows > 0) {\n                freezeRegions.push({\n                    x: region.x - rowMarkerOffset,\n                    y: rows - freezeTrailingRows,\n                    width: region.width,\n                    height: freezeTrailingRows,\n                });\n\n                if (freezeColumns > 0) {\n                    freezeRegions.push({\n                        x: 0,\n                        y: rows - freezeTrailingRows,\n                        width: freezeColumns,\n                        height: freezeTrailingRows,\n                    });\n                }\n            }\n\n            const newRegion = {\n                x: region.x - rowMarkerOffset,\n                y: region.y,\n                width: region.width,\n                height: showTrailingBlankRow && region.y + region.height >= rows ? region.height - 1 : region.height,\n                tx,\n                ty,\n                extras: {\n                    selected,\n                    freezeRegion,\n                    freezeRegions,\n                },\n            };\n            visibleRegionRef.current = newRegion;\n            setVisibleRegion(newRegion);\n            setClientSize([clientWidth, clientHeight, rightElWidth]);\n            onVisibleRegionChanged?.(newRegion, newRegion.tx, newRegion.ty, newRegion.extras);\n        },\n        [\n            currentCell,\n            rowMarkerOffset,\n            showTrailingBlankRow,\n            rows,\n            freezeColumns,\n            freezeTrailingRows,\n            setVisibleRegion,\n            onVisibleRegionChanged,\n        ]\n    );\n\n    const onColumnMovedImpl = whenDefined(\n        onColumnMoved,\n        React.useCallback(\n            (startIndex: number, endIndex: number) => {\n                onColumnMoved?.(startIndex - rowMarkerOffset, endIndex - rowMarkerOffset);\n                if (columnSelect !== \"none\") {\n                    setSelectedColumns(CompactSelection.fromSingleSelection(endIndex), undefined, true);\n                }\n            },\n            [columnSelect, onColumnMoved, rowMarkerOffset, setSelectedColumns]\n        )\n    );\n\n    const isActivelyDragging = React.useRef(false);\n    const onDragStartImpl = React.useCallback(\n        (args: GridDragEventArgs) => {\n            if (args.location[0] === 0 && rowMarkerOffset > 0) {\n                args.preventDefault();\n                return;\n            }\n            onDragStart?.({\n                ...args,\n                location: [args.location[0] - rowMarkerOffset, args.location[1]] as any,\n            });\n\n            if (!args.defaultPrevented()) {\n                isActivelyDragging.current = true;\n            }\n            setMouseState(undefined);\n        },\n        [onDragStart, rowMarkerOffset]\n    );\n\n    const onDragEnd = React.useCallback(() => {\n        isActivelyDragging.current = false;\n    }, []);\n\n    const hoveredRef = React.useRef<GridMouseEventArgs>();\n    const onItemHoveredImpl = React.useCallback(\n        (args: GridMouseEventArgs) => {\n            // make sure we still have a button down\n            if (mouseEventArgsAreEqual(args, hoveredRef.current)) return;\n            hoveredRef.current = args;\n            if (mouseDownData?.current?.button !== undefined && mouseDownData.current.button >= 1) return;\n            if (\n                args.buttons !== 0 &&\n                mouseState !== undefined &&\n                mouseDownData.current?.location[0] === 0 &&\n                args.location[0] === 0 &&\n                rowMarkerOffset === 1 &&\n                rowSelect === \"multi\" &&\n                mouseState.previousSelection &&\n                !mouseState.previousSelection.rows.hasIndex(mouseDownData.current.location[1]) &&\n                gridSelection.rows.hasIndex(mouseDownData.current.location[1])\n            ) {\n                const start = Math.min(mouseDownData.current.location[1], args.location[1]);\n                const end = Math.max(mouseDownData.current.location[1], args.location[1]) + 1;\n                setSelectedRows(CompactSelection.fromSingleSelection([start, end]), undefined, false);\n            }\n            if (\n                args.buttons !== 0 &&\n                mouseState !== undefined &&\n                gridSelection.current !== undefined &&\n                !isActivelyDragging.current &&\n                !isActivelyDraggingHeader.current &&\n                (rangeSelect === \"rect\" || rangeSelect === \"multi-rect\")\n            ) {\n                const [selectedCol, selectedRow] = gridSelection.current.cell;\n                // eslint-disable-next-line prefer-const\n                let [col, row] = args.location;\n\n                if (row < 0) {\n                    row = visibleRegionRef.current.y;\n                }\n\n                if (mouseState.fillHandle === true && mouseState.previousSelection?.current !== undefined) {\n                    const prevRange = mouseState.previousSelection.current.range;\n                    row = Math.min(row, lastRowSticky ? rows - 1 : rows);\n                    const rect = getClosestRect(prevRange, col, row, allowedFillDirections);\n                    setFillHighlightRegion(rect);\n                } else {\n                    const startedFromLastStickyRow = lastRowSticky && selectedRow === rows;\n                    if (startedFromLastStickyRow) return;\n\n                    const landedOnLastStickyRow = lastRowSticky && row === rows;\n                    if (landedOnLastStickyRow) {\n                        if (args.kind === outOfBoundsKind) row--;\n                        else return;\n                    }\n\n                    col = Math.max(col, rowMarkerOffset);\n\n                    const deltaX = col - selectedCol;\n                    const deltaY = row - selectedRow;\n\n                    const newRange: Rectangle = {\n                        x: deltaX >= 0 ? selectedCol : col,\n                        y: deltaY >= 0 ? selectedRow : row,\n                        width: Math.abs(deltaX) + 1,\n                        height: Math.abs(deltaY) + 1,\n                    };\n\n                    setCurrent(\n                        {\n                            ...gridSelection.current,\n                            range: newRange,\n                        },\n                        true,\n                        false,\n                        \"drag\"\n                    );\n                }\n            }\n\n            onItemHovered?.({ ...args, location: [args.location[0] - rowMarkerOffset, args.location[1]] as any });\n        },\n        [\n            allowedFillDirections,\n            mouseState,\n            rowMarkerOffset,\n            rowSelect,\n            gridSelection,\n            rangeSelect,\n            onItemHovered,\n            setSelectedRows,\n            lastRowSticky,\n            rows,\n            setCurrent,\n        ]\n    );\n\n    const adjustSelectionOnScroll = React.useCallback(() => {\n        const args = hoveredRef.current;\n        if (args === undefined) return;\n        const [xDir, yDir] = args.scrollEdge;\n        let [col, row] = args.location;\n        const visible = visibleRegionRef.current;\n        if (xDir === -1) {\n            col = visible.extras?.freezeRegion?.x ?? visible.x;\n        } else if (xDir === 1) {\n            col = visible.x + visible.width;\n        }\n        if (yDir === -1) {\n            row = Math.max(0, visible.y);\n        } else if (yDir === 1) {\n            row = Math.min(rows - 1, visible.y + visible.height);\n        }\n        col = clamp(col, 0, mangledCols.length - 1);\n        row = clamp(row, 0, rows - 1);\n        onItemHoveredImpl({\n            ...args,\n            location: [col, row] as any,\n        });\n    }, [mangledCols.length, onItemHoveredImpl, rows]);\n\n    useAutoscroll(scrollDir, scrollRef, adjustSelectionOnScroll);\n\n    // 1 === move one\n    // 2 === move to end\n    const adjustSelection = React.useCallback(\n        (direction: [0 | 1 | -1 | 2 | -2, 0 | 1 | -1 | 2 | -2]) => {\n            if (gridSelection.current === undefined) return;\n\n            const [x, y] = direction;\n            const [col, row] = gridSelection.current.cell;\n            const old = gridSelection.current.range;\n            let left = old.x;\n            let right = old.x + old.width;\n            let top = old.y;\n            let bottom = old.y + old.height;\n\n            // take care of vertical first in case new spans come in\n            if (y !== 0) {\n                switch (y) {\n                    case 2: {\n                        // go to end\n                        bottom = rows;\n                        top = row;\n                        scrollTo(0, bottom, \"vertical\");\n\n                        break;\n                    }\n                    case -2: {\n                        // go to start\n                        top = 0;\n                        bottom = row + 1;\n                        scrollTo(0, top, \"vertical\");\n\n                        break;\n                    }\n                    case 1: {\n                        // motion down\n                        if (top < row) {\n                            top++;\n                            scrollTo(0, top, \"vertical\");\n                        } else {\n                            bottom = Math.min(rows, bottom + 1);\n                            scrollTo(0, bottom, \"vertical\");\n                        }\n\n                        break;\n                    }\n                    case -1: {\n                        // motion up\n                        if (bottom > row + 1) {\n                            bottom--;\n                            scrollTo(0, bottom, \"vertical\");\n                        } else {\n                            top = Math.max(0, top - 1);\n                            scrollTo(0, top, \"vertical\");\n                        }\n\n                        break;\n                    }\n                    default: {\n                        assertNever(y);\n                    }\n                }\n            }\n\n            if (x !== 0) {\n                if (x === 2) {\n                    right = mangledCols.length;\n                    left = col;\n                    scrollTo(right - 1 - rowMarkerOffset, 0, \"horizontal\");\n                } else if (x === -2) {\n                    left = rowMarkerOffset;\n                    right = col + 1;\n                    scrollTo(left - rowMarkerOffset, 0, \"horizontal\");\n                } else {\n                    let disallowed: number[] = [];\n                    if (getCellsForSelection !== undefined) {\n                        const cells = getCellsForSelection(\n                            {\n                                x: left,\n                                y: top,\n                                width: right - left - rowMarkerOffset,\n                                height: bottom - top,\n                            },\n                            abortControllerRef.current.signal\n                        );\n\n                        if (typeof cells === \"object\") {\n                            disallowed = getSpanStops(cells);\n                        }\n                    }\n                    if (x === 1) {\n                        // motion right\n                        let done = false;\n                        if (left < col) {\n                            if (disallowed.length > 0) {\n                                const target = range(left + 1, col + 1).find(\n                                    n => !disallowed.includes(n - rowMarkerOffset)\n                                );\n                                if (target !== undefined) {\n                                    left = target;\n                                    done = true;\n                                }\n                            } else {\n                                left++;\n                                done = true;\n                            }\n                            if (done) scrollTo(left, 0, \"horizontal\");\n                        }\n                        if (!done) {\n                            right = Math.min(mangledCols.length, right + 1);\n                            scrollTo(right - 1 - rowMarkerOffset, 0, \"horizontal\");\n                        }\n                    } else if (x === -1) {\n                        // motion left\n                        let done = false;\n                        if (right > col + 1) {\n                            if (disallowed.length > 0) {\n                                const target = range(right - 1, col, -1).find(\n                                    n => !disallowed.includes(n - rowMarkerOffset)\n                                );\n                                if (target !== undefined) {\n                                    right = target;\n                                    done = true;\n                                }\n                            } else {\n                                right--;\n                                done = true;\n                            }\n                            if (done) scrollTo(right - rowMarkerOffset, 0, \"horizontal\");\n                        }\n                        if (!done) {\n                            left = Math.max(rowMarkerOffset, left - 1);\n                            scrollTo(left - rowMarkerOffset, 0, \"horizontal\");\n                        }\n                    } else {\n                        assertNever(x);\n                    }\n                }\n            }\n\n            setCurrent(\n                {\n                    cell: gridSelection.current.cell,\n                    range: {\n                        x: left,\n                        y: top,\n                        width: right - left,\n                        height: bottom - top,\n                    },\n                },\n                true,\n                false,\n                \"keyboard-select\"\n            );\n        },\n        [getCellsForSelection, gridSelection, mangledCols.length, rowMarkerOffset, rows, scrollTo, setCurrent]\n    );\n\n    const updateSelectedCell = React.useCallback(\n        (col: number, row: number, fromEditingTrailingRow: boolean, freeMove: boolean): boolean => {\n            const rowMax = mangledRows - (fromEditingTrailingRow ? 0 : 1);\n            col = clamp(col, rowMarkerOffset, columns.length - 1 + rowMarkerOffset);\n            row = clamp(row, 0, rowMax);\n\n            if (col === currentCell?.[0] && row === currentCell?.[1]) return false;\n            if (freeMove && gridSelection.current !== undefined) {\n                const newStack = [...gridSelection.current.rangeStack];\n                if (gridSelection.current.range.width > 1 || gridSelection.current.range.height > 1) {\n                    newStack.push(gridSelection.current.range);\n                }\n                setGridSelection(\n                    {\n                        ...gridSelection,\n                        current: {\n                            cell: [col, row],\n                            range: { x: col, y: row, width: 1, height: 1 },\n                            rangeStack: newStack,\n                        },\n                    },\n                    true\n                );\n            } else {\n                setCurrent(\n                    {\n                        cell: [col, row],\n                        range: { x: col, y: row, width: 1, height: 1 },\n                    },\n                    true,\n                    false,\n                    \"keyboard-nav\"\n                );\n            }\n\n            if (lastSent.current !== undefined && lastSent.current[0] === col && lastSent.current[1] === row) {\n                lastSent.current = undefined;\n            }\n\n            scrollTo(col - rowMarkerOffset, row);\n\n            return true;\n        },\n        [\n            mangledRows,\n            rowMarkerOffset,\n            columns.length,\n            currentCell,\n            gridSelection,\n            scrollTo,\n            setGridSelection,\n            setCurrent,\n        ]\n    );\n\n    const onFinishEditing = React.useCallback(\n        (newValue: GridCell | undefined, movement: readonly [-1 | 0 | 1, -1 | 0 | 1]) => {\n            if (overlay?.cell !== undefined && newValue !== undefined && isEditableGridCell(newValue)) {\n                mangledOnCellsEdited([{ location: overlay.cell, value: newValue }]);\n                window.requestAnimationFrame(() => {\n                    gridRef.current?.damage([\n                        {\n                            cell: overlay.cell,\n                        },\n                    ]);\n                });\n            }\n            focus(true);\n            setOverlay(undefined);\n\n            const [movX, movY] = movement;\n            if (gridSelection.current !== undefined && (movX !== 0 || movY !== 0)) {\n                const isEditingTrailingRow =\n                    gridSelection.current.cell[1] === mangledRows - 1 && newValue !== undefined;\n                updateSelectedCell(\n                    clamp(gridSelection.current.cell[0] + movX, 0, mangledCols.length - 1),\n                    clamp(gridSelection.current.cell[1] + movY, 0, mangledRows - 1),\n                    isEditingTrailingRow,\n                    false\n                );\n            }\n            onFinishedEditing?.(newValue, movement);\n        },\n        [\n            overlay?.cell,\n            focus,\n            gridSelection,\n            onFinishedEditing,\n            mangledOnCellsEdited,\n            mangledRows,\n            updateSelectedCell,\n            mangledCols.length,\n        ]\n    );\n\n    const overlayID = React.useMemo(() => {\n        return `gdg-overlay-${idCounter++}`;\n    }, []);\n\n    const deleteRange = React.useCallback(\n        (r: Rectangle) => {\n            focus();\n            const editList: EditListItem[] = [];\n            for (let x = r.x; x < r.x + r.width; x++) {\n                for (let y = r.y; y < r.y + r.height; y++) {\n                    const cellValue = getCellContent([x - rowMarkerOffset, y]);\n                    if (!cellValue.allowOverlay && cellValue.kind !== GridCellKind.Boolean) continue;\n                    let newVal: InnerGridCell | undefined = undefined;\n                    if (cellValue.kind === GridCellKind.Custom) {\n                        const toDelete = getCellRenderer(cellValue);\n                        const editor = toDelete?.provideEditor?.(cellValue);\n                        if (toDelete?.onDelete !== undefined) {\n                            newVal = toDelete.onDelete(cellValue);\n                        } else if (isObjectEditorCallbackResult(editor)) {\n                            newVal = editor?.deletedValue?.(cellValue);\n                        }\n                    } else if (\n                        (isEditableGridCell(cellValue) && cellValue.allowOverlay) ||\n                        cellValue.kind === GridCellKind.Boolean\n                    ) {\n                        const toDelete = getCellRenderer(cellValue);\n                        newVal = toDelete?.onDelete?.(cellValue);\n                    }\n                    if (newVal !== undefined && !isInnerOnlyCell(newVal) && isEditableGridCell(newVal)) {\n                        editList.push({ location: [x, y], value: newVal });\n                    }\n                }\n            }\n            mangledOnCellsEdited(editList);\n            gridRef.current?.damage(editList.map(x => ({ cell: x.location })));\n        },\n        [focus, getCellContent, getCellRenderer, mangledOnCellsEdited, rowMarkerOffset]\n    );\n\n    const overlayOpen = overlay !== undefined;\n\n    const handleFixedKeybindings = React.useCallback(\n        (event: GridKeyEventArgs): boolean => {\n            const cancel = () => {\n                event.stopPropagation();\n                event.preventDefault();\n            };\n\n            const details = {\n                didMatch: false,\n            };\n\n            const { bounds } = event;\n            const selectedColumns = gridSelection.columns;\n            const selectedRows = gridSelection.rows;\n\n            const keys = keybindings;\n\n            if (!overlayOpen && isHotkey(keys.clear, event, details)) {\n                setGridSelection(emptyGridSelection, false);\n                onSelectionCleared?.();\n            } else if (!overlayOpen && isHotkey(keys.selectAll, event, details)) {\n                setGridSelection(\n                    {\n                        columns: CompactSelection.empty(),\n                        rows: CompactSelection.empty(),\n                        current: {\n                            cell: gridSelection.current?.cell ?? [rowMarkerOffset, 0],\n                            range: {\n                                x: rowMarkerOffset,\n                                y: 0,\n                                width: columnsIn.length,\n                                height: rows,\n                            },\n                            rangeStack: [],\n                        },\n                    },\n                    false\n                );\n            } else if (isHotkey(keys.search, event, details)) {\n                searchInputRef?.current?.focus({ preventScroll: true });\n                setShowSearchInner(true);\n            } else if (isHotkey(keys.delete, event, details)) {\n                const callbackResult = onDelete?.(gridSelection) ?? true;\n                if (callbackResult !== false) {\n                    const toDelete = callbackResult === true ? gridSelection : callbackResult;\n\n                    // delete order:\n                    // 1) primary range\n                    // 2) secondary ranges\n                    // 3) columns\n                    // 4) rows\n\n                    if (toDelete.current !== undefined) {\n                        deleteRange(toDelete.current.range);\n                        for (const r of toDelete.current.rangeStack) {\n                            deleteRange(r);\n                        }\n                    }\n\n                    for (const r of toDelete.rows) {\n                        deleteRange({\n                            x: rowMarkerOffset,\n                            y: r,\n                            width: columnsIn.length,\n                            height: 1,\n                        });\n                    }\n\n                    for (const col of toDelete.columns) {\n                        deleteRange({\n                            x: col,\n                            y: 0,\n                            width: 1,\n                            height: rows,\n                        });\n                    }\n                }\n            }\n\n            if (details.didMatch) {\n                cancel();\n                return true;\n            }\n\n            if (gridSelection.current === undefined) return false;\n            let [col, row] = gridSelection.current.cell;\n            let freeMove = false;\n            let cancelOnlyOnMove = false;\n\n            if (isHotkey(keys.scrollToSelectedCell, event, details)) {\n                scrollToRef.current(col - rowMarkerOffset, row);\n            } else if (columnSelect !== \"none\" && isHotkey(keys.selectColumn, event, details)) {\n                if (selectedColumns.hasIndex(col)) {\n                    setSelectedColumns(selectedColumns.remove(col), undefined, true);\n                } else {\n                    if (columnSelect === \"single\") {\n                        setSelectedColumns(CompactSelection.fromSingleSelection(col), undefined, true);\n                    } else {\n                        setSelectedColumns(undefined, col, true);\n                    }\n                }\n            } else if (rowSelect !== \"none\" && isHotkey(keys.selectRow, event, details)) {\n                if (selectedRows.hasIndex(row)) {\n                    setSelectedRows(selectedRows.remove(row), undefined, true);\n                } else {\n                    if (rowSelect === \"single\") {\n                        setSelectedRows(CompactSelection.fromSingleSelection(row), undefined, true);\n                    } else {\n                        setSelectedRows(undefined, row, true);\n                    }\n                }\n            } else if (!overlayOpen && bounds !== undefined && isHotkey(keys.activateCell, event, details)) {\n                if (row === rows && showTrailingBlankRow) {\n                    window.setTimeout(() => {\n                        const customTargetColumn = getCustomNewRowTargetColumn(col);\n                        void appendRow(customTargetColumn ?? col);\n                    }, 0);\n                } else {\n                    onCellActivated?.([col - rowMarkerOffset, row]);\n                    reselect(bounds, true);\n                }\n            } else if (gridSelection.current.range.height > 1 && isHotkey(keys.downFill, event, details)) {\n                fillDown();\n            } else if (gridSelection.current.range.width > 1 && isHotkey(keys.rightFill, event, details)) {\n                fillRight();\n            } else if (isHotkey(keys.goToNextPage, event, details)) {\n                row += Math.max(1, visibleRegionRef.current.height - 4); // partial cell accounting\n            } else if (isHotkey(keys.goToPreviousPage, event, details)) {\n                row -= Math.max(1, visibleRegionRef.current.height - 4); // partial cell accounting\n            } else if (isHotkey(keys.goToFirstCell, event, details)) {\n                setOverlay(undefined);\n                row = 0;\n                col = 0;\n            } else if (isHotkey(keys.goToLastCell, event, details)) {\n                setOverlay(undefined);\n                row = Number.MAX_SAFE_INTEGER;\n                col = Number.MAX_SAFE_INTEGER;\n            } else if (isHotkey(keys.selectToFirstCell, event, details)) {\n                setOverlay(undefined);\n                adjustSelection([-2, -2]);\n            } else if (isHotkey(keys.selectToLastCell, event, details)) {\n                setOverlay(undefined);\n                adjustSelection([2, 2]);\n            } else if (!overlayOpen) {\n                if (isHotkey(keys.goDownCell, event, details)) {\n                    row += 1;\n                } else if (isHotkey(keys.goUpCell, event, details)) {\n                    row -= 1;\n                } else if (isHotkey(keys.goRightCell, event, details)) {\n                    col += 1;\n                } else if (isHotkey(keys.goLeftCell, event, details)) {\n                    col -= 1;\n                } else if (isHotkey(keys.goDownCellRetainSelection, event, details)) {\n                    row += 1;\n                    freeMove = true;\n                } else if (isHotkey(keys.goUpCellRetainSelection, event, details)) {\n                    row -= 1;\n                    freeMove = true;\n                } else if (isHotkey(keys.goRightCellRetainSelection, event, details)) {\n                    col += 1;\n                    freeMove = true;\n                } else if (isHotkey(keys.goLeftCellRetainSelection, event, details)) {\n                    col -= 1;\n                    freeMove = true;\n                } else if (isHotkey(keys.goToLastRow, event, details)) {\n                    row = rows - 1;\n                } else if (isHotkey(keys.goToFirstRow, event, details)) {\n                    row = Number.MIN_SAFE_INTEGER;\n                } else if (isHotkey(keys.goToLastColumn, event, details)) {\n                    col = Number.MAX_SAFE_INTEGER;\n                } else if (isHotkey(keys.goToFirstColumn, event, details)) {\n                    col = Number.MIN_SAFE_INTEGER;\n                } else if (rangeSelect === \"rect\" || rangeSelect === \"multi-rect\") {\n                    if (isHotkey(keys.selectGrowDown, event, details)) {\n                        adjustSelection([0, 1]);\n                    } else if (isHotkey(keys.selectGrowUp, event, details)) {\n                        adjustSelection([0, -1]);\n                    } else if (isHotkey(keys.selectGrowRight, event, details)) {\n                        adjustSelection([1, 0]);\n                    } else if (isHotkey(keys.selectGrowLeft, event, details)) {\n                        adjustSelection([-1, 0]);\n                    } else if (isHotkey(keys.selectToLastRow, event, details)) {\n                        adjustSelection([0, 2]);\n                    } else if (isHotkey(keys.selectToFirstRow, event, details)) {\n                        adjustSelection([0, -2]);\n                    } else if (isHotkey(keys.selectToLastColumn, event, details)) {\n                        adjustSelection([2, 0]);\n                    } else if (isHotkey(keys.selectToFirstColumn, event, details)) {\n                        adjustSelection([-2, 0]);\n                    }\n                }\n                cancelOnlyOnMove = details.didMatch;\n            } else {\n                if (isHotkey(keys.closeOverlay, event, details)) {\n                    setOverlay(undefined);\n                }\n\n                if (isHotkey(keys.acceptOverlayDown, event, details)) {\n                    setOverlay(undefined);\n                    row++;\n                }\n\n                if (isHotkey(keys.acceptOverlayUp, event, details)) {\n                    setOverlay(undefined);\n                    row--;\n                }\n\n                if (isHotkey(keys.acceptOverlayLeft, event, details)) {\n                    setOverlay(undefined);\n                    col--;\n                }\n\n                if (isHotkey(keys.acceptOverlayRight, event, details)) {\n                    setOverlay(undefined);\n                    col++;\n                }\n            }\n            // #endregion\n\n            const moved = updateSelectedCell(col, row, false, freeMove);\n\n            const didMatch = details.didMatch;\n\n            if (didMatch && (moved || !cancelOnlyOnMove || trapFocus)) {\n                cancel();\n            }\n\n            return didMatch;\n        },\n        [\n            overlayOpen,\n            gridSelection,\n            keybindings,\n            columnSelect,\n            rowSelect,\n            rangeSelect,\n            rowMarkerOffset,\n            rows,\n            updateSelectedCell,\n            setGridSelection,\n            onSelectionCleared,\n            columnsIn.length,\n            onDelete,\n            trapFocus,\n            deleteRange,\n            setSelectedColumns,\n            setSelectedRows,\n            showTrailingBlankRow,\n            getCustomNewRowTargetColumn,\n            appendRow,\n            onCellActivated,\n            reselect,\n            fillDown,\n            fillRight,\n            adjustSelection,\n        ]\n    );\n\n    const onKeyDown = React.useCallback(\n        (event: GridKeyEventArgs) => {\n            let cancelled = false;\n            if (onKeyDownIn !== undefined) {\n                onKeyDownIn({\n                    ...event,\n                    cancel: () => {\n                        cancelled = true;\n                    },\n                });\n            }\n\n            if (cancelled) return;\n\n            if (handleFixedKeybindings(event)) return;\n\n            if (gridSelection.current === undefined) return;\n            const [col, row] = gridSelection.current.cell;\n            const vr = visibleRegionRef.current;\n\n            if (\n                !event.metaKey &&\n                !event.ctrlKey &&\n                gridSelection.current !== undefined &&\n                event.key.length === 1 &&\n                /[ -~]/g.test(event.key) &&\n                event.bounds !== undefined &&\n                isReadWriteCell(getCellContent([col - rowMarkerOffset, Math.max(0, Math.min(row, rows - 1))]))\n            ) {\n                if (\n                    (!lastRowSticky || row !== rows) &&\n                    (vr.y > row || row > vr.y + vr.height || vr.x > col || col > vr.x + vr.width)\n                ) {\n                    return;\n                }\n                reselect(event.bounds, true, event.key);\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        },\n        [\n            onKeyDownIn,\n            handleFixedKeybindings,\n            gridSelection,\n            getCellContent,\n            rowMarkerOffset,\n            rows,\n            lastRowSticky,\n            reselect,\n        ]\n    );\n\n    const onContextMenu = React.useCallback(\n        (args: GridMouseEventArgs, preventDefault: () => void) => {\n            const adjustedCol = args.location[0] - rowMarkerOffset;\n            if (args.kind === \"header\") {\n                onHeaderContextMenu?.(adjustedCol, { ...args, preventDefault });\n            }\n\n            if (args.kind === groupHeaderKind) {\n                if (adjustedCol < 0) {\n                    return;\n                }\n                onGroupHeaderContextMenu?.(adjustedCol, { ...args, preventDefault });\n            }\n\n            if (args.kind === \"cell\") {\n                const [col, row] = args.location;\n                onCellContextMenu?.([adjustedCol, row], {\n                    ...args,\n                    preventDefault,\n                });\n\n                if (!gridSelectionHasItem(gridSelection, args.location)) {\n                    updateSelectedCell(col, row, false, false);\n                }\n            }\n        },\n        [\n            gridSelection,\n            onCellContextMenu,\n            onGroupHeaderContextMenu,\n            onHeaderContextMenu,\n            rowMarkerOffset,\n            updateSelectedCell,\n        ]\n    );\n\n    const onPasteInternal = React.useCallback(\n        async (e?: ClipboardEvent) => {\n            if (!keybindings.paste) return;\n            function pasteToCell(\n                inner: InnerGridCell,\n                target: Item,\n                rawValue: string | boolean | string[] | number | boolean | BooleanEmpty | BooleanIndeterminate,\n                formatted?: string | string[]\n            ): EditListItem | undefined {\n                const stringifiedRawValue =\n                    typeof rawValue === \"object\" ? rawValue?.join(\"\\n\") ?? \"\" : rawValue?.toString() ?? \"\";\n\n                if (!isInnerOnlyCell(inner) && isReadWriteCell(inner) && inner.readonly !== true) {\n                    const coerced = coercePasteValue?.(stringifiedRawValue, inner);\n                    if (coerced !== undefined && isEditableGridCell(coerced)) {\n                        if (process.env.NODE_ENV !== \"production\" && coerced.kind !== inner.kind) {\n                            // eslint-disable-next-line no-console\n                            console.warn(\"Coercion should not change cell kind.\");\n                        }\n                        return {\n                            location: target,\n                            value: coerced,\n                        };\n                    }\n                    const r = getCellRenderer(inner);\n                    if (r === undefined) return undefined;\n                    if (r.kind === GridCellKind.Custom) {\n                        assert(inner.kind === GridCellKind.Custom);\n                        const newVal = (r as unknown as CustomRenderer<CustomCell<any>>).onPaste?.(\n                            stringifiedRawValue,\n                            inner.data\n                        );\n                        if (newVal === undefined) return undefined;\n                        return {\n                            location: target,\n                            value: {\n                                ...inner,\n                                data: newVal,\n                            },\n                        };\n                    } else {\n                        const newVal = r.onPaste?.(stringifiedRawValue, inner, {\n                            formatted,\n                            formattedString: typeof formatted === \"string\" ? formatted : formatted?.join(\"\\n\"),\n                            rawValue,\n                        });\n                        if (newVal === undefined) return undefined;\n                        assert(newVal.kind === inner.kind);\n                        return {\n                            location: target,\n                            value: newVal,\n                        };\n                    }\n                }\n                return undefined;\n            }\n\n            const selectedColumns = gridSelection.columns;\n            const selectedRows = gridSelection.rows;\n            const focused =\n                scrollRef.current?.contains(document.activeElement) === true ||\n                canvasRef.current?.contains(document.activeElement) === true;\n\n            let target: Item | undefined;\n\n            if (gridSelection.current !== undefined) {\n                target = [gridSelection.current.range.x, gridSelection.current.range.y];\n            } else if (selectedColumns.length === 1) {\n                target = [selectedColumns.first() ?? 0, 0];\n            } else if (selectedRows.length === 1) {\n                target = [rowMarkerOffset, selectedRows.first() ?? 0];\n            }\n\n            if (focused && target !== undefined) {\n                let data: CopyBuffer | undefined;\n                let text: string | undefined;\n\n                const textPlain = \"text/plain\";\n                const textHtml = \"text/html\";\n\n                if (navigator.clipboard.read !== undefined) {\n                    const clipboardContent = await navigator.clipboard.read();\n\n                    for (const item of clipboardContent) {\n                        if (item.types.includes(textHtml)) {\n                            const htmlBlob = await item.getType(textHtml);\n                            const html = await htmlBlob.text();\n                            const decoded = decodeHTML(html);\n                            if (decoded !== undefined) {\n                                data = decoded;\n                                break;\n                            }\n                        }\n                        if (item.types.includes(textPlain)) {\n                            // eslint-disable-next-line unicorn/no-await-expression-member\n                            text = await (await item.getType(textPlain)).text();\n                        }\n                    }\n                } else if (navigator.clipboard.readText !== undefined) {\n                    text = await navigator.clipboard.readText();\n                } else if (e !== undefined && e?.clipboardData !== null) {\n                    if (e.clipboardData.types.includes(textHtml)) {\n                        const html = e.clipboardData.getData(textHtml);\n                        data = decodeHTML(html);\n                    }\n                    if (data === undefined && e.clipboardData.types.includes(textPlain)) {\n                        text = e.clipboardData.getData(textPlain);\n                    }\n                } else {\n                    return; // I didn't want to read that paste value anyway\n                }\n\n                const [targetCol, targetRow] = target;\n\n                const editList: EditListItem[] = [];\n                do {\n                    if (onPaste === undefined) {\n                        const cellData = getMangledCellContent(target);\n                        const rawValue = text ?? data?.map(r => r.map(cb => cb.rawValue).join(\"\\t\")).join(\"\\t\") ?? \"\";\n                        const newVal = pasteToCell(cellData, target, rawValue, undefined);\n                        if (newVal !== undefined) {\n                            editList.push(newVal);\n                        }\n                        break;\n                    }\n\n                    if (data === undefined) {\n                        if (text === undefined) return;\n                        data = unquote(text);\n                    }\n\n                    if (\n                        onPaste === false ||\n                        (typeof onPaste === \"function\" &&\n                            onPaste?.(\n                                [target[0] - rowMarkerOffset, target[1]],\n                                data.map(r => r.map(cb => cb.rawValue?.toString() ?? \"\"))\n                            ) !== true)\n                    ) {\n                        return;\n                    }\n\n                    for (const [row, dataRow] of data.entries()) {\n                        if (row + targetRow >= rows) break;\n                        for (const [col, dataItem] of dataRow.entries()) {\n                            const index = [col + targetCol, row + targetRow] as const;\n                            const [writeCol, writeRow] = index;\n                            if (writeCol >= mangledCols.length) continue;\n                            if (writeRow >= mangledRows) continue;\n                            const cellData = getMangledCellContent(index);\n                            const newVal = pasteToCell(cellData, index, dataItem.rawValue, dataItem.formatted);\n                            if (newVal !== undefined) {\n                                editList.push(newVal);\n                            }\n                        }\n                    }\n                    // eslint-disable-next-line no-constant-condition\n                } while (false);\n\n                mangledOnCellsEdited(editList);\n\n                gridRef.current?.damage(\n                    editList.map(c => ({\n                        cell: c.location,\n                    }))\n                );\n            }\n        },\n        [\n            coercePasteValue,\n            getCellRenderer,\n            getMangledCellContent,\n            gridSelection,\n            keybindings.paste,\n            mangledCols.length,\n            mangledOnCellsEdited,\n            mangledRows,\n            onPaste,\n            rowMarkerOffset,\n            rows,\n        ]\n    );\n\n    useEventListener(\"paste\", onPasteInternal, safeWindow, false, true);\n\n    // While this function is async, we deeply prefer not to await if we don't have to. This will lead to unpacking\n    // promises in rather awkward ways when possible to avoid awaiting. We have to use fallback copy mechanisms when\n    // an await has happened.\n    const onCopy = React.useCallback(\n        async (e?: ClipboardEvent, ignoreFocus?: boolean) => {\n            if (!keybindings.copy) return;\n            const focused =\n                ignoreFocus === true ||\n                scrollRef.current?.contains(document.activeElement) === true ||\n                canvasRef.current?.contains(document.activeElement) === true;\n\n            const selectedColumns = gridSelection.columns;\n            const selectedRows = gridSelection.rows;\n\n            const copyToClipboardWithHeaders = (\n                cells: readonly (readonly GridCell[])[],\n                columnIndexes: readonly number[]\n            ) => {\n                if (!copyHeaders) {\n                    copyToClipboard(cells, columnIndexes, e);\n                } else {\n                    const headers = columnIndexes.map(index => ({\n                        kind: GridCellKind.Text,\n                        data: columnsIn[index].title,\n                        displayData: columnsIn[index].title,\n                        allowOverlay: false,\n                    })) as GridCell[];\n                    copyToClipboard([headers, ...cells], columnIndexes, e);\n                }\n            };\n\n            if (focused && getCellsForSelection !== undefined) {\n                if (gridSelection.current !== undefined) {\n                    let thunk = getCellsForSelection(gridSelection.current.range, abortControllerRef.current.signal);\n                    if (typeof thunk !== \"object\") {\n                        thunk = await thunk();\n                    }\n                    copyToClipboardWithHeaders(\n                        thunk,\n                        range(\n                            gridSelection.current.range.x - rowMarkerOffset,\n                            gridSelection.current.range.x + gridSelection.current.range.width - rowMarkerOffset\n                        )\n                    );\n                } else if (selectedRows !== undefined && selectedRows.length > 0) {\n                    const toCopy = [...selectedRows];\n                    const cells = toCopy.map(rowIndex => {\n                        const thunk = getCellsForSelection(\n                            {\n                                x: rowMarkerOffset,\n                                y: rowIndex,\n                                width: columnsIn.length,\n                                height: 1,\n                            },\n                            abortControllerRef.current.signal\n                        );\n                        if (typeof thunk === \"object\") {\n                            return thunk[0];\n                        }\n                        return thunk().then(v => v[0]);\n                    });\n                    if (cells.some(x => x instanceof Promise)) {\n                        const settled = await Promise.all(cells);\n                        copyToClipboardWithHeaders(settled, range(columnsIn.length));\n                    } else {\n                        copyToClipboardWithHeaders(cells as (readonly GridCell[])[], range(columnsIn.length));\n                    }\n                } else if (selectedColumns.length > 0) {\n                    const results: (readonly (readonly GridCell[])[])[] = [];\n                    const cols: number[] = [];\n                    for (const col of selectedColumns) {\n                        let thunk = getCellsForSelection(\n                            {\n                                x: col,\n                                y: 0,\n                                width: 1,\n                                height: rows,\n                            },\n                            abortControllerRef.current.signal\n                        );\n                        if (typeof thunk !== \"object\") {\n                            thunk = await thunk();\n                        }\n                        results.push(thunk);\n                        cols.push(col - rowMarkerOffset);\n                    }\n                    if (results.length === 1) {\n                        copyToClipboardWithHeaders(results[0], cols);\n                    } else {\n                        // FIXME: this is dumb\n                        const toCopy = results.reduce((pv, cv) => pv.map((row, index) => [...row, ...cv[index]]));\n                        copyToClipboardWithHeaders(toCopy, cols);\n                    }\n                }\n            }\n        },\n        [columnsIn, getCellsForSelection, gridSelection, keybindings.copy, rowMarkerOffset, rows, copyHeaders]\n    );\n\n    useEventListener(\"copy\", onCopy, safeWindow, false, false);\n\n    const onCut = React.useCallback(\n        async (e?: ClipboardEvent) => {\n            if (!keybindings.cut) return;\n            const focused =\n                scrollRef.current?.contains(document.activeElement) === true ||\n                canvasRef.current?.contains(document.activeElement) === true;\n\n            if (!focused) return;\n            await onCopy(e);\n            if (gridSelection.current !== undefined) {\n                let effectiveSelection: GridSelection = {\n                    current: {\n                        cell: gridSelection.current.cell,\n                        range: gridSelection.current.range,\n                        rangeStack: [],\n                    },\n                    rows: CompactSelection.empty(),\n                    columns: CompactSelection.empty(),\n                };\n                const onDeleteResult = onDelete?.(effectiveSelection);\n                if (onDeleteResult === false) return;\n                effectiveSelection = onDeleteResult === true ? effectiveSelection : onDeleteResult;\n                if (effectiveSelection.current === undefined) return;\n                deleteRange(effectiveSelection.current.range);\n            }\n        },\n        [deleteRange, gridSelection, keybindings.cut, onCopy, onDelete]\n    );\n\n    useEventListener(\"cut\", onCut, safeWindow, false, false);\n\n    const onSearchResultsChanged = React.useCallback(\n        (results: readonly Item[], navIndex: number) => {\n            if (onSearchResultsChangedIn !== undefined) {\n                if (rowMarkerOffset !== 0) {\n                    results = results.map(item => [item[0] - rowMarkerOffset, item[1]]);\n                }\n                onSearchResultsChangedIn(results, navIndex);\n                return;\n            }\n            if (results.length === 0 || navIndex === -1) return;\n\n            const [col, row] = results[navIndex];\n            if (lastSent.current !== undefined && lastSent.current[0] === col && lastSent.current[1] === row) {\n                return;\n            }\n            lastSent.current = [col, row];\n            updateSelectedCell(col, row, false, false);\n        },\n        [onSearchResultsChangedIn, rowMarkerOffset, updateSelectedCell]\n    );\n\n    // this effects purpose in life is to scroll the newly selected cell into view when and ONLY when that cell\n    // is from an external gridSelection change. Also note we want the unmangled out selection because scrollTo\n    // expects unmangled indexes\n    const [outCol, outRow] = gridSelectionOuter?.current?.cell ?? [];\n    const scrollToRef = React.useRef(scrollTo);\n    scrollToRef.current = scrollTo;\n    React.useLayoutEffect(() => {\n        if (\n            !hasJustScrolled.current &&\n            outCol !== undefined &&\n            outRow !== undefined &&\n            (outCol !== expectedExternalGridSelection.current?.current?.cell[0] ||\n                outRow !== expectedExternalGridSelection.current?.current?.cell[1])\n        ) {\n            scrollToRef.current(outCol, outRow);\n        }\n        hasJustScrolled.current = false; //only allow skipping a single scroll\n    }, [outCol, outRow]);\n\n    const selectionOutOfBounds =\n        gridSelection.current !== undefined &&\n        (gridSelection.current.cell[0] >= mangledCols.length || gridSelection.current.cell[1] >= mangledRows);\n    React.useLayoutEffect(() => {\n        if (selectionOutOfBounds) {\n            setGridSelection(emptyGridSelection, false);\n        }\n    }, [selectionOutOfBounds, setGridSelection]);\n\n    const disabledRows = React.useMemo(() => {\n        if (showTrailingBlankRow === true && trailingRowOptions?.tint === true) {\n            return CompactSelection.fromSingleSelection(mangledRows - 1);\n        }\n        return CompactSelection.empty();\n    }, [mangledRows, showTrailingBlankRow, trailingRowOptions?.tint]);\n\n    const mangledVerticalBorder = React.useCallback(\n        (col: number) => {\n            return typeof verticalBorder === \"boolean\"\n                ? verticalBorder\n                : verticalBorder?.(col - rowMarkerOffset) ?? true;\n        },\n        [rowMarkerOffset, verticalBorder]\n    );\n\n    const renameGroupNode = React.useMemo(() => {\n        if (renameGroup === undefined || canvasRef.current === null) return null;\n        const { bounds, group } = renameGroup;\n        const canvasBounds = canvasRef.current.getBoundingClientRect();\n        return (\n            <GroupRename\n                bounds={bounds}\n                group={group}\n                canvasBounds={canvasBounds}\n                onClose={() => setRenameGroup(undefined)}\n                onFinish={newVal => {\n                    setRenameGroup(undefined);\n                    onGroupHeaderRenamed?.(group, newVal);\n                }}\n            />\n        );\n    }, [onGroupHeaderRenamed, renameGroup]);\n\n    const mangledFreezeColumns = Math.min(mangledCols.length, freezeColumns + (hasRowMarkers ? 1 : 0));\n\n    React.useImperativeHandle(\n        forwardedRef,\n        () => ({\n            appendRow: (col: number, openOverlay?: boolean) => appendRow(col + rowMarkerOffset, openOverlay),\n            updateCells: damageList => {\n                if (rowMarkerOffset !== 0) {\n                    damageList = damageList.map(x => ({ cell: [x.cell[0] + rowMarkerOffset, x.cell[1]] }));\n                }\n                return gridRef.current?.damage(damageList);\n            },\n            getBounds: (col, row) => {\n                if (canvasRef?.current === null || scrollRef?.current === null) {\n                    return undefined;\n                }\n\n                if (col === undefined && row === undefined) {\n                    // Return the bounds of the entire scroll area:\n                    const rect = canvasRef.current.getBoundingClientRect();\n                    const scale = rect.width / scrollRef.current.clientWidth;\n                    return {\n                        x: rect.x - scrollRef.current.scrollLeft * scale,\n                        y: rect.y - scrollRef.current.scrollTop * scale,\n                        width: scrollRef.current.scrollWidth * scale,\n                        height: scrollRef.current.scrollHeight * scale,\n                    };\n                }\n                return gridRef.current?.getBounds((col ?? 0) + rowMarkerOffset, row);\n            },\n            focus: () => gridRef.current?.focus(),\n            emit: async e => {\n                switch (e) {\n                    case \"delete\":\n                        onKeyDown({\n                            bounds: undefined,\n                            cancel: () => undefined,\n                            stopPropagation: () => undefined,\n                            preventDefault: () => undefined,\n                            ctrlKey: false,\n                            key: \"Delete\",\n                            keyCode: 46,\n                            metaKey: false,\n                            shiftKey: false,\n                            altKey: false,\n                            rawEvent: undefined,\n                            location: undefined,\n                        });\n                        break;\n                    case \"fill-right\":\n                        onKeyDown({\n                            bounds: undefined,\n                            cancel: () => undefined,\n                            stopPropagation: () => undefined,\n                            preventDefault: () => undefined,\n                            ctrlKey: true,\n                            key: \"r\",\n                            keyCode: 82,\n                            metaKey: false,\n                            shiftKey: false,\n                            altKey: false,\n                            rawEvent: undefined,\n                            location: undefined,\n                        });\n                        break;\n                    case \"fill-down\":\n                        onKeyDown({\n                            bounds: undefined,\n                            cancel: () => undefined,\n                            stopPropagation: () => undefined,\n                            preventDefault: () => undefined,\n                            ctrlKey: true,\n                            key: \"d\",\n                            keyCode: 68,\n                            metaKey: false,\n                            shiftKey: false,\n                            altKey: false,\n                            rawEvent: undefined,\n                            location: undefined,\n                        });\n                        break;\n                    case \"copy\":\n                        await onCopy(undefined, true);\n                        break;\n                    case \"paste\":\n                        await onPasteInternal();\n                        break;\n                }\n            },\n            scrollTo,\n            remeasureColumns: cols => {\n                for (const col of cols) {\n                    void normalSizeColumn(col + rowMarkerOffset);\n                }\n            },\n        }),\n        [appendRow, normalSizeColumn, onCopy, onKeyDown, onPasteInternal, rowMarkerOffset, scrollTo]\n    );\n\n    const [selCol, selRow] = currentCell ?? [];\n    const onCellFocused = React.useCallback(\n        (cell: Item) => {\n            const [col, row] = cell;\n\n            if (row === -1) {\n                if (columnSelect !== \"none\") {\n                    setSelectedColumns(CompactSelection.fromSingleSelection(col), undefined, false);\n                    focus();\n                }\n                return;\n            }\n\n            if (selCol === col && selRow === row) return;\n            setCurrent(\n                {\n                    cell,\n                    range: { x: col, y: row, width: 1, height: 1 },\n                },\n                true,\n                false,\n                \"keyboard-nav\"\n            );\n            scrollTo(col, row);\n        },\n        [columnSelect, focus, scrollTo, selCol, selRow, setCurrent, setSelectedColumns]\n    );\n\n    const [isFocused, setIsFocused] = React.useState(false);\n    const setIsFocusedDebounced = React.useRef(\n        debounce((val: boolean) => {\n            setIsFocused(val);\n        }, 5)\n    );\n\n    const onCanvasFocused = React.useCallback(() => {\n        setIsFocusedDebounced.current(true);\n\n        // check for mouse state, don't do anything if the user is clicked to focus.\n        if (\n            gridSelection.current === undefined &&\n            gridSelection.columns.length === 0 &&\n            gridSelection.rows.length === 0 &&\n            mouseState === undefined\n        ) {\n            setCurrent(\n                {\n                    cell: [rowMarkerOffset, cellYOffset],\n                    range: {\n                        x: rowMarkerOffset,\n                        y: cellYOffset,\n                        width: 1,\n                        height: 1,\n                    },\n                },\n                true,\n                false,\n                \"keyboard-select\"\n            );\n        }\n    }, [cellYOffset, gridSelection, mouseState, rowMarkerOffset, setCurrent]);\n\n    const onFocusOut = React.useCallback(() => {\n        setIsFocusedDebounced.current(false);\n    }, []);\n\n    const [idealWidth, idealHeight] = React.useMemo(() => {\n        let h: number;\n        const scrollbarWidth = experimental?.scrollbarWidthOverride ?? getScrollBarWidth();\n        const rowsCountWithTrailingRow = rows + (showTrailingBlankRow ? 1 : 0);\n        if (typeof rowHeight === \"number\") {\n            h = totalHeaderHeight + rowsCountWithTrailingRow * rowHeight;\n        } else {\n            let avg = 0;\n            const toAverage = Math.min(rowsCountWithTrailingRow, 10);\n            for (let i = 0; i < toAverage; i++) {\n                avg += rowHeight(i);\n            }\n            avg = Math.floor(avg / toAverage);\n\n            h = totalHeaderHeight + rowsCountWithTrailingRow * avg;\n        }\n        h += scrollbarWidth;\n\n        const w = mangledCols.reduce((acc, x) => x.width + acc, 0) + scrollbarWidth;\n\n        // We need to set a reasonable cap here as some browsers will just ignore huge values\n        // rather than treat them as huge values.\n        return [`${Math.min(100_000, w)}px`, `${Math.min(100_000, h)}px`];\n    }, [mangledCols, experimental?.scrollbarWidthOverride, rowHeight, rows, showTrailingBlankRow, totalHeaderHeight]);\n\n    return (\n        <ThemeContext.Provider value={mergedTheme}>\n            <DataEditorContainer\n                style={makeCSSStyle(mergedTheme)}\n                className={className}\n                inWidth={width ?? idealWidth}\n                inHeight={height ?? idealHeight}>\n                <DataGridSearch\n                    fillHandle={fillHandle}\n                    drawFocusRing={drawFocusRing}\n                    experimental={experimental}\n                    fixedShadowX={fixedShadowX}\n                    fixedShadowY={fixedShadowY}\n                    getRowThemeOverride={getRowThemeOverride}\n                    headerIcons={headerIcons}\n                    imageWindowLoader={imageWindowLoader}\n                    initialSize={initialSize}\n                    isDraggable={isDraggable}\n                    onDragLeave={onDragLeave}\n                    onRowMoved={onRowMoved}\n                    overscrollX={overscrollX}\n                    overscrollY={overscrollY}\n                    preventDiagonalScrolling={preventDiagonalScrolling}\n                    rightElement={rightElement}\n                    rightElementProps={rightElementProps}\n                    smoothScrollX={smoothScrollX}\n                    smoothScrollY={smoothScrollY}\n                    className={className}\n                    enableGroups={enableGroups}\n                    onCanvasFocused={onCanvasFocused}\n                    onCanvasBlur={onFocusOut}\n                    canvasRef={canvasRef}\n                    onContextMenu={onContextMenu}\n                    theme={mergedTheme}\n                    cellXOffset={cellXOffset}\n                    cellYOffset={cellYOffset}\n                    accessibilityHeight={visibleRegion.height}\n                    onDragEnd={onDragEnd}\n                    columns={mangledCols}\n                    nonGrowWidth={nonGrowWidth}\n                    drawHeader={drawHeader}\n                    onColumnProposeMove={onColumnProposeMove}\n                    drawCell={drawCell}\n                    disabledRows={disabledRows}\n                    freezeColumns={mangledFreezeColumns}\n                    lockColumns={rowMarkerOffset}\n                    firstColAccessible={rowMarkerOffset === 0}\n                    getCellContent={getMangledCellContent}\n                    minColumnWidth={minColumnWidth}\n                    maxColumnWidth={maxColumnWidth}\n                    searchInputRef={searchInputRef}\n                    showSearch={showSearch}\n                    onSearchClose={onSearchClose}\n                    highlightRegions={highlightRegions}\n                    getCellsForSelection={getCellsForSelection}\n                    getGroupDetails={mangledGetGroupDetails}\n                    headerHeight={headerHeight}\n                    isFocused={isFocused}\n                    groupHeaderHeight={enableGroups ? groupHeaderHeight : 0}\n                    freezeTrailingRows={\n                        freezeTrailingRows + (showTrailingBlankRow && trailingRowOptions?.sticky === true ? 1 : 0)\n                    }\n                    hasAppendRow={showTrailingBlankRow}\n                    onColumnResize={onColumnResize}\n                    onColumnResizeEnd={onColumnResizeEnd}\n                    onColumnResizeStart={onColumnResizeStart}\n                    onCellFocused={onCellFocused}\n                    onColumnMoved={onColumnMovedImpl}\n                    onDragStart={onDragStartImpl}\n                    onHeaderMenuClick={onHeaderMenuClickInner}\n                    onItemHovered={onItemHoveredImpl}\n                    isFilling={mouseState?.fillHandle === true}\n                    onMouseMove={onMouseMoveImpl}\n                    onKeyDown={onKeyDown}\n                    onKeyUp={onKeyUpIn}\n                    onMouseDown={onMouseDown}\n                    onMouseUp={onMouseUp}\n                    onDragOverCell={onDragOverCell}\n                    onDrop={onDrop}\n                    onSearchResultsChanged={onSearchResultsChanged}\n                    onVisibleRegionChanged={onVisibleRegionChangedImpl}\n                    clientSize={clientSize}\n                    rowHeight={rowHeight}\n                    searchResults={searchResults}\n                    searchValue={searchValue}\n                    onSearchValueChange={onSearchValueChange}\n                    rows={mangledRows}\n                    scrollRef={scrollRef}\n                    selection={gridSelection}\n                    translateX={visibleRegion.tx}\n                    translateY={visibleRegion.ty}\n                    verticalBorder={mangledVerticalBorder}\n                    gridRef={gridRef}\n                    getCellRenderer={getCellRenderer}\n                />\n                {renameGroupNode}\n                {overlay !== undefined && (\n                    <React.Suspense fallback={null}>\n                        <DataGridOverlayEditor\n                            {...overlay}\n                            validateCell={validateCell}\n                            id={overlayID}\n                            getCellRenderer={getCellRenderer}\n                            className={experimental?.isSubGrid === true ? \"click-outside-ignore\" : undefined}\n                            provideEditor={provideEditor}\n                            imageEditorOverride={imageEditorOverride}\n                            onFinishEditing={onFinishEditing}\n                            markdownDivCreateNode={markdownDivCreateNode}\n                            isOutsideClick={isOutsideClick}\n                        />\n                    </React.Suspense>\n                )}\n            </DataEditorContainer>\n        </ThemeContext.Provider>\n    );\n};\n\n/**\n * The primary component of Glide Data Grid.\n * @category DataEditor\n * @param {DataEditorProps} props\n */\nexport const DataEditor = React.forwardRef(DataEditorImpl);\n","import type { SpriteProps } from \"../../common/utils.js\";\n\nconst iconHead = `<svg width=\"20\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">`;\nconst headerRowID = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n\n    return `\n    ${iconHead}<rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/><path d=\"M15.75 4h-1.5a.25.25 0 0 0-.177.074L9.308 8.838a3.75 3.75 0 1 0 1.854 1.854l1.155-1.157.967.322a.5.5 0 0 0 .65-.55l-.18-1.208.363-.363.727.331a.5.5 0 0 0 .69-.59l-.254-.904.647-.647A.25.25 0 0 0 16 5.75v-1.5a.25.25 0 0 0-.25-.25zM7.5 13.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0z\" fill=\"${fg}\"/></svg>`;\n};\n\nconst headerCode = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}<rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"4\" fill=\"${bg}\"/><path d=\"m12.223 13.314 3.052-2.826a.65.65 0 0 0 0-.984l-3.052-2.822c-.27-.25-.634-.242-.865.022-.232.263-.206.636.056.882l2.601 2.41-2.601 2.41c-.262.245-.288.619-.056.882.231.263.595.277.865.026Zm-4.444.005c.266.25.634.241.866-.027.231-.263.206-.636-.06-.882L5.983 10l2.602-2.405c.266-.25.291-.62.06-.887-.232-.263-.596-.272-.866-.022L4.723 9.51a.653.653 0 0 0 0 .983l3.056 2.827Z\" fill=\"${fg}\"/></svg>`;\n};\n\nconst headerNumber = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M6.52 12.78H5.51V8.74l-1.33.47v-.87l2.29-.83h.05v5.27zm5.2 0H8.15v-.69l1.7-1.83a6.38 6.38 0 0 0 .34-.4c.09-.11.16-.22.22-.32s.1-.19.12-.27a.9.9 0 0 0 0-.56.63.63 0 0 0-.15-.23.58.58 0 0 0-.22-.15.75.75 0 0 0-.29-.05c-.27 0-.48.08-.62.23a.95.95 0 0 0-.2.65H8.03c0-.24.04-.46.13-.67a1.67 1.67 0 0 1 .97-.91c.23-.1.49-.14.77-.14.26 0 .5.04.7.11.21.08.38.18.52.32.14.13.25.3.32.48a1.74 1.74 0 0 1 .03 1.13 2.05 2.05 0 0 1-.24.47 4.16 4.16 0 0 1-.35.47l-.47.5-1 1.05h2.32v.8zm1.8-3.08h.55c.28 0 .48-.06.61-.2a.76.76 0 0 0 .2-.55.8.8 0 0 0-.05-.28.56.56 0 0 0-.13-.22.6.6 0 0 0-.23-.15.93.93 0 0 0-.32-.05.92.92 0 0 0-.29.05.72.72 0 0 0-.23.12.57.57 0 0 0-.21.46H12.4a1.3 1.3 0 0 1 .5-1.04c.15-.13.33-.23.54-.3a2.48 2.48 0 0 1 1.4 0c.2.06.4.15.55.28.15.13.27.28.36.47.08.19.13.4.13.65a1.15 1.15 0 0 1-.2.65 1.36 1.36 0 0 1-.58.49c.15.05.28.12.38.2a1.14 1.14 0 0 1 .43.62c.03.13.05.26.05.4 0 .25-.05.47-.14.66a1.42 1.42 0 0 1-.4.49c-.16.13-.35.23-.58.3a2.51 2.51 0 0 1-.73.1c-.22 0-.44-.03-.65-.09a1.8 1.8 0 0 1-.57-.28 1.43 1.43 0 0 1-.4-.47 1.41 1.41 0 0 1-.15-.66h1a.66.66 0 0 0 .22.5.87.87 0 0 0 .58.2c.25 0 .45-.07.6-.2a.71.71 0 0 0 .21-.56.97.97 0 0 0-.06-.36.61.61 0 0 0-.18-.25.74.74 0 0 0-.28-.15 1.33 1.33 0 0 0-.37-.04h-.55V9.7z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerString = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path d=\"M8.182 12.4h3.636l.655 1.6H14l-3.454-8H9.455L6 14h1.527l.655-1.6zM10 7.44l1.36 3.651H8.64L10 7.441z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerBoolean = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n    <path\n        d=\"M16.2222 2H3.77778C2.8 2 2 2.8 2 3.77778V16.2222C2 17.2 2.8 18 3.77778 18H16.2222C17.2 18 17.9911 17.2 17.9911 16.2222L18 3.77778C18 2.8 17.2 2 16.2222 2Z\"\n        fill=\"${bg}\"\n    />\n    <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M7.66667 6.66669C5.73368 6.66669 4.16667 8.15907 4.16667 10C4.16667 11.841 5.73368 13.3334 7.66667 13.3334H12.3333C14.2663 13.3334 15.8333 11.841 15.8333 10C15.8333 8.15907 14.2663 6.66669 12.3333 6.66669H7.66667ZM12.5 12.5C13.8807 12.5 15 11.3807 15 10C15 8.61931 13.8807 7.50002 12.5 7.50002C11.1193 7.50002 10 8.61931 10 10C10 11.3807 11.1193 12.5 12.5 12.5Z\"\n        fill=\"${fg}\"\n    />\n</svg>`;\n};\n\nconst headerUri = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n<path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.29 4.947a3.368 3.368 0 014.723.04 3.375 3.375 0 01.041 4.729l-.009.009-1.596 1.597a3.367 3.367 0 01-5.081-.364.71.71 0 011.136-.85 1.95 1.95 0 002.942.21l1.591-1.593a1.954 1.954 0 00-.027-2.733 1.95 1.95 0 00-2.732-.027l-.91.907a.709.709 0 11-1.001-1.007l.915-.911.007-.007z\" fill=\"${fg}\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.55 8.678a3.368 3.368 0 015.082.364.71.71 0 01-1.136.85 1.95 1.95 0 00-2.942-.21l-1.591 1.593a1.954 1.954 0 00.027 2.733 1.95 1.95 0 002.73.028l.906-.906a.709.709 0 111.003 1.004l-.91.91-.008.01a3.368 3.368 0 01-4.724-.042 3.375 3.375 0 01-.041-4.728l.009-.009L6.55 8.678z\" fill=\"${fg}\"/>\n</svg>\n  `;\n};\n\nconst renameIcon = (props: SpriteProps) => {\n    const bg = props.bgColor;\n    return `${iconHead}\n    <path stroke=\"${bg}\" stroke-width=\"2\" d=\"M12 3v14\"/>\n    <path stroke=\"${bg}\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M10 4h4m-4 12h4\"/>\n    <path d=\"M11 14h4a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3h-4v2h4a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-4v2ZM9.5 8H5a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h4.5v2H5a3 3 0 0 1-3-3V9a3 3 0 0 1 3-3h4.5v2Z\" fill=\"${bg}\"/>\n  </svg>\n`;\n};\n\nconst headerAudioUri = headerUri;\n\nconst headerVideoUri = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7 13.138a.5.5 0 00.748.434l5.492-3.138a.5.5 0 000-.868L7.748 6.427A.5.5 0 007 6.862v6.276z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerEmoji = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M10 5a5 5 0 1 0 0 10 5 5 0 0 0 0-10zm0 9.17A4.17 4.17 0 0 1 5.83 10 4.17 4.17 0 0 1 10 5.83 4.17 4.17 0 0 1 14.17 10 4.17 4.17 0 0 1 10 14.17z\" fill=\"${fg}\"/>\n    <path d=\"M8.33 8.21a.83.83 0 1 0-.03 1.67.83.83 0 0 0 .03-1.67zm3.34 0a.83.83 0 1 0-.04 1.67.83.83 0 0 0 .04-1.67z\" fill=\"${fg}\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.53 13.9a2.82 2.82 0 0 1-5.06 0l.77-.38a1.97 1.97 0 0 0 3.52 0l.77.39z\" fill=\"${fg}\"/>\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M10 4a6 6 0 1 0 0 12 6 6 0 0 0 0-12zm0 11a5 5 0 1 1 .01-10.01A5 5 0 0 1 10 15z\" fill=\"${fg}\"/>\n    <path d=\"M8 7.86a1 1 0 1 0-.04 2 1 1 0 0 0 .04-2zm4 0a1 1 0 1 0-.04 2 1 1 0 0 0 .04-2z\" fill=\"${fg}\"/>\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.53 11.9a2.82 2.82 0 0 1-5.06 0l.77-.38a1.97 1.97 0 0 0 3.52 0l.77.39z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerImage = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path opacity=\".5\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.499 10.801a.5.5 0 01.835 0l2.698 4.098a.5.5 0 01-.418.775H10.22a.5.5 0 01-.417-.775l2.697-4.098z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.07 8.934a.5.5 0 01.824 0l4.08 5.958a.5.5 0 01-.412.782h-8.16a.5.5 0 01-.413-.782l4.08-5.958zM13.75 8.333a2.083 2.083 0 100-4.166 2.083 2.083 0 000 4.166z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerPhone = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path fill=\"${fg}\" d=\"M3 3h14v14H3z\"/>\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2zm-7.24 9.78h1.23c.15 0 .27.06.36.18l.98 1.28a.43.43 0 0 1-.05.58l-1.2 1.21a.45.45 0 0 1-.6.04A6.72 6.72 0 0 1 7.33 10c0-.61.1-1.2.25-1.78a6.68 6.68 0 0 1 2.12-3.3.44.44 0 0 1 .6.04l1.2 1.2c.16.17.18.42.05.59l-.98 1.29a.43.43 0 0 1-.36.17H8.98A5.38 5.38 0 0 0 8.67 10c0 .62.11 1.23.3 1.79z\" fill=\"${bg}\"/>\n  </svg>`;\n};\n\nconst headerMarkdown = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"m13.49 13.15-2.32-3.27h1.4V7h1.86v2.88h1.4l-2.34 3.27zM11 13H9v-3l-1.5 1.92L6 10v3H4V7h2l1.5 2L9 7h2v6z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerDate = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path d=\"M14.8 4.182h-.6V3H13v1.182H7V3H5.8v1.182h-.6c-.66 0-1.2.532-1.2 1.182v9.454C4 15.468 4.54 16 5.2 16h9.6c.66 0 1.2-.532 1.2-1.182V5.364c0-.65-.54-1.182-1.2-1.182zm0 10.636H5.2V7.136h9.6v7.682z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerTime = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M10 4a6 6 0 0 0-6 6 6 6 0 0 0 6 6 6 6 0 0 0 6-6 6 6 0 0 0-6-6zm0 10.8A4.8 4.8 0 0 1 5.2 10a4.8 4.8 0 1 1 4.8 4.8z\" fill=\"${fg}\"/>\n    <path d=\"M10 7H9v3.93L12.5 13l.5-.8-3-1.76V7z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerEmail = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 8.643a1.357 1.357 0 100 2.714 1.357 1.357 0 000-2.714zM7.357 10a2.643 2.643 0 115.286 0 2.643 2.643 0 01-5.286 0z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.589 4.898A5.643 5.643 0 0115.643 10v.5a2.143 2.143 0 01-4.286 0V8a.643.643 0 011.286 0v2.5a.857.857 0 001.714 0V10a4.357 4.357 0 10-1.708 3.46.643.643 0 01.782 1.02 5.643 5.643 0 11-5.842-9.582z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerReference = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"8\" width=\"10\" height=\"8\" rx=\"2\" fill=\"${bg}\"/>\n    <rect x=\"8\" y=\"4\" width=\"10\" height=\"8\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M10.68 7.73V6l2.97 3.02-2.97 3.02v-1.77c-2.13 0-3.62.7-4.68 2.2.43-2.15 1.7-4.31 4.68-4.74z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerIfThenElse = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path fill=\"${fg}\" d=\"M4 3h12v14H4z\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.6 2A1.6 1.6 0 002 3.6v12.8A1.6 1.6 0 003.6 18h12.8a1.6 1.6 0 001.6-1.6V3.6A1.6 1.6 0 0016.4 2H3.6zm11.3 10.8a.7.7 0 01.7.7v1.4a.7.7 0 01-.7.7h-1.4a.7.7 0 01-.7-.7v-1.4a.7.7 0 01.6-.693.117.117 0 00.1-.115V10.35a.117.117 0 00-.117-.116h-2.8a.117.117 0 00-.117.116v2.333c0 .064.053.117.117.117h.117a.7.7 0 01.7.7v1.4a.7.7 0 01-.7.7H9.3a.7.7 0 01-.7-.7v-1.4a.7.7 0 01.7-.7h.117a.117.117 0 00.117-.117V10.35a.117.117 0 00-.117-.117h-2.8a.117.117 0 00-.117.117v2.342c0 .058.042.106.1.115a.7.7 0 01.6.693v1.4a.7.7 0 01-.7.7H5.1a.7.7 0 01-.7-.7v-1.4a.7.7 0 01.7-.7h.35a.116.116 0 00.116-.117v-2.45c0-.515.418-.933.934-.933h2.917a.117.117 0 00.117-.117V6.85a.117.117 0 00-.117-.116h-2.45a.7.7 0 01-.7-.7V5.1a.7.7 0 01.7-.7h6.067a.7.7 0 01.7.7v.934a.7.7 0 01-.7.7h-2.45a.117.117 0 00-.118.116v2.333c0 .064.053.117.117.117H13.5c.516 0 .934.418.934.934v2.45c0 .063.052.116.116.116h.35z\" fill=\"${bg}\"/>\n</svg>`;\n};\n\nconst headerSingleValue = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M9.98 13.33c.45 0 .74-.3.73-.75l-.01-.1-.16-1.67 1.45 1.05a.81.81 0 0 0 .5.18c.37 0 .72-.32.72-.76 0-.3-.17-.54-.49-.68l-1.63-.77 1.63-.77c.32-.14.49-.37.49-.67 0-.45-.34-.76-.71-.76a.81.81 0 0 0-.5.18l-1.47 1.03.16-1.74.01-.08c.01-.46-.27-.76-.72-.76-.46 0-.76.32-.75.76l.01.08.16 1.74-1.47-1.03a.77.77 0 0 0-.5-.18.74.74 0 0 0-.72.76c0 .3.17.53.49.67l1.63.77-1.62.77c-.32.14-.5.37-.5.68 0 .44.35.75.72.75a.78.78 0 0 0 .5-.17L9.4 10.8l-.16 1.68v.09c-.02.44.28.75.74.75z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerLookup = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M8 5.83H5.83a.83.83 0 0 0 0 1.67h1.69A4.55 4.55 0 0 1 8 5.83zm-.33 3.34H5.83a.83.83 0 0 0 0 1.66h2.72a4.57 4.57 0 0 1-.88-1.66zM5.83 12.5a.83.83 0 0 0 0 1.67h7.5a.83.83 0 1 0 0-1.67h-7.5zm8.8-2.9a3.02 3.02 0 0 0 .46-1.6c0-1.66-1.32-3-2.94-3C10.52 5 9.2 6.34 9.2 8s1.31 3 2.93 3c.58 0 1.11-.17 1.56-.47l2.04 2.08.93-.94-2.04-2.08zm-2.48.07c-.9 0-1.63-.75-1.63-1.67s.73-1.67 1.63-1.67c.9 0 1.63.75 1.63 1.67s-.73 1.67-1.63 1.67z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerTextTemplate = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path d=\"M7.676 4.726V3l2.976 3.021-2.976 3.022v-1.77c-2.125 0-3.613.69-4.676 2.201.425-2.158 1.7-4.316 4.676-4.748zM10.182 14.4h3.636l.655 1.6H16l-3.454-8h-1.091L8 16h1.527l.655-1.6zM12 9.44l1.36 3.65h-2.72L12 9.44z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerMath = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.167 5.417a.833.833 0 100 1.666h4.166a.833.833 0 100-1.666H4.167z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.083 4.167a.833.833 0 10-1.666 0v4.166a.833.833 0 101.666 0V4.167zM11.667 5.417a.833.833 0 100 1.666h4.166a.833.833 0 100-1.666h-4.166zM5.367 11.688a.833.833 0 00-1.179 1.179l2.947 2.946a.833.833 0 001.178-1.178l-2.946-2.947z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.313 12.867a.833.833 0 10-1.178-1.179l-2.947 2.947a.833.833 0 101.179 1.178l2.946-2.946z\" fill=\"${fg}\"/>\n  <path d=\"M10.833 12.5c0-.46.373-.833.834-.833h4.166a.833.833 0 110 1.666h-4.166a.833.833 0 01-.834-.833zM10.833 15c0-.46.373-.833.834-.833h4.166a.833.833 0 110 1.666h-4.166a.833.833 0 01-.834-.833z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerRollup = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <path d=\"M16.22 2H3.78C2.8 2 2 2.8 2 3.78v12.44C2 17.2 2.8 18 3.78 18h12.44c.98 0 1.77-.8 1.77-1.78L18 3.78C18 2.8 17.2 2 16.22 2z\" fill=\"${bg}\"/>\n    <path d=\"M10 8.84a1.16 1.16 0 1 0 0 2.32 1.16 1.16 0 0 0 0-2.32zm3.02 3.61a3.92 3.92 0 0 0 .78-3.28.49.49 0 1 0-.95.2c.19.87-.02 1.78-.58 2.47a2.92 2.92 0 1 1-4.13-4.08 2.94 2.94 0 0 1 2.43-.62.49.49 0 1 0 .17-.96 3.89 3.89 0 1 0 2.28 6.27zM10 4.17a5.84 5.84 0 0 0-5.44 7.93.49.49 0 1 0 .9-.35 4.86 4.86 0 1 1 2.5 2.67.49.49 0 1 0-.4.88c.76.35 1.6.54 2.44.53a5.83 5.83 0 0 0 0-11.66zm3.02 3.5a.7.7 0 1 0-1.4 0 .7.7 0 0 0 1.4 0zm-6.97 5.35a.7.7 0 1 1 0 1.4.7.7 0 0 1 0-1.4z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerJoinStrings = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path d=\"M12.4 13.565c1.865-.545 3.645-2.083 3.645-4.396 0-1.514-.787-2.604-2.071-2.604C12.69 6.565 12 7.63 12 8.939c1.114.072 1.865.726 1.865 1.683 0 .933-.8 1.647-1.84 2.023l.375.92zM4 5h6v2H4zM4 9h5v2H4zM4 13h4v2H4z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerSplitString = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    ${iconHead}\n    <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n    <path d=\"M12.4 13.56c1.86-.54 3.65-2.08 3.65-4.4 0-1.5-.8-2.6-2.08-2.6S12 7.64 12 8.95c1.11.07 1.86.73 1.86 1.68 0 .94-.8 1.65-1.83 2.03l.37.91zM4 5h6v2H4zm0 4h5v2H4zm0 4h4v2H4z\" fill=\"${fg}\"/>\n  </svg>`;\n};\n\nconst headerGeoDistance = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <path d=\"M16.222 2H3.778C2.8 2 2 2.8 2 3.778v12.444C2 17.2 2.8 18 3.778 18h12.444c.978 0 1.77-.8 1.77-1.778L18 3.778C18 2.8 17.2 2 16.222 2z\" fill=\"${bg}\"/>\n  <path d=\"M10 7a1 1 0 100-2v2zm0 6a1 1 0 100 2v-2zm0-8H7v2h3V5zm-3 6h5V9H7v2zm5 2h-2v2h2v-2zm1-1a1 1 0 01-1 1v2a3 3 0 003-3h-2zm-1-1a1 1 0 011 1h2a3 3 0 00-3-3v2zM4 8a3 3 0 003 3V9a1 1 0 01-1-1H4zm3-3a3 3 0 00-3 3h2a1 1 0 011-1V5z\" fill=\"${fg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.856 12.014a.5.5 0 00-.712.702L5.409 14l-1.265 1.284a.5.5 0 00.712.702l1.255-1.274 1.255 1.274a.5.5 0 00.712-.702L6.813 14l1.265-1.284a.5.5 0 00-.712-.702L6.11 13.288l-1.255-1.274zM12.856 4.014a.5.5 0 00-.712.702L13.409 6l-1.265 1.284a.5.5 0 10.712.702l1.255-1.274 1.255 1.274a.5.5 0 10.712-.702L14.813 6l1.265-1.284a.5.5 0 00-.712-.702L14.11 5.288l-1.255-1.274z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst headerArray = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `${iconHead}\n  <rect x=\"2\" y=\"2\" width=\"16\" height=\"16\" rx=\"2\" fill=\"${bg}\"/>\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.25 7.25a.75.75 0 000-1.5h-6.5a.75.75 0 100 1.5h6.5zM15 10a.75.75 0 01-.75.75h-6.5a.75.75 0 010-1.5h6.5A.75.75 0 0115 10zm-.75 4.25a.75.75 0 000-1.5h-6.5a.75.75 0 000 1.5h6.5zm-8.987-7a.75.75 0 100-1.5.75.75 0 000 1.5zm.75 2.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm-.75 4.25a.75.75 0 100-1.5.75.75 0 000 1.5z\" fill=\"${fg}\"/>\n</svg>`;\n};\n\nconst rowOwnerOverlay = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    <svg width=\"18\" height=\"18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2 15v1h14v-2.5c0-.87-.44-1.55-.98-2.04a6.19 6.19 0 0 0-1.9-1.14 12.1 12.1 0 0 0-2.48-.67A4 4 0 1 0 5 6a4 4 0 0 0 2.36 3.65c-.82.13-1.7.36-2.48.67-.69.28-1.37.65-1.9 1.13A2.8 2.8 0 0 0 2 13.5V15z\" fill=\"${bg}\" stroke=\"${fg}\" stroke-width=\"2\"/>\n  </svg>`;\n};\n\nconst protectedColumnOverlay = (props: SpriteProps) => {\n    const fg = props.fgColor;\n    const bg = props.bgColor;\n    return `\n    <svg width=\"18\" height=\"18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12.43 6.04v-.18a3.86 3.86 0 0 0-7.72 0v.18A2.15 2.15 0 0 0 3 8.14v5.72C3 15.04 3.96 16 5.14 16H12c1.18 0 2.14-.96 2.14-2.14V8.14c0-1.03-.73-1.9-1.71-2.1zM7.86 6v-.14a.71.71 0 1 1 1.43 0V6H7.86z\" fill=\"${bg}\" stroke=\"${fg}\" stroke-width=\"2\"/>\n  </svg>\n`;\n};\n\nexport const sprites = {\n    headerRowID,\n    headerNumber,\n    headerCode,\n    headerString,\n    headerBoolean,\n    headerAudioUri,\n    headerVideoUri,\n    headerEmoji,\n    headerImage,\n    headerUri,\n    headerPhone,\n    headerMarkdown,\n    headerDate,\n    headerTime,\n    headerEmail,\n    headerReference,\n    headerIfThenElse,\n    headerSingleValue,\n    headerLookup,\n    headerTextTemplate,\n    headerMath,\n    headerRollup,\n    headerJoinStrings,\n    headerSplitString,\n    headerGeoDistance,\n    headerArray,\n    rowOwnerOverlay,\n    protectedColumnOverlay,\n    renameIcon,\n};\n\nexport type HeaderIconMap = Readonly<typeof sprites>;\n","import * as React from \"react\";\nimport { DataEditor, type DataEditorProps, type DataEditorRef } from \"./data-editor/data-editor.js\";\nimport { AllCellRenderers } from \"./cells/index.js\";\nimport { sprites } from \"./internal/data-grid/sprites.js\";\nimport ImageWindowLoaderImpl from \"./common/image-window-loader.js\";\nimport type { ImageWindowLoader } from \"./internal/data-grid/image-window-loader-interface.js\";\n\nexport interface DataEditorAllProps extends Omit<DataEditorProps, \"renderers\" | \"imageWindowLoader\"> {\n    imageWindowLoader?: ImageWindowLoader;\n}\n\nconst DataEditorAllImpl: React.ForwardRefRenderFunction<DataEditorRef, DataEditorAllProps> = (p, ref) => {\n    const allSprites = React.useMemo(() => {\n        return { ...sprites, ...p.headerIcons };\n    }, [p.headerIcons]);\n\n    const imageWindowLoader = React.useMemo(() => {\n        return p.imageWindowLoader ?? new ImageWindowLoaderImpl();\n    }, [p.imageWindowLoader]);\n\n    return (\n        <DataEditor\n            {...p}\n            renderers={AllCellRenderers}\n            headerIcons={allSprites}\n            ref={ref}\n            imageWindowLoader={imageWindowLoader}\n        />\n    );\n};\n\nexport const DataEditorAll = React.forwardRef(DataEditorAllImpl);\n","import React from \"react\";\nimport { browserIsOSX } from \"../common/browser-detect.js\";\nimport { useDeepMemo } from \"../common/utils.js\";\n\nexport type Keybind = boolean | string;\n\ninterface ForcedKeybinds {\n    copy: boolean;\n    cut: boolean;\n    paste: boolean;\n}\n\ninterface BackCompatKeybinds {\n    readonly pageUp: boolean;\n    readonly pageDown: boolean;\n    readonly first: boolean;\n    readonly last: boolean;\n}\n\nexport interface ConfigurableKeybinds {\n    readonly downFill: Keybind;\n    readonly rightFill: Keybind;\n    readonly clear: Keybind;\n    readonly closeOverlay: Keybind;\n    readonly acceptOverlayDown: Keybind;\n    readonly acceptOverlayUp: Keybind;\n    readonly acceptOverlayLeft: Keybind;\n    readonly acceptOverlayRight: Keybind;\n    readonly search: Keybind;\n    readonly delete: Keybind;\n    readonly activateCell: Keybind;\n    readonly scrollToSelectedCell: Keybind;\n\n    // Navigation Keybinds\n    readonly goToFirstColumn: Keybind;\n    readonly goToLastColumn: Keybind;\n    readonly goToFirstCell: Keybind;\n    readonly goToLastCell: Keybind;\n    readonly goToFirstRow: Keybind;\n    readonly goToLastRow: Keybind;\n    readonly goToNextPage: Keybind;\n    readonly goToPreviousPage: Keybind;\n\n    readonly goUpCell: Keybind;\n    readonly goDownCell: Keybind;\n    readonly goLeftCell: Keybind;\n    readonly goRightCell: Keybind;\n\n    readonly goUpCellRetainSelection: Keybind;\n    readonly goDownCellRetainSelection: Keybind;\n    readonly goLeftCellRetainSelection: Keybind;\n    readonly goRightCellRetainSelection: Keybind;\n\n    // Selection Keybinds\n    readonly selectToFirstColumn: Keybind;\n    readonly selectToLastColumn: Keybind;\n    readonly selectToFirstCell: Keybind;\n    readonly selectToLastCell: Keybind;\n    readonly selectToFirstRow: Keybind;\n    readonly selectToLastRow: Keybind;\n\n    readonly selectGrowUp: Keybind;\n    readonly selectGrowDown: Keybind;\n    readonly selectGrowLeft: Keybind;\n    readonly selectGrowRight: Keybind;\n\n    readonly selectAll: Keybind;\n    readonly selectRow: Keybind;\n    readonly selectColumn: Keybind;\n}\n\nexport type Keybinds = ConfigurableKeybinds & ForcedKeybinds & Partial<BackCompatKeybinds>;\n\nexport type RealizedKeybinds = Readonly<Record<keyof ConfigurableKeybinds, string>> & ForcedKeybinds;\n\nexport const keybindingDefaults: Keybinds = {\n    downFill: false,\n    rightFill: false,\n    clear: true,\n    closeOverlay: true,\n    acceptOverlayDown: true,\n    acceptOverlayUp: true,\n    acceptOverlayLeft: true,\n    acceptOverlayRight: true,\n    copy: true,\n    paste: true,\n    cut: true,\n    search: false,\n    delete: true,\n    activateCell: true,\n    scrollToSelectedCell: true,\n    goToFirstCell: true,\n    goToFirstColumn: true,\n    goToFirstRow: true,\n    goToLastCell: true,\n    goToLastColumn: true,\n    goToLastRow: true,\n    goToNextPage: true,\n    goToPreviousPage: true,\n    selectToFirstCell: true,\n    selectToFirstColumn: true,\n    selectToFirstRow: true,\n    selectToLastCell: true,\n    selectToLastColumn: true,\n    selectToLastRow: true,\n    selectAll: true,\n    selectRow: true,\n    selectColumn: true,\n    goUpCell: true,\n    goRightCell: true,\n    goDownCell: true,\n    goLeftCell: true,\n    goUpCellRetainSelection: true,\n    goRightCellRetainSelection: true,\n    goDownCellRetainSelection: true,\n    goLeftCellRetainSelection: true,\n    selectGrowUp: true,\n    selectGrowRight: true,\n    selectGrowDown: true,\n    selectGrowLeft: true,\n};\n\nfunction realizeKeybind(keybind: Keybind, defaultVal: string): string {\n    if (keybind === true) return defaultVal;\n    if (keybind === false) return \"\";\n    return keybind;\n}\n\nexport function realizeKeybinds(keybinds: Keybinds): RealizedKeybinds {\n    const isOSX = browserIsOSX.value;\n\n    return {\n        activateCell: realizeKeybind(keybinds.activateCell, \" |Enter|shift+Enter\"),\n        clear: realizeKeybind(keybinds.clear, \"any+Escape\"),\n        closeOverlay: realizeKeybind(keybinds.closeOverlay, \"any+Escape\"),\n        acceptOverlayDown: realizeKeybind(keybinds.acceptOverlayDown, \"Enter\"),\n        acceptOverlayUp: realizeKeybind(keybinds.acceptOverlayUp, \"shift+Enter\"),\n        acceptOverlayLeft: realizeKeybind(keybinds.acceptOverlayLeft, \"shift+Tab\"),\n        acceptOverlayRight: realizeKeybind(keybinds.acceptOverlayRight, \"Tab\"),\n        copy: keybinds.copy,\n        cut: keybinds.cut,\n        delete: realizeKeybind(keybinds.delete, isOSX ? \"Backspace|Delete\" : \"Delete\"),\n        downFill: realizeKeybind(keybinds.downFill, \"primary+_68\"),\n        scrollToSelectedCell: realizeKeybind(keybinds.scrollToSelectedCell, \"primary+Enter\"),\n        goDownCell: realizeKeybind(keybinds.goDownCell, \"ArrowDown\"),\n        goDownCellRetainSelection: realizeKeybind(keybinds.goDownCellRetainSelection, \"alt+ArrowDown\"),\n        goLeftCell: realizeKeybind(keybinds.goLeftCell, \"ArrowLeft|shift+Tab\"),\n        goLeftCellRetainSelection: realizeKeybind(keybinds.goLeftCellRetainSelection, \"alt+ArrowLeft\"),\n        goRightCell: realizeKeybind(keybinds.goRightCell, \"ArrowRight|Tab\"),\n        goRightCellRetainSelection: realizeKeybind(keybinds.goRightCellRetainSelection, \"alt+ArrowRight\"),\n        goUpCell: realizeKeybind(keybinds.goUpCell, \"ArrowUp\"),\n        goUpCellRetainSelection: realizeKeybind(keybinds.goUpCellRetainSelection, \"alt+ArrowUp\"),\n        goToFirstCell: realizeKeybind(keybinds.goToFirstCell, \"primary+Home\"),\n        goToFirstColumn: realizeKeybind(keybinds.goToFirstColumn, \"Home|primary+ArrowLeft\"),\n        goToFirstRow: realizeKeybind(keybinds.goToFirstRow, \"primary+ArrowUp\"),\n        goToLastCell: realizeKeybind(keybinds.goToLastCell, \"primary+End\"),\n        goToLastColumn: realizeKeybind(keybinds.goToLastColumn, \"End|primary+ArrowRight\"),\n        goToLastRow: realizeKeybind(keybinds.goToLastRow, \"primary+ArrowDown\"),\n        goToNextPage: realizeKeybind(keybinds.goToNextPage, \"PageDown\"),\n        goToPreviousPage: realizeKeybind(keybinds.goToPreviousPage, \"PageUp\"),\n        paste: keybinds.paste,\n        rightFill: realizeKeybind(keybinds.rightFill, \"primary+_82\"),\n        search: realizeKeybind(keybinds.search, \"primary+f\"),\n        selectAll: realizeKeybind(keybinds.selectAll, \"primary+a\"),\n        selectColumn: realizeKeybind(keybinds.selectColumn, \"ctrl+ \"),\n        selectGrowDown: realizeKeybind(keybinds.selectGrowDown, \"shift+ArrowDown\"),\n        selectGrowLeft: realizeKeybind(keybinds.selectGrowLeft, \"shift+ArrowLeft\"),\n        selectGrowRight: realizeKeybind(keybinds.selectGrowRight, \"shift+ArrowRight\"),\n        selectGrowUp: realizeKeybind(keybinds.selectGrowUp, \"shift+ArrowUp\"),\n        selectRow: realizeKeybind(keybinds.selectRow, \"shift+ \"),\n        selectToFirstCell: realizeKeybind(keybinds.selectToFirstCell, \"primary+shift+Home\"),\n        selectToFirstColumn: realizeKeybind(keybinds.selectToFirstColumn, \"primary+shift+ArrowLeft\"),\n        selectToFirstRow: realizeKeybind(keybinds.selectToFirstRow, \"primary+shift+ArrowUp\"),\n        selectToLastCell: realizeKeybind(keybinds.selectToLastCell, \"primary+shift+End\"),\n        selectToLastColumn: realizeKeybind(keybinds.selectToLastColumn, \"primary+shift+ArrowRight\"),\n        selectToLastRow: realizeKeybind(keybinds.selectToLastRow, \"primary+shift+ArrowDown\"),\n    };\n}\n\nexport function useKeybindingsWithDefaults(keybindingsIn?: Partial<Keybinds>): RealizedKeybinds {\n    const keys = useDeepMemo(keybindingsIn);\n    return React.useMemo(() => {\n        if (keys === undefined) return realizeKeybinds(keybindingDefaults);\n        const withBackCompatApplied = {\n            ...keys,\n            goToNextPage: keys?.goToNextPage ?? keys?.pageDown ?? keybindingDefaults.goToNextPage,\n            goToPreviousPage: keys?.goToPreviousPage ?? keys?.pageUp ?? keybindingDefaults.goToPreviousPage,\n            goToFirstCell: keys?.goToFirstCell ?? keys?.first ?? keybindingDefaults.goToFirstCell,\n            goToLastCell: keys?.goToLastCell ?? keys?.last ?? keybindingDefaults.goToLastCell,\n            selectToFirstCell: keys?.selectToFirstCell ?? keys?.first ?? keybindingDefaults.selectToFirstCell,\n            selectToLastCell: keys?.selectToLastCell ?? keys?.last ?? keybindingDefaults.selectToLastCell,\n        };\n        return realizeKeybinds({\n            ...keybindingDefaults,\n            ...withBackCompatApplied,\n        });\n    }, [keys]);\n}\n","import * as React from \"react\";\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n    onClickOutside: () => void;\n    isOutsideClick?: (event: MouseEvent | TouchEvent) => boolean;\n}\n\nexport default class ClickOutsideContainer extends React.PureComponent<Props> {\n    private wrapperRef = React.createRef<HTMLDivElement>();\n\n    public componentDidMount() {\n        document.addEventListener(\"touchend\", this.clickOutside, true);\n        document.addEventListener(\"mousedown\", this.clickOutside, true);\n        document.addEventListener(\"contextmenu\", this.clickOutside, true);\n    }\n\n    public componentWillUnmount() {\n        document.removeEventListener(\"touchend\", this.clickOutside, true);\n        document.removeEventListener(\"mousedown\", this.clickOutside, true);\n        document.removeEventListener(\"contextmenu\", this.clickOutside, true);\n    }\n\n    private clickOutside = (event: MouseEvent | TouchEvent) => {\n        if (this.props.isOutsideClick && !this.props.isOutsideClick(event)) {\n            return;\n        }\n        if (this.wrapperRef.current !== null && !this.wrapperRef.current.contains(event.target as Node | null)) {\n            let node = event.target as Element | null;\n            while (node !== null) {\n                if (node.classList.contains(\"click-outside-ignore\")) {\n                    return;\n                }\n\n                node = node.parentElement;\n            }\n            this.props.onClickOutside();\n        }\n    };\n\n    public render(): React.ReactNode {\n        const { onClickOutside, isOutsideClick, ...rest } = this.props;\n        return (\n            <div {...rest} ref={this.wrapperRef}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".r1fzhvm4{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;border:none;outline:none;background-color:var(--gdg-bg-header-has-focus);border-radius:9px;padding:0 8px;box-shadow:0 0 0 1px var(--gdg-border-color);color:var(--gdg-text-group-header);min-height:var(--r1fzhvm4-0);font:var(--gdg-header-font-style) var(--gdg-font-family);}\\n.c181oggi{padding:0 8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:var(--gdg-bg-header);}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvZGF0YS1lZGl0b3IvZ3JvdXAtcmVuYW1lLnRzeCJdLCJuYW1lcyI6WyIucjFmemh2bTQiLCIuYzE4MW9nZ2kiXSwibWFwcGluZ3MiOiJBQUtvQkE7QUE2QkxDIiwiZmlsZSI6Ii9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvZGF0YS1lZGl0b3IvZ3JvdXAtcmVuYW1lLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAbGluYXJpYS9yZWFjdFwiO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBsaW5hcmlhL2NvcmVcIjtcbmltcG9ydCBDbGlja091dHNpZGVDb250YWluZXIgZnJvbSBcIi4uL2ludGVybmFsL2NsaWNrLW91dHNpZGUtY29udGFpbmVyL2NsaWNrLW91dHNpZGUtY29udGFpbmVyLmpzXCI7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgUmVuYW1lSW5wdXQgPSBzdHlsZWQuaW5wdXRgXG4gICAgZmxleC1ncm93OiAxO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdkZy1iZy1oZWFkZXItaGFzLWZvY3VzKTtcbiAgICBib3JkZXItcmFkaXVzOiA5cHg7XG4gICAgcGFkZGluZzogMCA4cHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHZhcigtLWdkZy1ib3JkZXItY29sb3IpO1xuICAgIGNvbG9yOiB2YXIoLS1nZGctdGV4dC1ncm91cC1oZWFkZXIpO1xuICAgIG1pbi1oZWlnaHQ6ICR7cCA9PiBNYXRoLm1heCgxNiwgcC50YXJnZXRIZWlnaHQgLSAxMCl9cHg7XG4gICAgZm9udDogdmFyKC0tZ2RnLWhlYWRlci1mb250LXN0eWxlKSB2YXIoLS1nZGctZm9udC1mYW1pbHkpO1xuYDtcbmV4cG9ydCBjb25zdCBHcm91cFJlbmFtZSA9IHAgPT4ge1xuICBjb25zdCB7XG4gICAgYm91bmRzLFxuICAgIGdyb3VwLFxuICAgIG9uQ2xvc2UsXG4gICAgY2FudmFzQm91bmRzLFxuICAgIG9uRmluaXNoXG4gIH0gPSBwO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKGdyb3VwKTtcbiAgcmV0dXJuIF9qc3goQ2xpY2tPdXRzaWRlQ29udGFpbmVyLCB7XG4gICAgc3R5bGU6IHtcbiAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICBsZWZ0OiBib3VuZHMueCAtIGNhbnZhc0JvdW5kcy5sZWZ0ICsgMSxcbiAgICAgIHRvcDogYm91bmRzLnkgLSBjYW52YXNCb3VuZHMudG9wLFxuICAgICAgd2lkdGg6IGJvdW5kcy53aWR0aCAtIDIsXG4gICAgICBoZWlnaHQ6IGJvdW5kcy5oZWlnaHRcbiAgICB9LFxuICAgIGNsYXNzTmFtZTogY3NzYFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1nZGctYmctaGVhZGVyKTtcbiAgICAgICAgICAgIGAsXG4gICAgb25DbGlja091dHNpZGU6IG9uQ2xvc2UsXG4gICAgY2hpbGRyZW46IF9qc3goUmVuYW1lSW5wdXQsIHtcbiAgICAgIHRhcmdldEhlaWdodDogYm91bmRzLmhlaWdodCxcbiAgICAgIFwiZGF0YS10ZXN0aWRcIjogXCJncm91cC1yZW5hbWUtaW5wdXRcIixcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIG9uQmx1cjogb25DbG9zZSxcbiAgICAgIG9uRm9jdXM6IGUgPT4gZS50YXJnZXQuc2V0U2VsZWN0aW9uUmFuZ2UoMCwgdmFsdWUubGVuZ3RoKSxcbiAgICAgIG9uQ2hhbmdlOiBlID0+IHNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKSxcbiAgICAgIG9uS2V5RG93bjogZSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XG4gICAgICAgICAgb25GaW5pc2godmFsdWUpO1xuICAgICAgICB9IGVsc2UgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgb25DbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYXV0b0ZvY3VzOiB0cnVlXG4gICAgfSlcbiAgfSk7XG59O1xuR3JvdXBSZW5hbWUuZGlzcGxheU5hbWUgPSBcIkdyb3VwUmVuYW1lXCI7Il19*/\", \"\",{\"version\":3,\"sources\":[\"/home/runner/work/glide-data-grid/glide-data-grid/packages/core/src/data-editor/group-rename.tsx\",\"webpack://./packages/core/src/data-editor/group-rename.tsx\"],\"names\":[\".r1fzhvm4\",\".c181oggi\"],\"mappings\":\"AAKoBA,UAAAA,kBAAAA,CAAAA,mBAAAA,CAAAA,mBAAAA,CAAAA,WAAAA,CAAAA,WAAAA,CAAAA,YAAAA,CAAAA,+CAAAA,CAAAA,iBAAAA,CAAAA,aAAAA,CAAAA,4CAAAA,CAAAA,kCAAAA,CAAAA,4BAAAA,CAAAA,wDAAAA,CAAAA;AA6BLC,UAAAA,aAAAA,CAAAA,mBAAAA,CAAAA,oBAAAA,CAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,0BAAAA,CAAAA,wBAAAA,CAAAA,qBAAAA,CAAAA,kBAAAA,CAAAA,qCAAAA,CAAAA;AChCf,u5FAAu5F\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport { styled } from \\\"@linaria/react\\\";\\nimport { css } from \\\"@linaria/core\\\";\\nimport ClickOutsideContainer from \\\"../internal/click-outside-container/click-outside-container.js\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nconst RenameInput = styled.input`\\n    flex-grow: 1;\\n    border: none;\\n    outline: none;\\n    background-color: var(--gdg-bg-header-has-focus);\\n    border-radius: 9px;\\n    padding: 0 8px;\\n    box-shadow: 0 0 0 1px var(--gdg-border-color);\\n    color: var(--gdg-text-group-header);\\n    min-height: ${p => Math.max(16, p.targetHeight - 10)}px;\\n    font: var(--gdg-header-font-style) var(--gdg-font-family);\\n`;\\nexport const GroupRename = p => {\\n  const {\\n    bounds,\\n    group,\\n    onClose,\\n    canvasBounds,\\n    onFinish\\n  } = p;\\n  const [value, setValue] = React.useState(group);\\n  return _jsx(ClickOutsideContainer, {\\n    style: {\\n      position: \\\"absolute\\\",\\n      left: bounds.x - canvasBounds.left + 1,\\n      top: bounds.y - canvasBounds.top,\\n      width: bounds.width - 2,\\n      height: bounds.height\\n    },\\n    className: css`\\n                padding: 0 8px;\\n                display: flex;\\n                align-items: center;\\n                background-color: var(--gdg-bg-header);\\n            `,\\n    onClickOutside: onClose,\\n    children: _jsx(RenameInput, {\\n      targetHeight: bounds.height,\\n      \\\"data-testid\\\": \\\"group-rename-input\\\",\\n      value: value,\\n      onBlur: onClose,\\n      onFocus: e => e.target.setSelectionRange(0, value.length),\\n      onChange: e => setValue(e.target.value),\\n      onKeyDown: e => {\\n        if (e.key === \\\"Enter\\\") {\\n          onFinish(value);\\n        } else if (e.key === \\\"Escape\\\") {\\n          onClose();\\n        }\\n      },\\n      autoFocus: true\\n    })\\n  });\\n};\\nGroupRename.displayName = \\\"GroupRename\\\";\",\".r1fzhvm4{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;border:none;outline:none;background-color:var(--gdg-bg-header-has-focus);border-radius:9px;padding:0 8px;box-shadow:0 0 0 1px var(--gdg-border-color);color:var(--gdg-text-group-header);min-height:var(--r1fzhvm4-0);font:var(--gdg-header-font-style) var(--gdg-font-family);}\\n.c181oggi{padding:0 8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:var(--gdg-bg-header);}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvZGF0YS1lZGl0b3IvZ3JvdXAtcmVuYW1lLnRzeCJdLCJuYW1lcyI6WyIucjFmemh2bTQiLCIuYzE4MW9nZ2kiXSwibWFwcGluZ3MiOiJBQUtvQkE7QUE2QkxDIiwiZmlsZSI6Ii9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvZGF0YS1lZGl0b3IvZ3JvdXAtcmVuYW1lLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAbGluYXJpYS9yZWFjdFwiO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSBcIkBsaW5hcmlhL2NvcmVcIjtcbmltcG9ydCBDbGlja091dHNpZGVDb250YWluZXIgZnJvbSBcIi4uL2ludGVybmFsL2NsaWNrLW91dHNpZGUtY29udGFpbmVyL2NsaWNrLW91dHNpZGUtY29udGFpbmVyLmpzXCI7XG5pbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuY29uc3QgUmVuYW1lSW5wdXQgPSBzdHlsZWQuaW5wdXRgXG4gICAgZmxleC1ncm93OiAxO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdkZy1iZy1oZWFkZXItaGFzLWZvY3VzKTtcbiAgICBib3JkZXItcmFkaXVzOiA5cHg7XG4gICAgcGFkZGluZzogMCA4cHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4IHZhcigtLWdkZy1ib3JkZXItY29sb3IpO1xuICAgIGNvbG9yOiB2YXIoLS1nZGctdGV4dC1ncm91cC1oZWFkZXIpO1xuICAgIG1pbi1oZWlnaHQ6ICR7cCA9PiBNYXRoLm1heCgxNiwgcC50YXJnZXRIZWlnaHQgLSAxMCl9cHg7XG4gICAgZm9udDogdmFyKC0tZ2RnLWhlYWRlci1mb250LXN0eWxlKSB2YXIoLS1nZGctZm9udC1mYW1pbHkpO1xuYDtcbmV4cG9ydCBjb25zdCBHcm91cFJlbmFtZSA9IHAgPT4ge1xuICBjb25zdCB7XG4gICAgYm91bmRzLFxuICAgIGdyb3VwLFxuICAgIG9uQ2xvc2UsXG4gICAgY2FudmFzQm91bmRzLFxuICAgIG9uRmluaXNoXG4gIH0gPSBwO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKGdyb3VwKTtcbiAgcmV0dXJuIF9qc3goQ2xpY2tPdXRzaWRlQ29udGFpbmVyLCB7XG4gICAgc3R5bGU6IHtcbiAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICBsZWZ0OiBib3VuZHMueCAtIGNhbnZhc0JvdW5kcy5sZWZ0ICsgMSxcbiAgICAgIHRvcDogYm91bmRzLnkgLSBjYW52YXNCb3VuZHMudG9wLFxuICAgICAgd2lkdGg6IGJvdW5kcy53aWR0aCAtIDIsXG4gICAgICBoZWlnaHQ6IGJvdW5kcy5oZWlnaHRcbiAgICB9LFxuICAgIGNsYXNzTmFtZTogY3NzYFxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1nZGctYmctaGVhZGVyKTtcbiAgICAgICAgICAgIGAsXG4gICAgb25DbGlja091dHNpZGU6IG9uQ2xvc2UsXG4gICAgY2hpbGRyZW46IF9qc3goUmVuYW1lSW5wdXQsIHtcbiAgICAgIHRhcmdldEhlaWdodDogYm91bmRzLmhlaWdodCxcbiAgICAgIFwiZGF0YS10ZXN0aWRcIjogXCJncm91cC1yZW5hbWUtaW5wdXRcIixcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIG9uQmx1cjogb25DbG9zZSxcbiAgICAgIG9uRm9jdXM6IGUgPT4gZS50YXJnZXQuc2V0U2VsZWN0aW9uUmFuZ2UoMCwgdmFsdWUubGVuZ3RoKSxcbiAgICAgIG9uQ2hhbmdlOiBlID0+IHNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKSxcbiAgICAgIG9uS2V5RG93bjogZSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XG4gICAgICAgICAgb25GaW5pc2godmFsdWUpO1xuICAgICAgICB9IGVsc2UgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgb25DbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYXV0b0ZvY3VzOiB0cnVlXG4gICAgfSlcbiAgfSk7XG59O1xuR3JvdXBSZW5hbWUuZGlzcGxheU5hbWUgPSBcIkdyb3VwUmVuYW1lXCI7Il19*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".w2q57ts{position:relative;min-width:10px;min-height:10px;max-width:100%;max-height:100%;width:var(--w2q57ts-0);height:var(--w2q57ts-1);overflow:hidden;overflow:clip;direction:ltr;}.w2q57ts > :first-child{position:absolute;left:0;top:0;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvaW50ZXJuYWwvZGF0YS1lZGl0b3ItY29udGFpbmVyL2RhdGEtZ3JpZC1jb250YWluZXIudHN4Il0sIm5hbWVzIjpbIi53MnE1N3RzIl0sIm1hcHBpbmdzIjoiQUFPZ0JBIiwiZmlsZSI6Ii9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvaW50ZXJuYWwvZGF0YS1lZGl0b3ItY29udGFpbmVyL2RhdGEtZ3JpZC1jb250YWluZXIudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiB0b0Nzcyh4KSB7XG4gIGlmICh0eXBlb2YgeCA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIHg7XG4gIHJldHVybiBgJHt4fXB4YDtcbn1cbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIG1pbi13aWR0aDogMTBweDtcbiAgICBtaW4taGVpZ2h0OiAxMHB4O1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuXG4gICAgd2lkdGg6ICR7cCA9PiBwLmlubmVyV2lkdGh9O1xuICAgIGhlaWdodDogJHtwID0+IHAuaW5uZXJIZWlnaHR9O1xuXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBvdmVyZmxvdzogY2xpcDtcblxuICAgIGRpcmVjdGlvbjogbHRyO1xuXG4gICAgPiA6Zmlyc3QtY2hpbGQge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG5gO1xuZXhwb3J0IGNvbnN0IERhdGFFZGl0b3JDb250YWluZXIgPSBwID0+IHtcbiAgY29uc3Qge1xuICAgIGluV2lkdGgsXG4gICAgaW5IZWlnaHQsXG4gICAgY2hpbGRyZW4sXG4gICAgLi4ucmVzdFxuICB9ID0gcDtcbiAgcmV0dXJuIF9qc3goV3JhcHBlciwge1xuICAgIGlubmVySGVpZ2h0OiB0b0NzcyhpbkhlaWdodCksXG4gICAgaW5uZXJXaWR0aDogdG9Dc3MoaW5XaWR0aCksXG4gICAgLi4ucmVzdCxcbiAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgfSk7XG59O1xuRGF0YUVkaXRvckNvbnRhaW5lci5kaXNwbGF5TmFtZSA9IFwiRGF0YUVkaXRvckNvbnRhaW5lclwiOyJdfQ==*/\", \"\",{\"version\":3,\"sources\":[\"/home/runner/work/glide-data-grid/glide-data-grid/packages/core/src/internal/data-editor-container/data-grid-container.tsx\",\"webpack://./packages/core/src/internal/data-editor-container/data-grid-container.tsx\"],\"names\":[\".w2q57ts\"],\"mappings\":\"AAOgBA,SAAAA,iBAAAA,CAAAA,cAAAA,CAAAA,eAAAA,CAAAA,cAAAA,CAAAA,eAAAA,CAAAA,sBAAAA,CAAAA,uBAAAA,CAAAA,eAAAA,CAAAA,aAAAA,CAAAA,aAAAA,CAAAA,CAAAA,wBAAAA,iBAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,UAAAA,CAAAA,WAAAA,CAAAA;ACNhB,+wDAA+wD\",\"sourcesContent\":[\"import { styled } from \\\"@linaria/react\\\";\\nimport * as React from \\\"react\\\";\\nimport { jsx as _jsx } from \\\"react/jsx-runtime\\\";\\nfunction toCss(x) {\\n  if (typeof x === \\\"string\\\") return x;\\n  return `${x}px`;\\n}\\nconst Wrapper = styled.div`\\n    position: relative;\\n\\n    min-width: 10px;\\n    min-height: 10px;\\n    max-width: 100%;\\n    max-height: 100%;\\n\\n    width: ${p => p.innerWidth};\\n    height: ${p => p.innerHeight};\\n\\n    overflow: hidden;\\n    overflow: clip;\\n\\n    direction: ltr;\\n\\n    > :first-child {\\n        position: absolute;\\n        left: 0;\\n        top: 0;\\n        width: 100%;\\n        height: 100%;\\n    }\\n`;\\nexport const DataEditorContainer = p => {\\n  const {\\n    inWidth,\\n    inHeight,\\n    children,\\n    ...rest\\n  } = p;\\n  return _jsx(Wrapper, {\\n    innerHeight: toCss(inHeight),\\n    innerWidth: toCss(inWidth),\\n    ...rest,\\n    children: children\\n  });\\n};\\nDataEditorContainer.displayName = \\\"DataEditorContainer\\\";\",\".w2q57ts{position:relative;min-width:10px;min-height:10px;max-width:100%;max-height:100%;width:var(--w2q57ts-0);height:var(--w2q57ts-1);overflow:hidden;overflow:clip;direction:ltr;}.w2q57ts > :first-child{position:absolute;left:0;top:0;width:100%;height:100%;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvaW50ZXJuYWwvZGF0YS1lZGl0b3ItY29udGFpbmVyL2RhdGEtZ3JpZC1jb250YWluZXIudHN4Il0sIm5hbWVzIjpbIi53MnE1N3RzIl0sIm1hcHBpbmdzIjoiQUFPZ0JBIiwiZmlsZSI6Ii9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvaW50ZXJuYWwvZGF0YS1lZGl0b3ItY29udGFpbmVyL2RhdGEtZ3JpZC1jb250YWluZXIudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIkBsaW5hcmlhL3JlYWN0XCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5mdW5jdGlvbiB0b0Nzcyh4KSB7XG4gIGlmICh0eXBlb2YgeCA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIHg7XG4gIHJldHVybiBgJHt4fXB4YDtcbn1cbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIG1pbi13aWR0aDogMTBweDtcbiAgICBtaW4taGVpZ2h0OiAxMHB4O1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuXG4gICAgd2lkdGg6ICR7cCA9PiBwLmlubmVyV2lkdGh9O1xuICAgIGhlaWdodDogJHtwID0+IHAuaW5uZXJIZWlnaHR9O1xuXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBvdmVyZmxvdzogY2xpcDtcblxuICAgIGRpcmVjdGlvbjogbHRyO1xuXG4gICAgPiA6Zmlyc3QtY2hpbGQge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG5gO1xuZXhwb3J0IGNvbnN0IERhdGFFZGl0b3JDb250YWluZXIgPSBwID0+IHtcbiAgY29uc3Qge1xuICAgIGluV2lkdGgsXG4gICAgaW5IZWlnaHQsXG4gICAgY2hpbGRyZW4sXG4gICAgLi4ucmVzdFxuICB9ID0gcDtcbiAgcmV0dXJuIF9qc3goV3JhcHBlciwge1xuICAgIGlubmVySGVpZ2h0OiB0b0NzcyhpbkhlaWdodCksXG4gICAgaW5uZXJXaWR0aDogdG9Dc3MoaW5XaWR0aCksXG4gICAgLi4ucmVzdCxcbiAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgfSk7XG59O1xuRGF0YUVkaXRvckNvbnRhaW5lci5kaXNwbGF5TmFtZSA9IFwiRGF0YUVkaXRvckNvbnRhaW5lclwiOyJdfQ==*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".slyseh9{position:absolute;top:4px;right:20px;background-color:var(--gdg-bg-cell);color:var(--gdg-text-dark);padding:8px;border:1px solid var(--gdg-border-color);border-radius:6px;font-size:var(--gdg-editor-font-size);-webkit-animation:gdg-search-fadein-slyseh9 0.15s forwards;animation:gdg-search-fadein-slyseh9 0.15s forwards;}.slyseh9.out{-webkit-animation:gdg-search-fadeout-slyseh9 0.15s forwards;animation:gdg-search-fadeout-slyseh9 0.15s forwards;}.slyseh9 .gdg-search-bar-inner{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.slyseh9 .gdg-search-status{padding-top:4px;font-size:11px;}.slyseh9 .gdg-search-progress{position:absolute;height:4px;left:0;bottom:0;background-color:var(--gdg-text-light);}.slyseh9 input{width:220px;color:var(--gdg-textDark);background-color:var(--gdg-bg-cell);border:none;border-width:0;outline:none;}.slyseh9 button{width:24px;height:24px;padding:0;border:none;outline:none;background:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;color:var(--gdg-text-medium);}.slyseh9 button:hover{color:var(--gdg-text-dark);}.slyseh9 button .button-icon{width:16px;height:16px;}.slyseh9 button:disabled{opacity:0.4;pointer-events:none;}@-webkit-keyframes gdg-search-fadeout-slyseh9{from{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}to{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}}@keyframes gdg-search-fadeout-slyseh9{from{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}to{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}}@-webkit-keyframes gdg-search-fadein-slyseh9{from{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}}@keyframes gdg-search-fadein-slyseh9{from{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvaW50ZXJuYWwvZGF0YS1ncmlkLXNlYXJjaC9kYXRhLWdyaWQtc2VhcmNoLXN0eWxlLnRzeCJdLCJuYW1lcyI6WyIuc2x5c2VoOSJdLCJtYXBwaW5ncyI6IkFBQzZCQSIsImZpbGUiOiIvaG9tZS9ydW5uZXIvd29yay9nbGlkZS1kYXRhLWdyaWQvZ2xpZGUtZGF0YS1ncmlkL3BhY2thZ2VzL2NvcmUvc3JjL2ludGVybmFsL2RhdGEtZ3JpZC1zZWFyY2gvZGF0YS1ncmlkLXNlYXJjaC1zdHlsZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQGxpbmFyaWEvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCBTZWFyY2hXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0cHg7XG4gICAgcmlnaHQ6IDIwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1nZGctYmctY2VsbCk7XG4gICAgY29sb3I6IHZhcigtLWdkZy10ZXh0LWRhcmspO1xuXG4gICAgcGFkZGluZzogOHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdkZy1ib3JkZXItY29sb3IpO1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcblxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZ2RnLWVkaXRvci1mb250LXNpemUpO1xuXG4gICAgJi5vdXQge1xuICAgICAgICBhbmltYXRpb246IGdkZy1zZWFyY2gtZmFkZW91dCAwLjE1cyBmb3J3YXJkcztcbiAgICB9XG4gICAgYW5pbWF0aW9uOiBnZGctc2VhcmNoLWZhZGVpbiAwLjE1cyBmb3J3YXJkcztcblxuICAgIC5nZGctc2VhcmNoLWJhci1pbm5lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgLmdkZy1zZWFyY2gtc3RhdHVzIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDRweDtcbiAgICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgIH1cblxuICAgIC5nZGctc2VhcmNoLXByb2dyZXNzIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDRweDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdkZy10ZXh0LWxpZ2h0KTtcbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICAgIHdpZHRoOiAyMjBweDtcbiAgICAgICAgY29sb3I6IHZhcigtLWdkZy10ZXh0RGFyayk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdkZy1iZy1jZWxsKTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBib3JkZXItd2lkdGg6IDA7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuXG4gICAgYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgIGhlaWdodDogMjRweDtcbiAgICAgICAgcGFkZGluZzogMDtcblxuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG5cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgY29sb3I6IHZhcigtLWdkZy10ZXh0LW1lZGl1bSk7XG5cbiAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1nZGctdGV4dC1kYXJrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5idXR0b24taWNvbiB7XG4gICAgICAgICAgICB3aWR0aDogMTZweDtcbiAgICAgICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIDpkaXNhYmxlZCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjQ7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgZ2RnLXNlYXJjaC1mYWRlb3V0IHtcbiAgICAgICAgZnJvbSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgIH1cbiAgICAgICAgdG8ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQwMHB4KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgZ2RnLXNlYXJjaC1mYWRlaW4ge1xuICAgICAgICBmcm9tIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MDBweCk7XG4gICAgICAgIH1cbiAgICAgICAgdG8ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICB9XG4gICAgfVxuYDsiXX0=*/\", \"\",{\"version\":3,\"sources\":[\"/home/runner/work/glide-data-grid/glide-data-grid/packages/core/src/internal/data-grid-search/data-grid-search-style.tsx\",\"webpack://./packages/core/src/internal/data-grid-search/data-grid-search-style.tsx\"],\"names\":[\".slyseh9\"],\"mappings\":\"AAC6BA,SAAAA,iBAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAAA,mCAAAA,CAAAA,0BAAAA,CAAAA,WAAAA,CAAAA,wCAAAA,CAAAA,iBAAAA,CAAAA,qCAAAA,CAAAA,0DAAAA,CAAAA,kDAAAA,CAAAA,CAAAA,aAAAA,2DAAAA,CAAAA,mDAAAA,CAAAA,CAAAA,+BAAAA,mBAAAA,CAAAA,oBAAAA,CAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,CAAAA,4BAAAA,eAAAA,CAAAA,cAAAA,CAAAA,CAAAA,8BAAAA,iBAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAAA,QAAAA,CAAAA,sCAAAA,CAAAA,CAAAA,eAAAA,WAAAA,CAAAA,yBAAAA,CAAAA,mCAAAA,CAAAA,WAAAA,CAAAA,cAAAA,CAAAA,YAAAA,CAAAA,CAAAA,gBAAAA,UAAAA,CAAAA,WAAAA,CAAAA,SAAAA,CAAAA,WAAAA,CAAAA,YAAAA,CAAAA,eAAAA,CAAAA,mBAAAA,CAAAA,oBAAAA,CAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,uBAAAA,CAAAA,8BAAAA,CAAAA,oBAAAA,CAAAA,sBAAAA,CAAAA,0BAAAA,CAAAA,wBAAAA,CAAAA,qBAAAA,CAAAA,kBAAAA,CAAAA,cAAAA,CAAAA,4BAAAA,CAAAA,CAAAA,sBAAAA,0BAAAA,CAAAA,CAAAA,6BAAAA,UAAAA,CAAAA,WAAAA,CAAAA,CAAAA,yBAAAA,WAAAA,CAAAA,mBAAAA,CAAAA,CAAAA,8CAAAA,KAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,uBAAAA,CAAAA,CAAAA,GAAAA,mCAAAA,CAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,CAAAA,CAAAA,sCAAAA,KAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,uBAAAA,CAAAA,CAAAA,GAAAA,mCAAAA,CAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,CAAAA,CAAAA,6CAAAA,KAAAA,mCAAAA,CAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,CAAAA,GAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,uBAAAA,CAAAA,CAAAA,CAAAA,qCAAAA,KAAAA,mCAAAA,CAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,CAAAA,GAAAA,+BAAAA,CAAAA,2BAAAA,CAAAA,uBAAAA,CAAAA,CAAAA;ACA7B,mjGAAmjG\",\"sourcesContent\":[\"import { styled } from \\\"@linaria/react\\\";\\nexport const SearchWrapper = styled.div`\\n    position: absolute;\\n    top: 4px;\\n    right: 20px;\\n\\n    background-color: var(--gdg-bg-cell);\\n    color: var(--gdg-text-dark);\\n\\n    padding: 8px;\\n    border: 1px solid var(--gdg-border-color);\\n    border-radius: 6px;\\n\\n    font-size: var(--gdg-editor-font-size);\\n\\n    &.out {\\n        animation: gdg-search-fadeout 0.15s forwards;\\n    }\\n    animation: gdg-search-fadein 0.15s forwards;\\n\\n    .gdg-search-bar-inner {\\n        display: flex;\\n    }\\n\\n    .gdg-search-status {\\n        padding-top: 4px;\\n        font-size: 11px;\\n    }\\n\\n    .gdg-search-progress {\\n        position: absolute;\\n        height: 4px;\\n        left: 0;\\n        bottom: 0;\\n\\n        background-color: var(--gdg-text-light);\\n    }\\n\\n    input {\\n        width: 220px;\\n        color: var(--gdg-textDark);\\n        background-color: var(--gdg-bg-cell);\\n        border: none;\\n        border-width: 0;\\n        outline: none;\\n    }\\n\\n    button {\\n        width: 24px;\\n        height: 24px;\\n        padding: 0;\\n\\n        border: none;\\n        outline: none;\\n        background: none;\\n\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        cursor: pointer;\\n        color: var(--gdg-text-medium);\\n\\n        :hover {\\n            color: var(--gdg-text-dark);\\n        }\\n\\n        .button-icon {\\n            width: 16px;\\n            height: 16px;\\n        }\\n\\n        :disabled {\\n            opacity: 0.4;\\n            pointer-events: none;\\n        }\\n    }\\n\\n    @keyframes gdg-search-fadeout {\\n        from {\\n            transform: translateX(0);\\n        }\\n        to {\\n            transform: translateX(400px);\\n        }\\n    }\\n\\n    @keyframes gdg-search-fadein {\\n        from {\\n            transform: translateX(400px);\\n        }\\n        to {\\n            transform: translateX(0);\\n        }\\n    }\\n`;\",\".slyseh9{position:absolute;top:4px;right:20px;background-color:var(--gdg-bg-cell);color:var(--gdg-text-dark);padding:8px;border:1px solid var(--gdg-border-color);border-radius:6px;font-size:var(--gdg-editor-font-size);-webkit-animation:gdg-search-fadein-slyseh9 0.15s forwards;animation:gdg-search-fadein-slyseh9 0.15s forwards;}.slyseh9.out{-webkit-animation:gdg-search-fadeout-slyseh9 0.15s forwards;animation:gdg-search-fadeout-slyseh9 0.15s forwards;}.slyseh9 .gdg-search-bar-inner{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.slyseh9 .gdg-search-status{padding-top:4px;font-size:11px;}.slyseh9 .gdg-search-progress{position:absolute;height:4px;left:0;bottom:0;background-color:var(--gdg-text-light);}.slyseh9 input{width:220px;color:var(--gdg-textDark);background-color:var(--gdg-bg-cell);border:none;border-width:0;outline:none;}.slyseh9 button{width:24px;height:24px;padding:0;border:none;outline:none;background:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;color:var(--gdg-text-medium);}.slyseh9 button:hover{color:var(--gdg-text-dark);}.slyseh9 button .button-icon{width:16px;height:16px;}.slyseh9 button:disabled{opacity:0.4;pointer-events:none;}@-webkit-keyframes gdg-search-fadeout-slyseh9{from{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}to{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}}@keyframes gdg-search-fadeout-slyseh9{from{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}to{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}}@-webkit-keyframes gdg-search-fadein-slyseh9{from{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}}@keyframes gdg-search-fadein-slyseh9{from{-webkit-transform:translateX(400px);-ms-transform:translateX(400px);transform:translateX(400px);}to{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);}}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2dsaWRlLWRhdGEtZ3JpZC9nbGlkZS1kYXRhLWdyaWQvcGFja2FnZXMvY29yZS9zcmMvaW50ZXJuYWwvZGF0YS1ncmlkLXNlYXJjaC9kYXRhLWdyaWQtc2VhcmNoLXN0eWxlLnRzeCJdLCJuYW1lcyI6WyIuc2x5c2VoOSJdLCJtYXBwaW5ncyI6IkFBQzZCQSIsImZpbGUiOiIvaG9tZS9ydW5uZXIvd29yay9nbGlkZS1kYXRhLWdyaWQvZ2xpZGUtZGF0YS1ncmlkL3BhY2thZ2VzL2NvcmUvc3JjL2ludGVybmFsL2RhdGEtZ3JpZC1zZWFyY2gvZGF0YS1ncmlkLXNlYXJjaC1zdHlsZS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwiQGxpbmFyaWEvcmVhY3RcIjtcbmV4cG9ydCBjb25zdCBTZWFyY2hXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0cHg7XG4gICAgcmlnaHQ6IDIwcHg7XG5cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1nZGctYmctY2VsbCk7XG4gICAgY29sb3I6IHZhcigtLWdkZy10ZXh0LWRhcmspO1xuXG4gICAgcGFkZGluZzogOHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdkZy1ib3JkZXItY29sb3IpO1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcblxuICAgIGZvbnQtc2l6ZTogdmFyKC0tZ2RnLWVkaXRvci1mb250LXNpemUpO1xuXG4gICAgJi5vdXQge1xuICAgICAgICBhbmltYXRpb246IGdkZy1zZWFyY2gtZmFkZW91dCAwLjE1cyBmb3J3YXJkcztcbiAgICB9XG4gICAgYW5pbWF0aW9uOiBnZGctc2VhcmNoLWZhZGVpbiAwLjE1cyBmb3J3YXJkcztcblxuICAgIC5nZGctc2VhcmNoLWJhci1pbm5lciB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuXG4gICAgLmdkZy1zZWFyY2gtc3RhdHVzIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDRweDtcbiAgICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgIH1cblxuICAgIC5nZGctc2VhcmNoLXByb2dyZXNzIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBoZWlnaHQ6IDRweDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdkZy10ZXh0LWxpZ2h0KTtcbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICAgIHdpZHRoOiAyMjBweDtcbiAgICAgICAgY29sb3I6IHZhcigtLWdkZy10ZXh0RGFyayk7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdkZy1iZy1jZWxsKTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBib3JkZXItd2lkdGg6IDA7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuXG4gICAgYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgIGhlaWdodDogMjRweDtcbiAgICAgICAgcGFkZGluZzogMDtcblxuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG5cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgY29sb3I6IHZhcigtLWdkZy10ZXh0LW1lZGl1bSk7XG5cbiAgICAgICAgOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1nZGctdGV4dC1kYXJrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5idXR0b24taWNvbiB7XG4gICAgICAgICAgICB3aWR0aDogMTZweDtcbiAgICAgICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIDpkaXNhYmxlZCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLjQ7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgZ2RnLXNlYXJjaC1mYWRlb3V0IHtcbiAgICAgICAgZnJvbSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgICAgIH1cbiAgICAgICAgdG8ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDQwMHB4KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgZ2RnLXNlYXJjaC1mYWRlaW4ge1xuICAgICAgICBmcm9tIHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg0MDBweCk7XG4gICAgICAgIH1cbiAgICAgICAgdG8ge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICB9XG4gICAgfVxuYDsiXX0=*/\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./group-rename.tsx\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./group-rename.tsx\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./data-grid-container.tsx\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./data-grid-container.tsx\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./data-grid-search-style.tsx\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!../../../../../node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./data-grid-search-style.tsx\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["styled","SearchWrapper","name","class","propsAsIs","React","GridCellKind","ScrollingDataGrid","assert","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","upArrow","className","viewBox","children","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","downArrow","closeX","targetSearchTimeMS","DataGridSearch","p","canvasRef","cellYOffset","rows","columns","searchInputRef","searchValue","searchResults","searchResultsIn","onSearchValueChange","getCellsForSelection","onSearchResultsChanged","showSearch","onSearchClose","searchID","useState","Math","round","random","searchStringInner","setSearchStringInner","searchString","setSearchString","useCallback","newVal","searchStatus","setSearchStatus","searchStatusRef","useRef","current","useEffect","undefined","length","cv","_cv$selectedIndex","rowsSearched","results","selectedIndex","abortControllerRef","AbortController","searchHandle","searchResultsInner","setSearchResultsInner","cancelSearch","window","cancelAnimationFrame","abort","cellYOffsetRef","beginSearch","str","regex","RegExp","replace","startY","searchStride","min","runningResult","tick","_searchStatusRef$curr","_searchStatusRef$curr2","tStart","performance","now","rowsLeft","data","x","y","width","height","signal","added","row","entries","col","cell","testString","kind","Text","Number","displayData","Uri","Markdown","Boolean","toString","Image","Bubble","join","Custom","copyData","test","push","tEnd","tElapsed","rounded","max","scalar","ceil","requestAnimationFrame","onClose","_canvasRef$current","focus","onSearchChange","event","target","value","preventScroll","onNext","ev","_ev$stopPropagation","stopPropagation","call","newIndex","onPrev","_ev$stopPropagation2","onSearchKeyDown","ctrlKey","metaKey","nativeEvent","code","key","preventDefault","shiftKey","isAnimatingOut","setIsAnimatingOut","timeoutId","setTimeout","clearTimeout","searchbox","useMemo","_searchStatus$rowsSea","_searchStatus$results","_searchStatus$results2","resultString","cancelEvent","rowsSearchedProgress","floor","progressStyle","onMouseDown","onMouseMove","onMouseUp","onClick","id","ref","onChange","tabIndex","onKeyDownCapture","disabled","style","htmlFor","prelightCells","accessibilityHeight","cellXOffset","clientSize","disabledRows","enableGroups","fillHandle","firstColAccessible","nonGrowWidth","fixedShadowX","fixedShadowY","freezeColumns","getCellContent","getCellRenderer","getGroupDetails","getRowThemeOverride","groupHeaderHeight","headerHeight","highlightRegions","imageWindowLoader","initialSize","isFilling","isFocused","lockColumns","maxColumnWidth","minColumnWidth","onHeaderMenuClick","onVisibleRegionChanged","overscrollX","overscrollY","preventDiagonalScrolling","rightElement","rightElementProps","rowHeight","scrollRef","selection","theme","freezeTrailingRows","hasAppendRow","translateX","translateY","verticalBorder","onColumnProposeMove","drawFocusRing","drawCell","drawHeader","experimental","gridRef","headerIcons","isDraggable","onCanvasBlur","onCanvasFocused","onCellFocused","onColumnMoved","onColumnResize","onColumnResizeEnd","onColumnResizeStart","onContextMenu","onDragEnd","onDragLeave","onDragOverCell","onDragStart","onDrop","onItemHovered","onKeyDown","onKeyUp","onRowMoved","smoothScrollX","smoothScrollY","ClickOutsideContainer","_exp","targetHeight","RenameInput","vars","GroupRename","bounds","group","canvasBounds","onFinish","setValue","position","left","top","onClickOutside","onBlur","onFocus","e","setSelectionRange","autoFocus","displayName","isSizedGridColumn","resolveCellsThunk","defaultSize","measureCell","ctx","_r$measure","_r$measure2","r","measure","measureColumn","c","colIndex","selectedData","removeOutliers","sizes","map","sum","size","average","i","measureText","title","icon","final","useColumnSizer","clientWidth","abortController","rowsRef","getCellsForSelectionRef","themeRef","canvas","offscreen","document","createElement","getContext","alpha","useLayoutEffect","documentElement","append","remove","memoMap","lastColumns","setSelectionData","getCells","every","computeRows","tailRows","computeArea","tailComputeArea","fn","getResult","tailGetResult","toSet","getRaw","font","baseFontFull","result","totalWidth","totalGrow","distribute","grow","writeable","extra","remaining","di","_result$i$grow","weighted","toAdd","growOffset","sizedColumns","browserIsOSX","checkKey","args","startsWith","keycode","parseInt","slice","keyCode","toUpperCase","codePointAt","isHotkey","hotkey","details","isHotkeyInner","didMatch","includes","parts","split","part","wantCtrl","wantShift","wantAlt","wantMeta","pop","accel","altKey","CompactSelection","useSelectionBehavior","gridSelection","setGridSelection","rangeBehavior","columnBehavior","rowBehavior","rangeSelect","setCurrent","expand","trigger","_gridSelection$curren","_gridSelection$curren2","range","rangeMixable","allowColumnCoSelect","allowRowCoSelect","rangeStack","empty","addLastRange","setSelectedRows","newRows","allowMixed","_newRows","add","rangeMixed","columnMixed","setSelectedColumns","newCols","_newCols","rowMixed","useCellsForSelection","getCellsForSelectionIn","rowMarkerOffset","getCellsForSelectionDirectWhenValid","rect","_getCellsForSelection","Loading","allowOverlay","getCellsForSelectionDirect","getCellsForSelectionMangled","newRect","toCss","innerWidth","_exp2","innerHeight","Wrapper","DataEditorContainer","inWidth","inHeight","rest","maxPxPerMs","msToFullSpeed","useAutoscroll","scrollDirection","onScroll","speedScalar","xDir","yDir","cancelled","lastTime","scrollFn","curTime","_scrollRef$current","step","motion","scrollBy","getDataEditorTheme","useRemAdjuster","_ref","rowHeightIn","headerHeightIn","groupHeaderHeightIn","themeIn","overscrollXIn","overscrollYIn","scaleToRem","remSize","_themeIn$headerIconSi","_themeIn$cellHorizont","_themeIn$cellVertical","scaler","rh","bt","n","headerIconSize","cellHorizontalPadding","cellVerticalPadding","assertNever","maybe","clamp","uniq","flatten","debounce","isEditableGridCell","isReadWriteCell","InnerGridCellKind","isInnerOnlyCell","isObjectEditorCallbackResult","headerCellUnheckedMarker","headerCellCheckedMarker","headerCellIndeterminateMarker","makeCSSStyle","ThemeContext","mergeAndRealizeTheme","getScrollBarWidth","useEventListener","useStateWithReactiveInput","whenDefined","isGroupEqual","itemsAreEqual","itemIsInRect","gridSelectionHasItem","getFreezeTrailingHeight","unquote","expandSelection","copyToClipboard","toggleBoolean","decodeHTML","pointInRect","withAlpha","combineRects","getClosestRect","groupHeaderKind","outOfBoundsKind","headerKind","mouseEventArgsAreEqual","useKeybindingsWithDefaults","DataGridOverlayEditor","lazy","idCounter","getSpanStops","cells","filter","span","_c$span$","_c$span","_c$span$2","_c$span2","shiftSelection","input","offset","loadingCell","emptyGridSelection","DataEditorImpl","forwardedRef","_visibleRegion$height","_visibleRegion$width","_gridSelection$curren5","_gridSelectionOuter$c","_gridSelectionOuter$c2","gridSelectionInner","setGridSelectionInner","overlay","setOverlay","mouseState","setMouseState","lastSent","safeWindow","rowMarkers","rowMarkerWidth","rowMarkerWidthRaw","imageEditorOverride","markdownDivCreateNode","columnsIn","onCellClicked","onCellActivated","onFillPattern","onFinishedEditing","coercePasteValue","drawHeaderIn","drawCellIn","onHeaderClicked","spanRangeBehavior","onGroupHeaderClicked","onCellContextMenu","onHeaderContextMenu","onGroupHeaderContextMenu","onGroupHeaderRenamed","onCellEdited","onCellsEdited","onSearchResultsChangedIn","onKeyDownIn","onKeyUpIn","keybindings","keybindingsIn","onRowAppended","validateCell","validateCellIn","highlightRegionsIn","columnSelect","rowSelect","rangeSelectionBlending","columnSelectionBlending","rowSelectionBlending","onDelete","onDeleteIn","onPaste","copyHeaders","cellActivationBehavior","rowSelectionMode","rowMarkerStartIndex","rowMarkerTheme","onSearchCloseIn","onSelectionCleared","showSearchIn","gridSelectionOuter","onGridSelectionChange","minColumnWidthIn","maxColumnWidthIn","maxColumnAutoWidth","maxColumnAutoWidthIn","provideEditor","trailingRowOptions","allowedFillDirections","scrollOffsetX","scrollOffsetY","onColumnResizeIn","onColumnResizeEndIn","onColumnResizeStartIn","customRenderers","additionalRenderers","trapFocus","isOutsideClick","renderers","docStyle","fontSize","getComputedStyle","parseFloat","hasRowMarkers","showTrailingBlankRow","lastRowSticky","sticky","showSearchInner","setShowSearchInner","gridSelectionOuterMangled","getCellsForSeletionDirect","newValue","prevValue","item","expectedExternalGridSelection","_","w","ind","wg","draw","_drawHeaderIn","columnIndex","_drawCellIn","sel","mergedTheme","setClientSize","rendererMap","find","isMatch","some","totalHeaderHeight","numSelectedRows","rowMarkerHeader","mangledCols","hasMenu","themeOverride","visibleRegionY","visibleRegionTy","visibleRegionRef","visibleRegionInput","_visibleRegionRef$cur","_visibleRegionRef$cur2","ty","hasJustScrolled","visibleRegion","setVisibleRegion","vScrollReady","scrollTop","hScrollReady","scrollLeft","immediate","_gridRef$current","_gridRef$current2","mangledRows","mangledOnCellsEdited","items","mangledItems","location","fillHighlightRegion","setFillHighlightRegion","highlightRange","regions","maxWidth","color","accentColor","mangledColsRef","getMangledCellContent","forceStrict","arguments","isTrailing","isRowMarkerCol","Marker","checked","hasIndex","markerKind","drawHandle","cursor","_trailingRowOptions$h","_c$trailingRowOptions","isFirst","maybeFirstColumnHint","hint","_c$trailingRowOptions2","_c$trailingRowOptions3","_c$trailingRowOptions4","_c$trailingRowOptions5","addIcon","NewRow","outerCol","strict","_vr$extras","_vr$extras2","_vr$extras3","vr","isOutsideMainArea","isSelected","extras","selected","isInFreezeArea","freezeRegions","fr","mangledGetGroupDetails","_getGroupDetails","_result$actions","overrideTheme","actions","setRenameGroup","setOverlaySimple","val","_mangledGetGroupDetai","column","groupTheme","colTheme","rowTheme","content","reselect","fromKeyboard","initialValue","isNaN","highlight","forceEditMode","readonly","_gridRef$current3","damage","focusOnRowFromTrailingBlankRow","_gridRef$current4","getBounds","scrollTo","dir","paddingX","paddingY","options","grid","trueCol","unit","amount","trueRow","desiredX","desiredY","targetRect","scrollX","scrollY","_grid$getBounds","scrollBounds","getBoundingClientRect","scale","offsetWidth","frozenWidth","trailingRowHeight","freezeTrailingRowsEffective","sLeft","sRight","right","sTop","sBottom","bottom","minx","hAlign","miny","vAlign","focusCallback","getCellContentRef","appendRow","_c$trailingRowOptions6","openOverlay","appendResult","backoff","doFocus","scrollToRef","getCustomNewRowTargetColumn","_columns$col$trailing","_columns$col","customTargetColumn","targetColumn","customTargetOffset","maybeIndex","indexOf","lastSelectedRowRef","lastSelectedColRef","themeForCell","pos","_mangledCols$col","handleSelect","isMultiKey","isMultiRow","isMultiCol","selectedColumns","selectedRows","cellCol","cellRow","lastMouseSelectLocation","markerCell","_renderer$onClick","renderer","postClick","posX","localEventX","posY","localEventY","lastHighlighted","isLongTouch","newSlice","fromSingleSelection","isTouch","_gridSelection$curren3","onSelect","prevented","isLastStickyRow","startedFromLastSticky","lastCol","isMaybeScrollbar","isActivelyDraggingHeader","touchDownArgs","mouseDownData","isPrevented","button","time","fh","isFillHandle","isEdge","previousSelection","renameGroup","handleGroupHeaderSelection","needle","start","end","hasAll","index","normalSizeColumn","inputCol","newCol","scrollDir","setScrollDir","fillPattern","currentSelection","_previousSelection$cu","_gridRef$current5","patternRange","currentRange","canceled","fillDestination","patternSource","pattern","editItemList","patternCell","fillRight","firstColSelection","fillDown","firstRowSelection","isOutside","_mouse$previousSelect","_lastMouseSelectLocat","mouse","newRange","lastMouseDownCol","lastMouseDownRow","handleMaybeClick","a","isValidClick","_gridRef$current6","shouldActivate","_mouse$previousSelect2","selectedCol","selectedRow","prevCol","prevRow","isClickOnSelected","isDoubleClick","clickLocation","touchVr","_gridSelection$curren4","onMouseMoveImpl","buttons","_mouseDownData$curren","_mouseDownData$curren2","scrollEdge","onHeaderMenuClickInner","screenPosition","currentCell","onVisibleRegionChangedImpl","region","clientHeight","rightElWidth","tx","freezeRegion","newRegion","onColumnMovedImpl","startIndex","endIndex","isActivelyDragging","onDragStartImpl","defaultPrevented","hoveredRef","onItemHoveredImpl","_mouseDownData$curren3","_mouseDownData$curren4","_mouseState$previousS","prevRange","startedFromLastStickyRow","landedOnLastStickyRow","deltaX","deltaY","abs","adjustSelectionOnScroll","visible","_visible$extras$freez","_visible$extras","adjustSelection","direction","old","disallowed","done","updateSelectedCell","fromEditingTrailingRow","freeMove","rowMax","newStack","onFinishEditing","movement","_gridRef$current7","movX","movY","isEditingTrailingRow","overlayID","deleteRange","_gridRef$current8","editList","cellValue","_toDelete$provideEdit","toDelete","editor","_editor$deletedValue","deletedValue","_toDelete$onDelete","overlayOpen","handleFixedKeybindings","cancel","keys","clear","selectAll","_gridSelection$curren6","_gridSelection$curren7","search","_searchInputRef$curre","delete","_onDelete","callbackResult","cancelOnlyOnMove","scrollToSelectedCell","selectColumn","selectRow","activateCell","downFill","rightFill","goToNextPage","goToPreviousPage","goToFirstCell","goToLastCell","MAX_SAFE_INTEGER","selectToFirstCell","selectToLastCell","goDownCell","goUpCell","goRightCell","goLeftCell","goDownCellRetainSelection","goUpCellRetainSelection","goRightCellRetainSelection","goLeftCellRetainSelection","goToLastRow","goToFirstRow","MIN_SAFE_INTEGER","goToLastColumn","goToFirstColumn","selectGrowDown","selectGrowUp","selectGrowRight","selectGrowLeft","selectToLastRow","selectToFirstRow","selectToLastColumn","selectToFirstColumn","closeOverlay","acceptOverlayDown","acceptOverlayUp","acceptOverlayLeft","acceptOverlayRight","moved","adjustedCol","onPasteInternal","paste","pasteToCell","inner","rawValue","formatted","_rawValue$join","_rawValue$toString","stringifiedRawValue","coerced","process","env","NODE_ENV","console","warn","_onPaste","_ref2","_r$onPaste","formattedString","focused","contains","activeElement","_selectedColumns$firs","first","_selectedRows$first","_gridRef$current9","text","textPlain","textHtml","navigator","clipboard","read","clipboardContent","types","htmlBlob","getType","html","decoded","readText","clipboardData","getData","targetCol","targetRow","_ref3","_text","_data","cellData","cb","_cb$rawValue$toString","_cb$rawValue","dataRow","dataItem","writeCol","writeRow","onCopy","ignoreFocus","_scrollRef$current2","_canvasRef$current2","copy","copyToClipboardWithHeaders","columnIndexes","headers","thunk","toCopy","rowIndex","then","v","Promise","settled","all","cols","reduce","pv","onCut","_scrollRef$current3","_canvasRef$current3","cut","effectiveSelection","onDeleteResult","navIndex","outCol","outRow","_expectedExternalGrid","_expectedExternalGrid2","selectionOutOfBounds","tint","mangledVerticalBorder","_verticalBorder","renameGroupNode","mangledFreezeColumns","useImperativeHandle","updateCells","damageList","_gridRef$current10","_gridRef$current11","scrollWidth","scrollHeight","_gridRef$current12","emit","rawEvent","remeasureColumns","selCol","selRow","setIsFocused","setIsFocusedDebounced","onFocusOut","idealWidth","idealHeight","_experimental$scrollb","h","scrollbarWidth","scrollbarWidthOverride","rowsCountWithTrailingRow","avg","toAverage","acc","Provider","Suspense","fallback","isSubGrid","DataEditor","forwardRef","iconHead","headerRowID","props","fg","fgColor","bg","bgColor","headerCode","headerNumber","headerString","headerBoolean","headerUri","renameIcon","headerAudioUri","headerVideoUri","headerEmoji","headerImage","headerPhone","headerMarkdown","headerDate","headerTime","headerEmail","headerReference","headerIfThenElse","headerSingleValue","headerLookup","headerTextTemplate","headerMath","headerRollup","headerJoinStrings","headerSplitString","headerGeoDistance","headerArray","rowOwnerOverlay","protectedColumnOverlay","sprites","AllCellRenderers","ImageWindowLoaderImpl","DataEditorAllImpl","allSprites","_p$imageWindowLoader","DataEditorAll","useDeepMemo","keybindingDefaults","realizeKeybind","keybind","defaultVal","realizeKeybinds","keybinds","isOSX","_keys$goToNextPage","_keys$goToPreviousPag","_keys$goToFirstCell","_ref4","_keys$goToLastCell","_ref5","_keys$selectToFirstCe","_ref6","_keys$selectToLastCel","withBackCompatApplied","pageDown","pageUp","last","PureComponent","constructor","wrapperRef","createRef","clickOutside","node","classList","parentElement","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"sourceRoot":""}