"use strict";
(self["webpackChunkroot"] = self["webpackChunkroot"] || []).push([[3606],{

/***/ "./packages/core/src/data-editor/stories/data-editor-repros.stories.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bug70": () => (/* binding */ Bug70),
/* harmony export */   "FilterColumns": () => (/* binding */ FilterColumns),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/react/index.js");
/* harmony import */ var _storybook_addons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("@storybook/addons");
/* harmony import */ var _storybook_addons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_storybook_addons__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _stories_story_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/core/src/stories/story-utils.tsx");
/* harmony import */ var _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/core/src/internal/data-grid/data-grid-types.ts");
/* harmony import */ var _data_editor_all_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/core/src/data-editor-all.tsx");
/* harmony import */ var _linaria_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@linaria/react/dist/index.mjs");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/react/jsx-runtime.js");
var __STORY__ = "import * as React from \"react\";\n\nimport { useState, useMemo } from \"@storybook/addons\";\nimport { BuilderThemeWrapper } from \"../../stories/story-utils.js\";\nimport { type GridCell, GridCellKind, type Item } from \"../../internal/data-grid/data-grid-types.js\";\nimport { DataEditorAll as DataEditor } from \"../../data-editor-all.js\";\nimport { styled } from \"@linaria/react\";\n\nexport default {\n    title: \"Tests/TestCases/Bugs\",\n\n    decorators: [\n        (Story: React.ComponentType) => (\n            <BuilderThemeWrapper width={1000} height={800}>\n                <Story />\n            </BuilderThemeWrapper>\n        ),\n    ],\n};\n\nconst bug70Gen = ([, row]: Item): GridCell => ({\n    allowOverlay: true,\n    kind: GridCellKind.Number,\n    data: row,\n    displayData: row.toString(),\n});\n\nconst ignore = () => undefined;\n\nconst Bug70Style = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    > a {\n        margin-bottom: 20px;\n    }\n`;\n\nexport function Bug70() {\n    const cols = [\n        { title: \"Col1\", width: 100 },\n        { title: \"Col2\", width: 100 },\n    ];\n\n    return (\n        <Bug70Style className=\"App\">\n            <p>To cause error: scroll down at least one row, edit a cell in Col2, and hit Tab</p>\n            <a href=\"https://github.com/glideapps/glide-data-grid/issues/70\" target=\"_blank\" rel=\"noreferrer\">\n                Original report\n            </a>\n            <DataEditor\n                width={500}\n                height={500}\n                rows={100}\n                columns={cols}\n                getCellContent={bug70Gen}\n                onCellEdited={ignore}\n            />\n        </Bug70Style>\n    );\n}\n\nconst filterColumnsGen = ([col, row]: Item): GridCell => ({\n    allowOverlay: true,\n    kind: GridCellKind.Text,\n    data: `${col} - ${row}`,\n    displayData: `${col} - ${row}`,\n});\n\nconst filteringColumns = [\n    { title: \"Col AAAA\", width: 120 },\n    { title: \"Col AAA\", width: 120 },\n    { title: \"Col AA\", width: 120 },\n    { title: \"Col A\", width: 120 },\n    { title: \"Col\", width: 120 },\n];\n\nexport function FilterColumns() {\n    const [searchText, setSearchText] = useState(\"\");\n\n    const cols = useMemo(() => {\n        if (searchText === \"\") {\n            return filteringColumns;\n        }\n\n        return filteringColumns.filter(c => c.title.toLowerCase().includes(searchText.toLowerCase()));\n    }, [searchText]);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchText(e.target.value);\n    };\n\n    return (\n        <div>\n            <input value={searchText} onChange={onInputChange} />\n            <DataEditor\n                width={1000}\n                height={500}\n                rows={100}\n                columns={cols}\n                getCellContent={filterColumnsGen}\n                smoothScrollX={true}\n                smoothScrollY={true}\n            />\n        </div>\n    );\n}\n";
var __LOCATIONS_MAP__ = {
  "Bug70": {
    "startLoc": {
      "col": 7,
      "line": 39
    },
    "endLoc": {
      "col": 1,
      "line": 61
    },
    "startBody": {
      "col": 7,
      "line": 39
    },
    "endBody": {
      "col": 1,
      "line": 61
    }
  },
  "FilterColumns": {
    "startLoc": {
      "col": 7,
      "line": 78
    },
    "endLoc": {
      "col": 1,
      "line": 107
    },
    "startBody": {
      "col": 7,
      "line": 78
    },
    "endBody": {
      "col": 1,
      "line": 107
    }
  }
};








/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  parameters: {
    "storySource": {
      "source": "import * as React from \"react\";\n\nimport { useState, useMemo } from \"@storybook/addons\";\nimport { BuilderThemeWrapper } from \"../../stories/story-utils.js\";\nimport { type GridCell, GridCellKind, type Item } from \"../../internal/data-grid/data-grid-types.js\";\nimport { DataEditorAll as DataEditor } from \"../../data-editor-all.js\";\nimport { styled } from \"@linaria/react\";\n\nexport default {\n    title: \"Tests/TestCases/Bugs\",\n\n    decorators: [\n        (Story: React.ComponentType) => (\n            <BuilderThemeWrapper width={1000} height={800}>\n                <Story />\n            </BuilderThemeWrapper>\n        ),\n    ],\n};\n\nconst bug70Gen = ([, row]: Item): GridCell => ({\n    allowOverlay: true,\n    kind: GridCellKind.Number,\n    data: row,\n    displayData: row.toString(),\n});\n\nconst ignore = () => undefined;\n\nconst Bug70Style = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    > a {\n        margin-bottom: 20px;\n    }\n`;\n\nexport function Bug70() {\n    const cols = [\n        { title: \"Col1\", width: 100 },\n        { title: \"Col2\", width: 100 },\n    ];\n\n    return (\n        <Bug70Style className=\"App\">\n            <p>To cause error: scroll down at least one row, edit a cell in Col2, and hit Tab</p>\n            <a href=\"https://github.com/glideapps/glide-data-grid/issues/70\" target=\"_blank\" rel=\"noreferrer\">\n                Original report\n            </a>\n            <DataEditor\n                width={500}\n                height={500}\n                rows={100}\n                columns={cols}\n                getCellContent={bug70Gen}\n                onCellEdited={ignore}\n            />\n        </Bug70Style>\n    );\n}\n\nconst filterColumnsGen = ([col, row]: Item): GridCell => ({\n    allowOverlay: true,\n    kind: GridCellKind.Text,\n    data: `${col} - ${row}`,\n    displayData: `${col} - ${row}`,\n});\n\nconst filteringColumns = [\n    { title: \"Col AAAA\", width: 120 },\n    { title: \"Col AAA\", width: 120 },\n    { title: \"Col AA\", width: 120 },\n    { title: \"Col A\", width: 120 },\n    { title: \"Col\", width: 120 },\n];\n\nexport function FilterColumns() {\n    const [searchText, setSearchText] = useState(\"\");\n\n    const cols = useMemo(() => {\n        if (searchText === \"\") {\n            return filteringColumns;\n        }\n\n        return filteringColumns.filter(c => c.title.toLowerCase().includes(searchText.toLowerCase()));\n    }, [searchText]);\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchText(e.target.value);\n    };\n\n    return (\n        <div>\n            <input value={searchText} onChange={onInputChange} />\n            <DataEditor\n                width={1000}\n                height={500}\n                rows={100}\n                columns={cols}\n                getCellContent={filterColumnsGen}\n                smoothScrollX={true}\n                smoothScrollY={true}\n            />\n        </div>\n    );\n}\n",
      "locationsMap": {
        "bug-70": {
          "startLoc": {
            "col": 7,
            "line": 39
          },
          "endLoc": {
            "col": 1,
            "line": 61
          },
          "startBody": {
            "col": 7,
            "line": 39
          },
          "endBody": {
            "col": 1,
            "line": 61
          }
        },
        "filter-columns": {
          "startLoc": {
            "col": 7,
            "line": 78
          },
          "endLoc": {
            "col": 1,
            "line": 107
          },
          "startBody": {
            "col": 7,
            "line": 78
          },
          "endBody": {
            "col": 1,
            "line": 107
          }
        }
      }
    }
  },
  title: "Tests/TestCases/Bugs",
  decorators: [Story => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_stories_story_utils_js__WEBPACK_IMPORTED_MODULE_3__/* .BuilderThemeWrapper */ .j, {
    width: 1000,
    height: 800,
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Story, {})
  })]
});
const bug70Gen = _ref => {
  let [, row] = _ref;
  return {
    allowOverlay: true,
    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_4__/* .GridCellKind.Number */ .p6.Number,
    data: row,
    displayData: row.toString()
  };
};
const ignore = () => undefined;
const Bug70Style = /*#__PURE__*/(0,_linaria_react__WEBPACK_IMPORTED_MODULE_5__/* .styled */ .z)('div')({
  name: "Bug70Style",
  class: "b1nvh7n2",
  propsAsIs: false
});
const Bug70 = function Bug70() {
  const cols = [{
    title: "Col1",
    width: 100
  }, {
    title: "Col2",
    width: 100
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(Bug70Style, {
    className: "App",
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("p", {
      children: "To cause error: scroll down at least one row, edit a cell in Col2, and hit Tab"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("a", {
      href: "https://github.com/glideapps/glide-data-grid/issues/70",
      target: "_blank",
      rel: "noreferrer",
      children: "Original report"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_data_editor_all_js__WEBPACK_IMPORTED_MODULE_6__/* .DataEditorAll */ .F, {
      width: 500,
      height: 500,
      rows: 100,
      columns: cols,
      getCellContent: bug70Gen,
      onCellEdited: ignore
    })]
  });
};
Bug70.displayName = "Bug70";
const filterColumnsGen = _ref2 => {
  let [col, row] = _ref2;
  return {
    allowOverlay: true,
    kind: _internal_data_grid_data_grid_types_js__WEBPACK_IMPORTED_MODULE_4__/* .GridCellKind.Text */ .p6.Text,
    data: `${col} - ${row}`,
    displayData: `${col} - ${row}`
  };
};
const filteringColumns = [{
  title: "Col AAAA",
  width: 120
}, {
  title: "Col AAA",
  width: 120
}, {
  title: "Col AA",
  width: 120
}, {
  title: "Col A",
  width: 120
}, {
  title: "Col",
  width: 120
}];
const FilterColumns = function FilterColumns() {
  const [searchText, setSearchText] = (0,_storybook_addons__WEBPACK_IMPORTED_MODULE_1__.useState)("");
  const cols = (0,_storybook_addons__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    if (searchText === "") {
      return filteringColumns;
    }
    return filteringColumns.filter(c => c.title.toLowerCase().includes(searchText.toLowerCase()));
  }, [searchText]);
  const onInputChange = e => {
    setSearchText(e.target.value);
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div", {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input", {
      value: searchText,
      onChange: onInputChange
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_data_editor_all_js__WEBPACK_IMPORTED_MODULE_6__/* .DataEditorAll */ .F, {
      width: 1000,
      height: 500,
      rows: 100,
      columns: cols,
      getCellContent: filterColumnsGen,
      smoothScrollX: true,
      smoothScrollY: true
    })]
  });
};
FilterColumns.displayName = "FilterColumns";

__webpack_require__("./packages/core/src/data-editor/stories/data-editor-repros.stories.linaria.css!=!./node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./packages/core/src/data-editor/stories/data-editor-repros.stories.tsx");;const __namedExportsOrder = ["Bug70","FilterColumns"];

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./packages/core/src/data-editor/stories/data-editor-repros.stories.tsx":
/***/ ((module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".b1nvh7n2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.b1nvh7n2 > a{margin-bottom:20px;}\n/*# sourceMappingURL=data:application/json;base64,*/", "",{"version":3,"sources":["/home/runner/work/glide-data-grid/glide-data-grid/packages/core/src/data-editor/stories/data-editor-repros.stories.tsx","webpack://./packages/core/src/data-editor/stories/data-editor-repros.stories.tsx"],"names":[".b1nvh7n2"],"mappings":"AA4GmBA,UAAAA,mBAAAA,CAAAA,oBAAAA,CAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,6BAAAA,CAAAA,yBAAAA,CAAAA,qBAAAA,CAAAA,CAAAA,cAAAA,kBAAAA,CAAAA;AC3GnB,+0dAA+0d","sourcesContent":["var __STORY__ = \"import * as React from \\\"react\\\";\\n\\nimport { useState, useMemo } from \\\"@storybook/addons\\\";\\nimport { BuilderThemeWrapper } from \\\"../../stories/story-utils.js\\\";\\nimport { type GridCell, GridCellKind, type Item } from \\\"../../internal/data-grid/data-grid-types.js\\\";\\nimport { DataEditorAll as DataEditor } from \\\"../../data-editor-all.js\\\";\\nimport { styled } from \\\"@linaria/react\\\";\\n\\nexport default {\\n    title: \\\"Tests/TestCases/Bugs\\\",\\n\\n    decorators: [\\n        (Story: React.ComponentType) => (\\n            <BuilderThemeWrapper width={1000} height={800}>\\n                <Story />\\n            </BuilderThemeWrapper>\\n        ),\\n    ],\\n};\\n\\nconst bug70Gen = ([, row]: Item): GridCell => ({\\n    allowOverlay: true,\\n    kind: GridCellKind.Number,\\n    data: row,\\n    displayData: row.toString(),\\n});\\n\\nconst ignore = () => undefined;\\n\\nconst Bug70Style = styled.div`\\n    display: flex;\\n    flex-direction: column;\\n\\n    > a {\\n        margin-bottom: 20px;\\n    }\\n`;\\n\\nexport function Bug70() {\\n    const cols = [\\n        { title: \\\"Col1\\\", width: 100 },\\n        { title: \\\"Col2\\\", width: 100 },\\n    ];\\n\\n    return (\\n        <Bug70Style className=\\\"App\\\">\\n            <p>To cause error: scroll down at least one row, edit a cell in Col2, and hit Tab</p>\\n            <a href=\\\"https://github.com/glideapps/glide-data-grid/issues/70\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">\\n                Original report\\n            </a>\\n            <DataEditor\\n                width={500}\\n                height={500}\\n                rows={100}\\n                columns={cols}\\n                getCellContent={bug70Gen}\\n                onCellEdited={ignore}\\n            />\\n        </Bug70Style>\\n    );\\n}\\n\\nconst filterColumnsGen = ([col, row]: Item): GridCell => ({\\n    allowOverlay: true,\\n    kind: GridCellKind.Text,\\n    data: `${col} - ${row}`,\\n    displayData: `${col} - ${row}`,\\n});\\n\\nconst filteringColumns = [\\n    { title: \\\"Col AAAA\\\", width: 120 },\\n    { title: \\\"Col AAA\\\", width: 120 },\\n    { title: \\\"Col AA\\\", width: 120 },\\n    { title: \\\"Col A\\\", width: 120 },\\n    { title: \\\"Col\\\", width: 120 },\\n];\\n\\nexport function FilterColumns() {\\n    const [searchText, setSearchText] = useState(\\\"\\\");\\n\\n    const cols = useMemo(() => {\\n        if (searchText === \\\"\\\") {\\n            return filteringColumns;\\n        }\\n\\n        return filteringColumns.filter(c => c.title.toLowerCase().includes(searchText.toLowerCase()));\\n    }, [searchText]);\\n\\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\\n        setSearchText(e.target.value);\\n    };\\n\\n    return (\\n        <div>\\n            <input value={searchText} onChange={onInputChange} />\\n            <DataEditor\\n                width={1000}\\n                height={500}\\n                rows={100}\\n                columns={cols}\\n                getCellContent={filterColumnsGen}\\n                smoothScrollX={true}\\n                smoothScrollY={true}\\n            />\\n        </div>\\n    );\\n}\\n\";\nvar __LOCATIONS_MAP__ = {\n  \"Bug70\": {\n    \"startLoc\": {\n      \"col\": 7,\n      \"line\": 39\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 61\n    },\n    \"startBody\": {\n      \"col\": 7,\n      \"line\": 39\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 61\n    }\n  },\n  \"FilterColumns\": {\n    \"startLoc\": {\n      \"col\": 7,\n      \"line\": 78\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 107\n    },\n    \"startBody\": {\n      \"col\": 7,\n      \"line\": 78\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 107\n    }\n  }\n};\nimport * as React from \"react\";\nimport { useState, useMemo } from \"@storybook/addons\";\nimport { BuilderThemeWrapper } from \"../../stories/story-utils.js\";\nimport { GridCellKind } from \"../../internal/data-grid/data-grid-types.js\";\nimport { DataEditorAll as DataEditor } from \"../../data-editor-all.js\";\nimport { styled } from \"@linaria/react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default {\n  parameters: {\n    \"storySource\": {\n      \"source\": \"import * as React from \\\"react\\\";\\n\\nimport { useState, useMemo } from \\\"@storybook/addons\\\";\\nimport { BuilderThemeWrapper } from \\\"../../stories/story-utils.js\\\";\\nimport { type GridCell, GridCellKind, type Item } from \\\"../../internal/data-grid/data-grid-types.js\\\";\\nimport { DataEditorAll as DataEditor } from \\\"../../data-editor-all.js\\\";\\nimport { styled } from \\\"@linaria/react\\\";\\n\\nexport default {\\n    title: \\\"Tests/TestCases/Bugs\\\",\\n\\n    decorators: [\\n        (Story: React.ComponentType) => (\\n            <BuilderThemeWrapper width={1000} height={800}>\\n                <Story />\\n            </BuilderThemeWrapper>\\n        ),\\n    ],\\n};\\n\\nconst bug70Gen = ([, row]: Item): GridCell => ({\\n    allowOverlay: true,\\n    kind: GridCellKind.Number,\\n    data: row,\\n    displayData: row.toString(),\\n});\\n\\nconst ignore = () => undefined;\\n\\nconst Bug70Style = styled.div`\\n    display: flex;\\n    flex-direction: column;\\n\\n    > a {\\n        margin-bottom: 20px;\\n    }\\n`;\\n\\nexport function Bug70() {\\n    const cols = [\\n        { title: \\\"Col1\\\", width: 100 },\\n        { title: \\\"Col2\\\", width: 100 },\\n    ];\\n\\n    return (\\n        <Bug70Style className=\\\"App\\\">\\n            <p>To cause error: scroll down at least one row, edit a cell in Col2, and hit Tab</p>\\n            <a href=\\\"https://github.com/glideapps/glide-data-grid/issues/70\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\">\\n                Original report\\n            </a>\\n            <DataEditor\\n                width={500}\\n                height={500}\\n                rows={100}\\n                columns={cols}\\n                getCellContent={bug70Gen}\\n                onCellEdited={ignore}\\n            />\\n        </Bug70Style>\\n    );\\n}\\n\\nconst filterColumnsGen = ([col, row]: Item): GridCell => ({\\n    allowOverlay: true,\\n    kind: GridCellKind.Text,\\n    data: `${col} - ${row}`,\\n    displayData: `${col} - ${row}`,\\n});\\n\\nconst filteringColumns = [\\n    { title: \\\"Col AAAA\\\", width: 120 },\\n    { title: \\\"Col AAA\\\", width: 120 },\\n    { title: \\\"Col AA\\\", width: 120 },\\n    { title: \\\"Col A\\\", width: 120 },\\n    { title: \\\"Col\\\", width: 120 },\\n];\\n\\nexport function FilterColumns() {\\n    const [searchText, setSearchText] = useState(\\\"\\\");\\n\\n    const cols = useMemo(() => {\\n        if (searchText === \\\"\\\") {\\n            return filteringColumns;\\n        }\\n\\n        return filteringColumns.filter(c => c.title.toLowerCase().includes(searchText.toLowerCase()));\\n    }, [searchText]);\\n\\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\\n        setSearchText(e.target.value);\\n    };\\n\\n    return (\\n        <div>\\n            <input value={searchText} onChange={onInputChange} />\\n            <DataEditor\\n                width={1000}\\n                height={500}\\n                rows={100}\\n                columns={cols}\\n                getCellContent={filterColumnsGen}\\n                smoothScrollX={true}\\n                smoothScrollY={true}\\n            />\\n        </div>\\n    );\\n}\\n\",\n      \"locationsMap\": {\n        \"bug-70\": {\n          \"startLoc\": {\n            \"col\": 7,\n            \"line\": 39\n          },\n          \"endLoc\": {\n            \"col\": 1,\n            \"line\": 61\n          },\n          \"startBody\": {\n            \"col\": 7,\n            \"line\": 39\n          },\n          \"endBody\": {\n            \"col\": 1,\n            \"line\": 61\n          }\n        },\n        \"filter-columns\": {\n          \"startLoc\": {\n            \"col\": 7,\n            \"line\": 78\n          },\n          \"endLoc\": {\n            \"col\": 1,\n            \"line\": 107\n          },\n          \"startBody\": {\n            \"col\": 7,\n            \"line\": 78\n          },\n          \"endBody\": {\n            \"col\": 1,\n            \"line\": 107\n          }\n        }\n      }\n    }\n  },\n  title: \"Tests/TestCases/Bugs\",\n  decorators: [Story => _jsx(BuilderThemeWrapper, {\n    width: 1000,\n    height: 800,\n    children: _jsx(Story, {})\n  })]\n};\nconst bug70Gen = _ref => {\n  let [, row] = _ref;\n  return {\n    allowOverlay: true,\n    kind: GridCellKind.Number,\n    data: row,\n    displayData: row.toString()\n  };\n};\nconst ignore = () => undefined;\nconst Bug70Style = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    > a {\n        margin-bottom: 20px;\n    }\n`;\nexport const Bug70 = function Bug70() {\n  const cols = [{\n    title: \"Col1\",\n    width: 100\n  }, {\n    title: \"Col2\",\n    width: 100\n  }];\n  return _jsxs(Bug70Style, {\n    className: \"App\",\n    children: [_jsx(\"p\", {\n      children: \"To cause error: scroll down at least one row, edit a cell in Col2, and hit Tab\"\n    }), _jsx(\"a\", {\n      href: \"https://github.com/glideapps/glide-data-grid/issues/70\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"Original report\"\n    }), _jsx(DataEditor, {\n      width: 500,\n      height: 500,\n      rows: 100,\n      columns: cols,\n      getCellContent: bug70Gen,\n      onCellEdited: ignore\n    })]\n  });\n};\nBug70.displayName = \"Bug70\";\nconst filterColumnsGen = _ref2 => {\n  let [col, row] = _ref2;\n  return {\n    allowOverlay: true,\n    kind: GridCellKind.Text,\n    data: `${col} - ${row}`,\n    displayData: `${col} - ${row}`\n  };\n};\nconst filteringColumns = [{\n  title: \"Col AAAA\",\n  width: 120\n}, {\n  title: \"Col AAA\",\n  width: 120\n}, {\n  title: \"Col AA\",\n  width: 120\n}, {\n  title: \"Col A\",\n  width: 120\n}, {\n  title: \"Col\",\n  width: 120\n}];\nexport const FilterColumns = function FilterColumns() {\n  const [searchText, setSearchText] = useState(\"\");\n  const cols = useMemo(() => {\n    if (searchText === \"\") {\n      return filteringColumns;\n    }\n    return filteringColumns.filter(c => c.title.toLowerCase().includes(searchText.toLowerCase()));\n  }, [searchText]);\n  const onInputChange = e => {\n    setSearchText(e.target.value);\n  };\n  return _jsxs(\"div\", {\n    children: [_jsx(\"input\", {\n      value: searchText,\n      onChange: onInputChange\n    }), _jsx(DataEditor, {\n      width: 1000,\n      height: 500,\n      rows: 100,\n      columns: cols,\n      getCellContent: filterColumnsGen,\n      smoothScrollX: true,\n      smoothScrollY: true\n    })]\n  });\n};\nFilterColumns.displayName = \"FilterColumns\";",".b1nvh7n2{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.b1nvh7n2 > a{margin-bottom:20px;}\n/*# sourceMappingURL=data:application/json;base64,*/"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./packages/core/src/data-editor/stories/data-editor-repros.stories.linaria.css!=!./node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./packages/core/src/data-editor/stories/data-editor-repros.stories.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_node_modules_linaria_webpack5_loader_lib_outputCssLoader_js_cacheProvider_data_editor_repros_stories_tsx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/@linaria/webpack5-loader/lib/outputCssLoader.js?cacheProvider=!./packages/core/src/data-editor/stories/data-editor-repros.stories.tsx");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_node_modules_linaria_webpack5_loader_lib_outputCssLoader_js_cacheProvider_data_editor_repros_stories_tsx__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z, options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_node_modules_linaria_webpack5_loader_lib_outputCssLoader_js_cacheProvider_data_editor_repros_stories_tsx__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_node_modules_linaria_webpack5_loader_lib_outputCssLoader_js_cacheProvider_data_editor_repros_stories_tsx__WEBPACK_IMPORTED_MODULE_6__/* ["default"].locals */ .Z.locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_7_use_1_node_modules_linaria_webpack5_loader_lib_outputCssLoader_js_cacheProvider_data_editor_repros_stories_tsx__WEBPACK_IMPORTED_MODULE_6__/* ["default"].locals */ .Z.locals : undefined);


/***/ })

}]);
//# sourceMappingURL=packages-core-src-data-editor-stories-data-editor-repros-stories.5514a8ef.iframe.bundle.js.map